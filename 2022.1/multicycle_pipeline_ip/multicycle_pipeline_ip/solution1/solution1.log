==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'fetch' (fetch.c:72:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'fetch' (fetch.c:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'fetch' (fetch.c:100:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job.44' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:193:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:211:5)
INFO: [HLS 214-131] Inlining function 'stage_job.44' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'get_input.43' into 'decode' (decode.c:200:5)
INFO: [HLS 214-131] Inlining function 'get_input.13' into 'issue' (issue.c:113:5)
INFO: [HLS 214-131] Inlining function 'set_output.15' into 'issue' (issue.c:144:5)
INFO: [HLS 214-131] Inlining function 'stage_job.14' into 'issue' (issue.c:135:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'execute_1' (execute_1.c:149:5)
INFO: [HLS 214-131] Inlining function 'set_output.36' into 'execute_1' (execute_1.c:227:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'execute_1' (execute_1.c:215:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:150:3)
INFO: [HLS 214-131] Inlining function 'get_input.27' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'set_output.29' into 'execute_2' (execute_2.c:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job.28' into 'execute_2' (execute_2.c:132:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.4' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.4' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.3' into 'mem_access' (mem_access.c:131:5)
INFO: [HLS 214-131] Inlining function 'set_output.40' into 'mem_access' (mem_access.c:161:5)
INFO: [HLS 214-131] Inlining function 'stage_job.4' into 'mem_access' (mem_access.c:146:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'write_back' (wb.c:144:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'write_back' (wb.c:145:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7239 ; free virtual = 17622
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7239 ; free virtual = 17622
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7232 ; free virtual = 17615
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7234 ; free virtual = 17608
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:26:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:149:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:111:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:143:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:235:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'cycle'... converting 3 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:78).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:82).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_2' (execute_2.c:63)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:21 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7201 ; free virtual = 17576
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:25 ; elapsed = 00:00:26 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7069 ; free virtual = 17444
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 26.4 seconds; current allocated memory: 330.583 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.328 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 332.475 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 332.665 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 333.336 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 334.657 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 335.942 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 338.723 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.194 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 343.239 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 344.572 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [284]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.44 seconds; current allocated memory: 345.493 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.109 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.28 seconds; current allocated memory: 349.383 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 354.517 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 355.070 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 355.720 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 355.788 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 355.878 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.7 seconds; current allocated memory: 361.413 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.55 seconds; current allocated memory: 370.088 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.27 seconds; current allocated memory: 500.761 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 504.124 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.300 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 530.433 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.96 seconds; current allocated memory: 572.587 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 596.783 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.84 seconds; current allocated memory: 619.618 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.15 seconds; current allocated memory: 641.450 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.79 seconds; current allocated memory: 656.940 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'cycle'.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 660.351 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/end_signal' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:169:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7601 ; free virtual = 18356
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7601 ; free virtual = 18356
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7603 ; free virtual = 18350
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7594 ; free virtual = 18344
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:189:1) in function 'execute_1'... converting 38 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7562 ; free virtual = 18313
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7429 ; free virtual = 18180
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.76 seconds; current allocated memory: 330.703 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.480 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.597 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 332.771 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.459 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 334.779 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.094 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 338.845 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 340.315 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.370 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 343.231 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.430 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (12.785ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'p_read1' (mem_access.c:109) [211]  (0 ns)
	'select' operation ('rv2_0', mem_access.c:116) [290]  (1.25 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0', mem_access.c:116 on array 'data_mem_2' [325]  (3.25 ns)
	blocking operation 8.28 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.39 seconds; current allocated memory: 345.367 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 347.487 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.34 seconds; current allocated memory: 348.761 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 353.924 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.477 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 355.098 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 355.169 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 355.258 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 360.822 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.66 seconds; current allocated memory: 369.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.52 seconds; current allocated memory: 500.222 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 503.557 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 509.764 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 529.933 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1.03 seconds; current allocated memory: 572.048 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.99 seconds; current allocated memory: 595.960 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 617.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.12 seconds; current allocated memory: 638.909 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 654.483 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 657.859 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:169:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7405 ; free virtual = 18155
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7405 ; free virtual = 18155
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7405 ; free virtual = 18148
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7398 ; free virtual = 18141
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:189:1) in function 'execute_1'... converting 38 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7365 ; free virtual = 18110
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7238 ; free virtual = 17978
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.47 seconds; current allocated memory: 330.886 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.632 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 332.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 332.924 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 333.611 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 334.961 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.247 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 338.997 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 340.468 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.552 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 343.414 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.583 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (12.785ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'p_read1' (mem_access.c:109) [211]  (0 ns)
	'select' operation ('rv2_0', mem_access.c:116) [290]  (1.25 ns)
	'store' operation ('data_mem_0_addr_4_write_ln52', mem.c:52) of variable 'rv2_0', mem_access.c:116 on array 'data_mem_0' [319]  (3.25 ns)
	blocking operation 8.28 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 345.521 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 347.641 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.27 seconds; current allocated memory: 348.945 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.079 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 354.633 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 355.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 355.354 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 355.444 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.71 seconds; current allocated memory: 360.979 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.61 seconds; current allocated memory: 369.669 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.28 seconds; current allocated memory: 500.365 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 503.728 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 509.906 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 530.077 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1 seconds; current allocated memory: 572.224 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 596.137 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.7 seconds; current allocated memory: 617.913 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.16 seconds; current allocated memory: 639.089 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.75 seconds; current allocated memory: 654.680 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 658.042 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:169:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7584 ; free virtual = 17894
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7584 ; free virtual = 17894
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7574 ; free virtual = 17888
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7567 ; free virtual = 17881
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:189:1) in function 'execute_1'... converting 38 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7533 ; free virtual = 17850
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 7406 ; free virtual = 17718
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.5 seconds; current allocated memory: 330.709 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.484 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.601 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 332.775 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 333.463 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 334.783 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 336.098 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 338.849 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 340.320 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.376 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 343.237 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.437 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (12.785ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'p_read1' (mem_access.c:109) [211]  (0 ns)
	'select' operation ('rv2_0', mem_access.c:116) [290]  (1.25 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0', mem_access.c:116 on array 'data_mem_2' [325]  (3.25 ns)
	blocking operation 8.28 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 345.374 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 347.494 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.32 seconds; current allocated memory: 348.768 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 353.931 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 354.484 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 355.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 355.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 355.265 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.71 seconds; current allocated memory: 360.830 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.6 seconds; current allocated memory: 369.520 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.34 seconds; current allocated memory: 500.230 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 503.564 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 509.769 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 529.937 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 572.052 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 595.964 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.71 seconds; current allocated memory: 617.738 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.15 seconds; current allocated memory: 638.913 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 654.487 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 657.863 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:169:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6025 ; free virtual = 16471
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6025 ; free virtual = 16471
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6016 ; free virtual = 16464
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6010 ; free virtual = 16458
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:189:1) in function 'execute_1'... converting 38 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5977 ; free virtual = 16426
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:25 ; elapsed = 00:00:26 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5837 ; free virtual = 16284
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_store.1' to 'mem_store_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.95 seconds; current allocated memory: 340.062 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 341.807 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 341.925 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 342.115 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 342.787 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 344.137 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 345.423 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 348.174 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 349.645 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 351.729 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 352.591 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 353.762 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_store_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_store.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 353.919 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 354.196 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 355.027 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 356.489 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.27 seconds; current allocated memory: 357.763 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 362.896 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 363.478 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 364.099 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 364.200 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 364.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 369.795 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.58 seconds; current allocated memory: 378.499 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.2 seconds; current allocated memory: 509.209 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 512.560 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 518.768 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 538.940 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1 seconds; current allocated memory: 581.042 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 1.01 seconds; current allocated memory: 604.939 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_store_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_store_1'.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 610.037 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 627.515 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.14 seconds; current allocated memory: 647.530 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.74 seconds; current allocated memory: 663.098 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 666.468 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:169:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5772 ; free virtual = 16307
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5772 ; free virtual = 16307
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5760 ; free virtual = 16300
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5751 ; free virtual = 16292
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:189:1) in function 'execute_1'... converting 38 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:21 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5721 ; free virtual = 16262
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:25 ; elapsed = 00:00:26 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5579 ; free virtual = 16114
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_store.1' to 'mem_store_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_load.1' to 'mem_load_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 26.4 seconds; current allocated memory: 350.225 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 351.972 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 352.089 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 352.264 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 352.951 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 354.301 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 355.587 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 358.339 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 359.810 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 361.894 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 362.756 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 363.926 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_store_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_store.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 364.084 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 364.361 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_load_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_load.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 364.467 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 364.595 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 365.385 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 366.829 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.29 seconds; current allocated memory: 368.132 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 373.267 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 373.849 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 374.470 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 374.541 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 374.659 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (12.2758ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'call' operation ('call_ret5', multicycle_pipeline_ip.c:187) to 'mem_access.1' [1788]  (5.07 ns)
	'phi' operation ('mem_out_to_wb.is_valid') with incoming values : ('mem_out_to_wb.is_valid', multicycle_pipeline_ip.c:187) [788]  (0 ns)
	'call' operation ('call_ret1', multicycle_pipeline_ip.c:132) to 'new_cycle' [1225]  (0 ns)
	'call' operation ('call_ret3', multicycle_pipeline_ip.c:170) to 'execute_1' [1590]  (7.21 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.88 seconds; current allocated memory: 380.175 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.7 seconds; current allocated memory: 389.047 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.51 seconds; current allocated memory: 519.641 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 522.979 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 529.186 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 549.265 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1.01 seconds; current allocated memory: 591.385 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.96 seconds; current allocated memory: 615.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_store_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_store_1'.
INFO: [HLS 200-111]  Elapsed time: 0.46 seconds; current allocated memory: 620.337 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_load_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:149:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:227:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:215:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:150:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:131:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:161:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:146:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:144:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:145:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5664 ; free virtual = 16203
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5664 ; free virtual = 16203
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5651 ; free virtual = 16196
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5643 ; free virtual = 16189
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:235:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5612 ; free virtual = 16158
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5483 ; free virtual = 16024
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.61 seconds; current allocated memory: 331.184 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.959 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.076 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 333.938 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.257 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.28 seconds; current allocated memory: 336.572 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 339.324 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.795 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.850 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 343.712 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.911 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_0_addr_4_write_ln52', mem.c:52) of variable 'rv2_0' on array 'data_mem_0' [278]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.4 seconds; current allocated memory: 345.803 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.419 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.27 seconds; current allocated memory: 349.693 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.856 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 355.409 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 356.030 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 356.101 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 356.190 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 361.754 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.58 seconds; current allocated memory: 370.319 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.34 seconds; current allocated memory: 500.778 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 504.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.350 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 530.484 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.99 seconds; current allocated memory: 572.620 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.99 seconds; current allocated memory: 596.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.76 seconds; current allocated memory: 618.377 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.18 seconds; current allocated memory: 640.178 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.81 seconds; current allocated memory: 655.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.58 seconds; current allocated memory: 659.034 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:149:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:227:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:215:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:150:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:131:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:161:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:146:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5124 ; free virtual = 15758
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5124 ; free virtual = 15758
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5113 ; free virtual = 15751
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5105 ; free virtual = 15744
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:235:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5072 ; free virtual = 15713
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4945 ; free virtual = 15581
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.93 seconds; current allocated memory: 331.180 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.955 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.073 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 333.247 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.934 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.254 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.569 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.320 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 340.791 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.845 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 343.706 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.906 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [284]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.41 seconds; current allocated memory: 345.798 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 348.415 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.23 seconds; current allocated memory: 349.689 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.852 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 355.406 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 356.026 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 356.097 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 356.186 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 361.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.55 seconds; current allocated memory: 370.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.33 seconds; current allocated memory: 500.774 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 504.140 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.347 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 530.480 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 572.616 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 1.04 seconds; current allocated memory: 596.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.82 seconds; current allocated memory: 618.373 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.3 seconds; current allocated memory: 640.174 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.83 seconds; current allocated memory: 655.730 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 659.030 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:149:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:227:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:215:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:150:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:131:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:161:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:146:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5110 ; free virtual = 15738
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5110 ; free virtual = 15738
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5097 ; free virtual = 15732
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5089 ; free virtual = 15724
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:235:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5058 ; free virtual = 15694
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4931 ; free virtual = 15561
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.84 seconds; current allocated memory: 331.189 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.964 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 333.081 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.256 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.943 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.263 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.579 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.329 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.800 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.854 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 343.716 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.916 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [284]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.4 seconds; current allocated memory: 345.808 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.423 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.29 seconds; current allocated memory: 349.698 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.861 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 355.414 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 356.035 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 356.105 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 356.194 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 361.759 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.63 seconds; current allocated memory: 370.325 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.43 seconds; current allocated memory: 500.784 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 504.148 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.356 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 530.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 572.625 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 596.521 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 618.382 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.12 seconds; current allocated memory: 640.184 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 655.740 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 659.040 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:149:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:227:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:215:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:150:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:148:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:133:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5064 ; free virtual = 15708
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5064 ; free virtual = 15708
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5053 ; free virtual = 15702
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5046 ; free virtual = 15695
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:235:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5024 ; free virtual = 15664
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4895 ; free virtual = 15532
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.8 seconds; current allocated memory: 330.694 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.469 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.587 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 332.761 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.448 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 334.769 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.28 seconds; current allocated memory: 336.084 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 338.835 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.306 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 342.361 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 343.222 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (13.763ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'p_read26' (mem_access.c:109) [186]  (0 ns)
	'select' operation ('mem_status.decoded_instruction.is_store', mem_access.c:116) [270]  (0.993 ns)
	'xor' operation ('xor_ln120', mem_access.c:120) [293]  (0 ns)
	'and' operation ('and_ln120', mem_access.c:120) [294]  (0.978 ns)
	'or' operation ('or_ln127', mem_access.c:127) [295]  (0.978 ns)
	multiplexor before 'phi' operation ('phi_ln150', mem_access.c:150) with incoming values : ('p_read_109', mem_access.c:109) ('rv2_0', mem_access.c:116) ('data_mem_0_load', mem.c:14) [364]  (1.91 ns)
	blocking operation 8.91 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 345.361 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 347.485 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.28 seconds; current allocated memory: 348.760 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 353.923 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 354.476 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 355.096 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 355.167 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 355.256 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.67 seconds; current allocated memory: 360.821 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.57 seconds; current allocated memory: 369.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.24 seconds; current allocated memory: 500.221 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 503.554 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 509.761 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 529.928 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.96 seconds; current allocated memory: 572.044 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.99 seconds; current allocated memory: 595.955 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 617.736 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.19 seconds; current allocated memory: 638.961 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.75 seconds; current allocated memory: 654.506 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.54 seconds; current allocated memory: 657.866 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:149:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:227:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:215:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:150:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:126:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:151:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:136:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5043 ; free virtual = 15698
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5043 ; free virtual = 15698
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5030 ; free virtual = 15691
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5022 ; free virtual = 15684
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:235:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:21 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5000 ; free virtual = 15652
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:25 ; elapsed = 00:00:26 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4868 ; free virtual = 15520
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 26.16 seconds; current allocated memory: 331.212 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.987 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 333.104 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.294 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 333.966 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.286 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.601 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 339.353 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.823 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.878 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.32 seconds; current allocated memory: 343.740 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.940 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [286]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.39 seconds; current allocated memory: 345.834 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 348.439 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.22 seconds; current allocated memory: 349.713 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.877 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 355.430 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 356.051 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 356.121 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 356.210 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 361.774 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.54 seconds; current allocated memory: 370.341 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.19 seconds; current allocated memory: 500.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 504.166 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.356 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 530.401 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 572.554 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 596.465 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 618.407 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.13 seconds; current allocated memory: 640.195 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 655.781 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 659.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:95:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:88:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:122:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4971 ; free virtual = 15658
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4971 ; free virtual = 15658
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4958 ; free virtual = 15652
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4949 ; free virtual = 15643
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:99:1) in function 'execute_2'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4918 ; free virtual = 15613
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4791 ; free virtual = 15480
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.7 seconds; current allocated memory: 331.188 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.963 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.081 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.271 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 333.942 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 335.262 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.578 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.329 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.806 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.865 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 343.716 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 344.905 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [286]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.4 seconds; current allocated memory: 345.800 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.405 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.22 seconds; current allocated memory: 349.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.843 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 355.396 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 356.017 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 356.088 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 356.177 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 361.742 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.53 seconds; current allocated memory: 370.291 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.17 seconds; current allocated memory: 500.765 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 504.099 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.304 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 530.348 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.96 seconds; current allocated memory: 572.510 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 596.439 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.71 seconds; current allocated memory: 618.280 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.14 seconds; current allocated memory: 640.127 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 655.653 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 659.012 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:91:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:84:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:122:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4951 ; free virtual = 15638
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4951 ; free virtual = 15638
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4938 ; free virtual = 15631
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4932 ; free virtual = 15625
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:95:1) in function 'execute_2'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4900 ; free virtual = 15595
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4774 ; free virtual = 15463
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.69 seconds; current allocated memory: 331.191 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.967 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.084 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.274 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 333.946 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.266 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.581 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 339.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 340.808 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.869 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 343.720 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 344.908 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [286]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.39 seconds; current allocated memory: 345.803 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.408 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.26 seconds; current allocated memory: 349.682 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.844 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 355.397 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 356.018 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 356.089 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 356.178 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.71 seconds; current allocated memory: 361.742 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.54 seconds; current allocated memory: 370.292 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.17 seconds; current allocated memory: 500.767 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 504.100 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.306 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 530.351 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 572.515 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 596.444 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.77 seconds; current allocated memory: 618.284 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.12 seconds; current allocated memory: 640.131 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 655.658 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 659.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:177:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:165:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:122:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4682 ; free virtual = 15484
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4682 ; free virtual = 15484
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4672 ; free virtual = 15478
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4665 ; free virtual = 15470
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:185:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_2' (execute_2.c:63)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4632 ; free virtual = 15439
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:25 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4503 ; free virtual = 15306
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.89 seconds; current allocated memory: 331.370 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.145 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 333.262 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.452 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 334.124 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.444 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.28 seconds; current allocated memory: 336.759 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 339.510 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.981 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 343.037 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 344.026 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 345.388 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [286]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.45 seconds; current allocated memory: 346.282 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 348.887 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.46 seconds; current allocated memory: 350.161 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 355.323 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 355.877 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 356.497 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 356.567 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 356.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.76 seconds; current allocated memory: 362.221 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.74 seconds; current allocated memory: 370.880 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.44 seconds; current allocated memory: 501.553 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 504.903 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 511.110 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 531.153 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1.07 seconds; current allocated memory: 573.291 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 1.08 seconds; current allocated memory: 597.500 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.95 seconds; current allocated memory: 620.373 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.26 seconds; current allocated memory: 642.220 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.82 seconds; current allocated memory: 657.776 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 661.106 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:177:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:165:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:125:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5962 ; free virtual = 16847
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5962 ; free virtual = 16847
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5951 ; free virtual = 16841
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5945 ; free virtual = 16834
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:185:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_2' (execute_2.c:63)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:21 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5912 ; free virtual = 16803
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:25 ; elapsed = 00:00:26 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5783 ; free virtual = 16670
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 26.71 seconds; current allocated memory: 331.374 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 333.150 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.268 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.442 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 334.129 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 335.449 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 336.764 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.515 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.986 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 343.042 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 344.031 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 345.393 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_0_addr_4_write_ln52', mem.c:52) of variable 'rv2_0' on array 'data_mem_0' [278]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.43 seconds; current allocated memory: 346.285 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.901 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.22 seconds; current allocated memory: 350.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 355.338 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 355.892 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 356.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 356.583 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 356.672 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 362.236 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.58 seconds; current allocated memory: 370.880 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.46 seconds; current allocated memory: 501.553 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 504.917 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 511.123 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 531.257 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 573.394 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.96 seconds; current allocated memory: 597.604 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.84 seconds; current allocated memory: 620.380 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.13 seconds; current allocated memory: 642.214 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.74 seconds; current allocated memory: 657.733 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 661.099 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:125:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5804 ; free virtual = 16773
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5804 ; free virtual = 16773
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5794 ; free virtual = 16767
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:18 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5787 ; free virtual = 16760
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_2' (execute_2.c:63)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:21 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5755 ; free virtual = 16729
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:26 ; elapsed = 00:00:27 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5625 ; free virtual = 16596
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 27.49 seconds; current allocated memory: 331.375 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.150 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.267 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.457 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 334.128 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 335.449 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 336.764 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 340.992 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 343.053 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.4 seconds; current allocated memory: 344.042 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 345.404 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [284]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 346.296 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 348.912 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.45 seconds; current allocated memory: 350.186 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 355.350 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 355.904 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 356.524 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 356.595 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 356.684 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.75 seconds; current allocated memory: 362.248 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.71 seconds; current allocated memory: 370.925 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.49 seconds; current allocated memory: 501.598 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 504.931 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 511.137 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 531.270 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1.06 seconds; current allocated memory: 573.433 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 1.09 seconds; current allocated memory: 597.694 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.94 seconds; current allocated memory: 620.500 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.23 seconds; current allocated memory: 642.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.79 seconds; current allocated memory: 657.858 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 661.203 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:91:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:84:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:125:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5786 ; free virtual = 16673
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5786 ; free virtual = 16673
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5775 ; free virtual = 16667
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5767 ; free virtual = 16659
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:95:1) in function 'execute_2'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5735 ; free virtual = 16628
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5608 ; free virtual = 16497
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.72 seconds; current allocated memory: 331.178 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 333.070 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.260 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 333.932 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.252 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 336.568 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 339.319 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.4 seconds; current allocated memory: 340.795 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 342.856 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 343.707 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 344.895 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [284]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.44 seconds; current allocated memory: 345.788 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.404 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.52 seconds; current allocated memory: 349.679 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.842 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 355.395 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 356.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 356.086 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 356.176 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 361.740 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.51 seconds; current allocated memory: 370.305 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.31 seconds; current allocated memory: 500.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 504.077 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 510.268 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 530.438 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 572.601 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.99 seconds; current allocated memory: 596.530 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 618.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.12 seconds; current allocated memory: 640.121 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.78 seconds; current allocated memory: 655.611 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.59 seconds; current allocated memory: 659.006 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:125:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4592 ; free virtual = 15577
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4592 ; free virtual = 15577
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4581 ; free virtual = 15571
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4573 ; free virtual = 15563
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4541 ; free virtual = 15532
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 4410 ; free virtual = 15398
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.01 seconds; current allocated memory: 330.990 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.764 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 332.882 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 333.056 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.744 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.063 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 336.378 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 339.129 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 340.606 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.666 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 343.407 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 344.460 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [284]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 345.351 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 347.967 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.32 seconds; current allocated memory: 349.241 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 354.404 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.958 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 355.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 355.649 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 355.738 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 361.303 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.54 seconds; current allocated memory: 369.791 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.29 seconds; current allocated memory: 500.212 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 503.524 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 509.715 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 529.773 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 571.937 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 595.590 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.62 seconds; current allocated memory: 616.601 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.11 seconds; current allocated memory: 638.432 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 653.952 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 657.289 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:122:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:143:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:128:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 2508 ; free virtual = 13560
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 2508 ; free virtual = 13560
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 2497 ; free virtual = 13553
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 2490 ; free virtual = 13547
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 2458 ; free virtual = 13515
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 2329 ; free virtual = 13383
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.33 seconds; current allocated memory: 330.985 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.759 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 332.877 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.067 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.738 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.059 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.374 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.125 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 340.602 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 342.663 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 343.404 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 344.457 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [286]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 345.352 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 347.956 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.3 seconds; current allocated memory: 349.230 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 354.393 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 354.947 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 355.567 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 355.638 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 355.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.7 seconds; current allocated memory: 361.291 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.51 seconds; current allocated memory: 369.794 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.31 seconds; current allocated memory: 500.200 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 503.496 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 509.702 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.54 seconds; current allocated memory: 529.673 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1.04 seconds; current allocated memory: 571.836 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 1.07 seconds; current allocated memory: 595.504 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 616.612 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.15 seconds; current allocated memory: 638.444 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 653.979 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 657.300 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:123:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 8847 ; free virtual = 19298
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 8847 ; free virtual = 19298
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 8836 ; free virtual = 19292
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 8829 ; free virtual = 19284
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:19 ; elapsed = 00:00:20 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 8797 ; free virtual = 19253
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:24 ; elapsed = 00:00:25 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 8668 ; free virtual = 19122
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 25.78 seconds; current allocated memory: 330.986 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.760 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.877 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 333.051 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 333.739 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 335.059 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 336.374 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.125 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.39 seconds; current allocated memory: 340.602 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 342.662 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 343.403 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 344.456 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_0_addr_4_write_ln52', mem.c:52) of variable 'rv2_0' on array 'data_mem_0' [278]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.4 seconds; current allocated memory: 345.351 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 347.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.33 seconds; current allocated memory: 349.228 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 354.391 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 354.944 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 355.565 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 355.636 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 355.725 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.76 seconds; current allocated memory: 361.290 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.65 seconds; current allocated memory: 369.776 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.35 seconds; current allocated memory: 500.198 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 503.494 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 509.701 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 529.757 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 1.03 seconds; current allocated memory: 571.919 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 1.07 seconds; current allocated memory: 595.572 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.67 seconds; current allocated memory: 616.585 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.22 seconds; current allocated memory: 638.431 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.78 seconds; current allocated memory: 653.951 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 657.272 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:123:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6965 ; free virtual = 17543
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6965 ; free virtual = 17543
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6957 ; free virtual = 17537
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6949 ; free virtual = 17530
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:21 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6916 ; free virtual = 17499
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:25 ; elapsed = 00:00:26 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6788 ; free virtual = 17367
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 26.56 seconds; current allocated memory: 330.987 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 332.762 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 332.879 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 333.054 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.741 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 335.062 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.377 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.127 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 340.604 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 342.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 343.405 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 344.458 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_0_addr_4_write_ln52', mem.c:52) of variable 'rv2_0' on array 'data_mem_0' [278]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 345.353 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 347.956 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.33 seconds; current allocated memory: 349.230 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 354.393 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 354.946 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 355.567 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 355.638 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 355.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 361.291 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.5 seconds; current allocated memory: 369.779 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.22 seconds; current allocated memory: 500.201 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 503.499 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 509.705 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 529.766 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 571.930 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.97 seconds; current allocated memory: 595.581 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.61 seconds; current allocated memory: 616.595 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.1 seconds; current allocated memory: 638.441 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.73 seconds; current allocated memory: 653.961 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 657.281 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:134:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:179:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:167:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:135:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:73:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:87:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:45:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:56:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:117:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:123:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:130:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:113:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6540 ; free virtual = 17195
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6540 ; free virtual = 17195
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:15 ; elapsed = 00:00:16 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6531 ; free virtual = 17189
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:16 ; elapsed = 00:00:17 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6524 ; free virtual = 17182
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:103:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:61:9) to (execute_2.c:98:1) in function 'execute_2'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:123:27) to (execute_1.c:187:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:10:1)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:20 ; elapsed = 00:00:21 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6501 ; free virtual = 17150
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:26 ; elapsed = 00:00:27 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6373 ; free virtual = 17019
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 26.94 seconds; current allocated memory: 331.137 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 332.882 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 333.000 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 333.174 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 333.862 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 335.212 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 336.498 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 339.249 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 340.726 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 342.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 343.557 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 344.581 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [246]  (0 ns)
	'store' operation ('data_mem_0_addr_4_write_ln52', mem.c:52) of variable 'rv2_0' on array 'data_mem_0' [278]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 345.476 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 348.079 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 2.18 seconds; current allocated memory: 349.383 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 354.517 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 355.071 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 355.692 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 355.792 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 355.882 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.71 seconds; current allocated memory: 361.417 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.57 seconds; current allocated memory: 369.904 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 3.2 seconds; current allocated memory: 500.311 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 503.638 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 509.816 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 529.875 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 572.069 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.98 seconds; current allocated memory: 595.723 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.65 seconds; current allocated memory: 616.738 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 1.16 seconds; current allocated memory: 638.585 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 654.107 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 657.429 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:156:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:201:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:189:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:157:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:91:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:112:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:105:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:55:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:66:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:131:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:137:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:141:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:124:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:12 ; elapsed = 00:00:13 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6451 ; free virtual = 17100
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:12 ; elapsed = 00:00:13 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6451 ; free virtual = 17100
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:12 ; elapsed = 00:00:13 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6444 ; free virtual = 17095
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:13 ; elapsed = 00:00:14 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6439 ; free virtual = 17091
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:115:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:79:9) to (execute_2.c:116:1) in function 'execute_2'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:136:29) to (execute_1.c:209:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:143)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:14 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6403 ; free virtual = 17063
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:17 ; elapsed = 00:00:18 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 6310 ; free virtual = 16960
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 17.97 seconds; current allocated memory: 290.785 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 291.698 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 291.815 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 292.005 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 292.678 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 293.998 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 295.314 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 298.065 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 299.117 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 300.557 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 300.726 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 300.985 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [66]  (0 ns)
	'store' operation ('data_mem_2_addr_4_write_ln56', mem.c:56) of variable 'rv2_0' on array 'data_mem_2' [104]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 301.358 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 302.248 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 302.925 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 305.739 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 306.292 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 306.912 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 306.982 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 307.071 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.41 seconds; current allocated memory: 310.329 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.08 seconds; current allocated memory: 315.715 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 1.05 seconds; current allocated memory: 347.360 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 350.168 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 356.375 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 376.457 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 394.328 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.62 seconds; current allocated memory: 401.166 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 403.820 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 412.089 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.43 seconds; current allocated memory: 421.774 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 425.205 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.c' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.c' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.c' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.c' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.c' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.c' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.c' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.c' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.c' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.c' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.c' ... 
INFO: [HLS 200-10] Analyzing design file 'print.c' ... 
INFO: [HLS 200-10] Analyzing design file 'type.c' ... 
INFO: [HLS 200-10] Analyzing design file 'update.c' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.c' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'get_input.7' into 'fetch' (fetch.c:55:5)
INFO: [HLS 214-131] Inlining function 'set_output.9' into 'fetch' (fetch.c:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job.8' into 'fetch' (fetch.c:69:5)
INFO: [HLS 214-131] Inlining function 'type_00' into 'type' (type.c:63:23)
INFO: [HLS 214-131] Inlining function 'type_11' into 'type' (type.c:66:23)
INFO: [HLS 214-131] Inlining function 'type_10' into 'type' (type.c:65:23)
INFO: [HLS 214-131] Inlining function 'type_01' into 'type' (type.c:64:23)
INFO: [HLS 214-131] Inlining function 'type' into 'decode_instruction' (decode.c:76:15)
INFO: [HLS 214-131] Inlining function 'j_immediate' into 'decode_instruction' (decode.c:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate' into 'decode_instruction' (decode.c:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate' into 'decode_instruction' (decode.c:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate' into 'decode_instruction' (decode.c:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate' into 'decode_instruction' (decode.c:84:28)
INFO: [HLS 214-131] Inlining function 'decode_instruction' into 'stage_job' (decode.c:121:2)
INFO: [HLS 214-131] Inlining function 'set_bits' into 'decode' (decode.c:184:3)
INFO: [HLS 214-131] Inlining function 'set_output' into 'decode' (decode.c:202:5)
INFO: [HLS 214-131] Inlining function 'stage_job' into 'decode' (decode.c:193:5)
INFO: [HLS 214-131] Inlining function 'get_input' into 'decode' (decode.c:191:5)
INFO: [HLS 214-131] Inlining function 'get_input.20' into 'issue' (issue.c:90:5)
INFO: [HLS 214-131] Inlining function 'set_output.22' into 'issue' (issue.c:107:5)
INFO: [HLS 214-131] Inlining function 'stage_job.21' into 'issue' (issue.c:98:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result' into 'compute' (execute_1.c:39:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc' into 'compute' (execute_1.c:51:16)
INFO: [HLS 214-131] Inlining function 'compute_result' into 'compute' (execute_1.c:47:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result' into 'compute' (execute_1.c:43:14)
INFO: [HLS 214-131] Inlining function 'get_input.1' into 'execute_1' (execute_1.c:156:5)
INFO: [HLS 214-131] Inlining function 'set_output.3' into 'execute_1' (execute_1.c:201:5)
INFO: [HLS 214-131] Inlining function 'stage_job.2' into 'execute_1' (execute_1.c:189:5)
INFO: [HLS 214-131] Inlining function 'compute' into 'execute_1' (execute_1.c:157:3)
INFO: [HLS 214-131] Inlining function 'get_input.4' into 'execute_2' (execute_2.c:91:5)
INFO: [HLS 214-131] Inlining function 'set_output.6' into 'execute_2' (execute_2.c:112:5)
INFO: [HLS 214-131] Inlining function 'stage_job.5' into 'execute_2' (execute_2.c:105:5)
INFO: [HLS 214-131] Inlining function 'mem_load' into 'stage_job.24' (mem_access.c:55:5)
INFO: [HLS 214-131] Inlining function 'mem_store' into 'stage_job.24' (mem_access.c:66:5)
INFO: [HLS 214-131] Inlining function 'get_input.23' into 'mem_access' (mem_access.c:131:5)
INFO: [HLS 214-131] Inlining function 'set_output.25' into 'mem_access' (mem_access.c:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job.24' into 'mem_access' (mem_access.c:137:5)
INFO: [HLS 214-131] Inlining function 'get_input.34' into 'write_back' (wb.c:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job.35' into 'write_back' (wb.c:141:5)
INFO: [HLS 214-178] Inlining function 'build_word' into 'write_back' (wb.c:124:0)
INFO: [HLS 214-178] Inlining function 'init_fetch_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_decode_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_issue_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_1_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_execute_2_status' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.c:48:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:12 ; elapsed = 00:00:13 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5790 ; free virtual = 16552
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:12 ; elapsed = 00:00:13 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5790 ; free virtual = 16552
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:12 ; elapsed = 00:00:13 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5782 ; free virtual = 16546
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:13 ; elapsed = 00:00:14 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5767 ; free virtual = 16537
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'end_signal' (multicycle_pipeline_ip.c:48) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_21_1' (multicycle_pipeline_ip.c:20) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'update' (update.c:4).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' (update.c:8) in function 'update' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.c:57) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed' (multicycle_pipeline_ip.c:60) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.c:10:17) to (wb.c:115:6) in function 'write_back'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (update.c:4:13) to (update.c:16:1) in function 'update'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.c:27:29) to (multicycle_pipeline_ip.c:40:1) in function 'stat_and_exit_cond'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.c:65:50) to (issue.c:112:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.c:80:1) in function 'fetch.1'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.c:79:9) to (execute_2.c:116:1) in function 'execute_2'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.c:136:29) to (execute_1.c:209:1) in function 'execute_1'... converting 40 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.c:117:19) to (decode.c:78:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:69).
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' (issue.c:73).
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.c:143)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.c:174)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:00:15 ; elapsed = 00:00:15 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5747 ; free virtual = 16510
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:00:17 ; elapsed = 00:00:18 . Memory (MB): peak = 1663.055 ; gain = 1229.770 ; free physical = 5656 ; free virtual = 16408
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
WARNING: [SYN 201-103] Legalizing function name 'fetch.1' to 'fetch_1'.
WARNING: [SYN 201-103] Legalizing function name 'mem_access.1' to 'mem_access_1'.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 18.07 seconds; current allocated memory: 290.935 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 291.818 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 291.936 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 292.110 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 292.799 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 294.148 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.28 seconds; current allocated memory: 295.435 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 298.187 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 299.238 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 300.709 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 300.878 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 301.107 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access.1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access_1' consists of the following:	wire read on port 'mem_in_from_execute_1_2' [66]  (0 ns)
	'store' operation ('data_mem_0_addr_4_write_ln52', mem.c:52) of variable 'rv2_0' on array 'data_mem_0' [98]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 301.481 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 302.370 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 303.077 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 305.861 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 306.415 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 307.035 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'stat_and_exit_cond'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 307.135 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 307.224 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_21_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_124_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.41 seconds; current allocated memory: 310.453 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.09 seconds; current allocated memory: 315.840 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 1.09 seconds; current allocated memory: 347.470 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch_1'.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 350.309 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 356.502 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.53 seconds; current allocated memory: 376.556 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 394.427 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 401.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access_1'.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 403.968 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 412.269 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'update'.
INFO: [HLS 200-111]  Elapsed time: 0.42 seconds; current allocated memory: 421.940 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'stat_and_exit_cond' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'stat_and_exit_cond'.
INFO: [HLS 200-111]  Elapsed time: 0.48 seconds; current allocated memory: 425.405 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'update.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.175.178.590.694.907)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.175.178.590.694.907)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.175.178.590.694.907)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.175.178.590.694.907)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.175.178.590.694.907)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:22 ; elapsed = 00:01:25 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6797 ; free virtual = 17819
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:22 ; elapsed = 00:01:25 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6797 ; free virtual = 17819
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:22 ; elapsed = 00:01:26 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6778 ; free virtual = 17804
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:22 ; elapsed = 00:01:26 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6758 ; free virtual = 17787
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lock_unlock_reg' (lock_unlock_reg.cpp:4:5).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'lock_unlock_reg' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:33:19) to (multicycle_pipeline_ip.cpp:40:1) in function 'running_cond_update'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 45 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:4:13) to (lock_unlock_reg.cpp:18:1) in function 'lock_unlock_reg'... converting 63 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...21 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:23 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6716 ; free virtual = 17747
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:24 ; elapsed = 00:01:28 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6684 ; free virtual = 17716
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lock_unlock_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'lock_unlock_reg'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 87.86 seconds; current allocated memory: 288.866 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 289.526 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'statistic_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'statistic_update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 289.574 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 289.648 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'running_cond_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'running_cond_update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 289.724 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 289.810 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (11.176ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:161) [538]  (0 ns)
	'xor' operation ('xor_ln756_3') [897]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:132) [947]  (0.978 ns)
	'select' operation ('e_1_state.decoded_instruction.is_r_type.V', execute_1.cpp:133) [958]  (0.993 ns)
	'select' operation ('rv2', execute_1.cpp:133) [995]  (0.698 ns)
	'add' operation ('result', compute.cpp:52) [1006]  (2.55 ns)
	'select' operation ('result', compute.cpp:48) [1009]  (0.993 ns)
	blocking operation 3.98 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.66 seconds; current allocated memory: 293.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'update.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:23 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6717 ; free virtual = 17742
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:23 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6717 ; free virtual = 17742
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:23 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6699 ; free virtual = 17727
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:24 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6681 ; free virtual = 17711
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 45 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:210:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...21 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:25 ; elapsed = 00:01:28 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6637 ; free virtual = 17671
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:25 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6628 ; free virtual = 17663
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (11.128ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'icmp' operation ('icmp_ln48', compute.cpp:48) [1013]  (1.13 ns)
	'select' operation ('result', compute.cpp:48) [1014]  (0.993 ns)
	'select' operation ('result', compute.cpp:48) [1016]  (0 ns)
	'select' operation ('result', compute.cpp:48) [1017]  (4.42 ns)
	'select' operation ('result', compute.cpp:49) [1033]  (0.698 ns)
	blocking operation 3.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 89.76 seconds; current allocated memory: 262.223 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 270.606 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 'ap_ctrl_none'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem' and 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.78 seconds; current allocated memory: 278.006 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:30 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6556 ; free virtual = 17614
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'update.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:10 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6726 ; free virtual = 17741
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:10 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6725 ; free virtual = 17741
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6701 ; free virtual = 17721
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6676 ; free virtual = 17698
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6620 ; free virtual = 17651
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6549 ; free virtual = 17574
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.62 seconds; current allocated memory: 329.034 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.252 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	'icmp' operation ('decoded_instruction.is_lui.V') [117]  (1.36 ns)
	'xor' operation ('xor_ln878') [118]  (0.978 ns)
	'xor' operation ('xor_ln32', decode.cpp:32) [121]  (0 ns)
	'xor' operation ('xor_ln32_1', decode.cpp:32) [122]  (0.978 ns)
	blocking operation 8.27 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 329.979 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 331.350 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 332.664 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 335.442 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 336.503 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 338.006 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 338.208 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.489 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' [66]  (0 ns)
	'store' operation ('data_mem_0_addr_3_write_ln53', mem.cpp:53) of variable 'rv2_0' on array 'data_mem_0' [98]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 338.865 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 339.726 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 340.463 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 343.189 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (18.5518ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'call' operation ('decode_ret', multicycle_pipeline_ip.cpp:162) to 'decode' [866]  (5.41 ns)
	'phi' operation ('d_to_i.is_valid.V') with incoming values : ('d_to_i.is_valid.V', multicycle_pipeline_ip.cpp:162) [617]  (0 ns)
	'call' operation ('issue_ret', multicycle_pipeline_ip.cpp:168) to 'issue' [909]  (5.94 ns)
	'phi' operation ('i_to_e_1.is_valid.V') with incoming values : ('i_to_e_1.is_valid.V', multicycle_pipeline_ip.cpp:168) [614]  (0 ns)
	'call' operation ('call_ret1', multicycle_pipeline_ip.cpp:176) to 'execute_1' [986]  (7.21 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.65 seconds; current allocated memory: 346.947 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.94 seconds; current allocated memory: 353.717 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 354.219 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 360.612 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 380.504 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 397.831 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.61 seconds; current allocated memory: 404.111 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 406.863 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 416.172 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 'ap_ctrl_none'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem' and 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: ==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.18.22)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:213:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.18.22)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:213:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1290.1294)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1290.1294)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1290.1294)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:213:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:170:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:213:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:170:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5965 ; free virtual = 17065
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5965 ; free virtual = 17065
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5945 ; free virtual = 17052
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:12 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5929 ; free virtual = 17039
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_132_1' (multicycle_pipeline_ip.cpp:88) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5890 ; free virtual = 17001
WARNING: [XFORM 203-561] 'VITIS_LOOP_132_1' (multicycle_pipeline_ip.cpp:88:19) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5886 ; free virtual = 16998
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:213:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:190:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:170:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.16.19.323.427.640)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5965 ; free virtual = 17064
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5965 ; free virtual = 17064
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5943 ; free virtual = 17049
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5926 ; free virtual = 17034
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_132_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5944 ; free virtual = 17049
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5944 ; free virtual = 17049
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5925 ; free virtual = 17035
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5908 ; free virtual = 17019
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'm_from_e_1_is_valid': execute_2.cpp:61:9
WARNING: [HLS 207-5324] unused parameter 'e_2_to_w': execute_2.cpp:64:20
WARNING: [HLS 207-5324] unused parameter 'e_2_state_is_full': execute_2.cpp:65:10
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5891 ; free virtual = 16999
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5891 ; free virtual = 16999
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5873 ; free virtual = 16986
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5858 ; free virtual = 16971
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:88) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5911 ; free virtual = 17017
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5909 ; free virtual = 17017
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5891 ; free virtual = 17003
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5874 ; free virtual = 16988
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5888 ; free virtual = 16997
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5887 ; free virtual = 16997
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5869 ; free virtual = 16983
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5852 ; free virtual = 16968
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5778 ; free virtual = 16882
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5778 ; free virtual = 16882
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:20 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5760 ; free virtual = 16869
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:20 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5744 ; free virtual = 16854
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5786 ; free virtual = 16892
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5785 ; free virtual = 16892
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5769 ; free virtual = 16880
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5752 ; free virtual = 16865
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:28 ; elapsed = 00:01:31 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5714 ; free virtual = 16829
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:28 ; elapsed = 00:01:31 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5694 ; free virtual = 16818
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' [66]  (0 ns)
	'store' operation ('data_mem_2_addr_3_write_ln57', mem.cpp:57) of variable 'rv2_0' on array 'data_mem_2' [104]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 91.57 seconds; current allocated memory: 248.443 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 249.333 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [583]  (0 ns)
	'icmp' operation ('icmp_ln874_21') [865]  (1.36 ns)
	'or' operation ('or_ln14_18', lock_unlock_reg.cpp:14) [866]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_19_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_19_0_load') ('or_ln14_18', lock_unlock_reg.cpp:14) [312]  (0 ns)
	'mux' operation ('tmp_s') [562]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [565]  (1.77 ns)
	'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [565]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [572]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [578]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [582]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [582]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5765 ; free virtual = 16872
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5765 ; free virtual = 16872
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5748 ; free virtual = 16859
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5731 ; free virtual = 16844
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:28 ; elapsed = 00:01:31 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5691 ; free virtual = 16808
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5670 ; free virtual = 16795
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' [48]  (0 ns)
	'store' operation ('data_mem_0_addr_3_write_ln53', mem.cpp:53) of variable 'rv2_0' on array 'data_mem_0' [80]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 91.63 seconds; current allocated memory: 247.680 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 248.340 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [574]  (0 ns)
	'icmp' operation ('icmp_ln874_4') [804]  (1.36 ns)
	'or' operation ('or_ln14_1', lock_unlock_reg.cpp:14) [805]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_2_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_2_0_load') ('or_ln14_1', lock_unlock_reg.cpp:14) [320]  (0 ns)
	'mux' operation ('tmp_s') [553]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [556]  (1.77 ns)
	'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [556]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [563]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [569]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [573]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [573]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:26 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5739 ; free virtual = 16845
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:26 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5738 ; free virtual = 16846
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:26 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5721 ; free virtual = 16832
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5704 ; free virtual = 16817
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:25 ; elapsed = 00:01:28 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5762 ; free virtual = 16865
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:25 ; elapsed = 00:01:28 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5760 ; free virtual = 16865
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:25 ; elapsed = 00:01:28 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5743 ; free virtual = 16851
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:31 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5738 ; free virtual = 16843
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:31 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5738 ; free virtual = 16843
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:31 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5719 ; free virtual = 16829
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:31 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5698 ; free virtual = 16809
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:92:9) to (mem_access.cpp:136:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:32 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5655 ; free virtual = 16772
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:33 ; elapsed = 00:01:37 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5630 ; free virtual = 16752
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 96.74 seconds; current allocated memory: 266.628 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 266.968 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.62 seconds; current allocated memory: 267.631 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 270.319 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (9.88625ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'load' operation ('d_to_i.decoded_instruction.rs2.V', issue.cpp:76) on local variable 'i_from_d.decoded_instruction.rs2.V' [548]  (0 ns)
	'mux' operation ('tmp_6') [812]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [815]  (1.77 ns)
	'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [815]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [816]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [822]  (0.978 ns)
	blocking operation 2.96 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 274.163 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 282.680 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 284.269 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.46 seconds; current allocated memory: 292.314 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'reg_file': wb.cpp:112:8
WARNING: [HLS 207-5324] unused parameter 'w_state': wb.cpp:114:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.126.129.541.645.858)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.126.129.541.645.858)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.126.129.541.645.858)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.126.129.541.645.858)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.126.129.541.645.858)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5718 ; free virtual = 16822
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5718 ; free virtual = 16822
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5701 ; free virtual = 16811
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5682 ; free virtual = 16795
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file'  in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:92:9) to (mem_access.cpp:136:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5643 ; free virtual = 16759
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:18 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5618 ; free virtual = 16738
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 80.56 seconds; current allocated memory: 260.995 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 261.335 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 261.419 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 261.470 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (9.88625ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'load' operation ('d_to_i.decoded_instruction.rs2.V') on local variable 'i_from_d.decoded_instruction.rs2.V' [399]  (0 ns)
	'mux' operation ('tmp_6') [663]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [666]  (1.77 ns)
	'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [666]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [667]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [673]  (0.978 ns)
	blocking operation 2.96 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.42 seconds; current allocated memory: 265.026 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 272.746 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 274.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 275.679 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 'ap_ctrl_none'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem' and 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'reg_file': wb.cpp:112:8
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
WARNING: [HLS 207-5324] unused parameter 'w_state': wb.cpp:114:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.97.100.512.616.829)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5698 ; free virtual = 16802
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5698 ; free virtual = 16802
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5680 ; free virtual = 16789
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'reg_file': wb.cpp:112:8
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5669 ; free virtual = 16774
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5669 ; free virtual = 16774
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:18 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5648 ; free virtual = 16755
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:18 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5648 ; free virtual = 16755
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5630 ; free virtual = 16742
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5613 ; free virtual = 16726
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:92:9) to (mem_access.cpp:136:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5574 ; free virtual = 16690
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:20 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5548 ; free virtual = 16669
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 82.52 seconds; current allocated memory: 264.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 264.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 265.235 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 267.888 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [734]  (0 ns)
	'icmp' operation ('icmp_ln874_32') [1066]  (1.36 ns)
	'or' operation ('or_ln14_29', lock_unlock_reg.cpp:14) [1067]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_30_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_30_0_load') ('or_ln14_29', lock_unlock_reg.cpp:14) [405]  (0 ns)
	'mux' operation ('tmp_6') [719]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [722]  (1.77 ns)
	'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [722]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [723]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [729]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [733]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [733]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5572 ; free virtual = 16692
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5572 ; free virtual = 16692
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5578 ; free virtual = 16704
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5560 ; free virtual = 16688
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (multicycle_pipeline_ip.cpp:210:3) in function 'multicycle_pipeline_ip'... converting 107 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:92:9) to (mem_access.cpp:136:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...21 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5519 ; free virtual = 16649
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5487 ; free virtual = 16626
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 82.47 seconds; current allocated memory: 270.540 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 270.881 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 271.617 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 274.335 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (9.22ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'icmp' operation ('icmp_ln874_4') [1157]  (1.36 ns)
	'or' operation ('or_ln874') [1158]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_1_2') with incoming values : ('is_reg_computed_V_1_0_load') ('or_ln874') [476]  (0 ns)
	'mux' operation ('tmp_s') [854]  (3.21 ns)
	'and' operation ('is_locked_1.V') [855]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [858]  (0.978 ns)
	'select' operation ('select_ln72', issue.cpp:72) [863]  (0 ns)
	'select' operation ('i_destination.V', issue.cpp:67) [865]  (1.22 ns)
	blocking operation 1.48 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.07 seconds; current allocated memory: 277.539 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.43 seconds; current allocated memory: 283.405 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 284.880 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 292.840 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_0': mem_access.cpp:92:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem_access.cpp:93:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem_access.cpp:94:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem_access.cpp:95:9
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5385 ; free virtual = 16534
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5385 ; free virtual = 16534
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5366 ; free virtual = 16521
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5347 ; free virtual = 16505
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:92:9) to (mem_access.cpp:136:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5305 ; free virtual = 16469
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5280 ; free virtual = 16448
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 81.9 seconds; current allocated memory: 264.989 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 265.329 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 266.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 268.765 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [754]  (0 ns)
	'icmp' operation ('icmp_ln874_32') [1103]  (1.36 ns)
	'or' operation ('or_ln14_29', lock_unlock_reg.cpp:14) [1104]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_30_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_30_0_load') ('or_ln14_29', lock_unlock_reg.cpp:14) [418]  (0 ns)
	'mux' operation ('tmp_6') [739]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [742]  (1.77 ns)
	'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [742]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [743]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [749]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'a01': mem_access.cpp:32:14
WARNING: [HLS 207-5324] unused parameter 'a1': mem_access.cpp:33:9
WARNING: [HLS 207-5324] unused parameter 'msize': mem_access.cpp:35:11
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:45:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5460 ; free virtual = 16605
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5459 ; free virtual = 16605
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5442 ; free virtual = 16592
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5424 ; free virtual = 16576
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:138:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5385 ; free virtual = 16540
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5360 ; free virtual = 16519
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 81.58 seconds; current allocated memory: 265.081 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 265.524 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 266.269 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 268.975 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [746]  (0 ns)
	'icmp' operation ('icmp_ln874_3') [1029]  (1.36 ns)
	'or' operation ('or_ln14', lock_unlock_reg.cpp:14) [1030]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_1_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_1_0_load') ('or_ln14', lock_unlock_reg.cpp:14) [443]  (0 ns)
	'mux' operation ('tmp_s') [725]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [728]  (1.77 ns)
	'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [728]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [735]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [741]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [745]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [745]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5408 ; free virtual = 16573
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5408 ; free virtual = 16573
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5389 ; free virtual = 16559
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:21 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5372 ; free virtual = 16543
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:22 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5340 ; free virtual = 16505
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:22 ; elapsed = 00:01:25 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5315 ; free virtual = 16484
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 85.44 seconds; current allocated memory: 266.018 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 266.582 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 267.312 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 270.018 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [754]  (0 ns)
	'icmp' operation ('icmp_ln874_17') [1073]  (1.36 ns)
	'or' operation ('or_ln14_14', lock_unlock_reg.cpp:14) [1074]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_15_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_15_0_load') ('or_ln14_14', lock_unlock_reg.cpp:14) [433]  (0 ns)
	'mux' operation ('tmp_6') [739]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [742]  (1.77 ns)
	'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [742]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [743]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [749]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.145.148.560.664.877)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5439 ; free virtual = 16576
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5439 ; free virtual = 16576
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5419 ; free virtual = 16561
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5401 ; free virtual = 16545
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5357 ; free virtual = 16507
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5330 ; free virtual = 16485
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 83.55 seconds; current allocated memory: 268.504 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 269.069 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 269.827 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 272.537 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (9.88625ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'load' operation ('d_to_i.decoded_instruction.rs2.V', issue.cpp:76) on local variable 'i_from_d.decoded_instruction.rs2.V' [566]  (0 ns)
	'mux' operation ('tmp_6') [832]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [835]  (1.77 ns)
	'phi' operation ('is_locked_2.V') with incoming values : ('tmp_6') [835]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [836]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [842]  (0.978 ns)
	blocking operation 2.96 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.64 seconds; current allocated memory: 276.506 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.48 seconds; current allocated memory: 285.245 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.43 seconds; current allocated memory: 286.897 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.41 seconds; current allocated memory: 295.565 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5422 ; free virtual = 16559
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5420 ; free virtual = 16559
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:21 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5403 ; free virtual = 16545
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:21 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5387 ; free virtual = 16531
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:22 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5339 ; free virtual = 16493
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:23 ; elapsed = 00:01:25 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5318 ; free virtual = 16473
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 85.46 seconds; current allocated memory: 266.016 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 266.581 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 267.310 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 270.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [754]  (0 ns)
	'icmp' operation ('icmp_ln874_3') [1045]  (1.36 ns)
	'or' operation ('or_ln14', lock_unlock_reg.cpp:14) [1046]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_1_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_1_0_load') ('or_ln14', lock_unlock_reg.cpp:14) [447]  (0 ns)
	'mux' operation ('tmp_s') [733]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [736]  (1.77 ns)
	'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [736]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [743]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [749]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5263 ; free virtual = 16447
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5263 ; free virtual = 16447
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5243 ; free virtual = 16434
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5225 ; free virtual = 16417
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (multicycle_pipeline_ip.cpp:210:3) in function 'multicycle_pipeline_ip'... converting 107 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...21 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:23 ; elapsed = 00:01:25 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5189 ; free virtual = 16383
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:23 ; elapsed = 00:01:26 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5160 ; free virtual = 16359
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 86.35 seconds; current allocated memory: 271.440 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 272.006 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.58 seconds; current allocated memory: 272.759 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 275.477 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (9.22ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'icmp' operation ('icmp_ln874_4') [1156]  (1.36 ns)
	'or' operation ('or_ln874') [1157]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_1_2') with incoming values : ('is_reg_computed_V_1_0_load') ('or_ln874') [476]  (0 ns)
	'mux' operation ('tmp_s') [854]  (3.21 ns)
	'and' operation ('is_locked_1.V') [855]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [858]  (0.978 ns)
	'select' operation ('select_ln72', issue.cpp:72) [863]  (0 ns)
	'select' operation ('i_destination.V', issue.cpp:67) [865]  (1.22 ns)
	blocking operation 1.48 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.14 seconds; current allocated memory: 278.650 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 284.495 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 286.076 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.39 seconds; current allocated memory: 294.587 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:26 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5208 ; free virtual = 16384
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:26 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5207 ; free virtual = 16384
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:26 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5178 ; free virtual = 16371
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5160 ; free virtual = 16355
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:28 ; elapsed = 00:01:31 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5120 ; free virtual = 16316
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5103 ; free virtual = 16295
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 92.3 seconds; current allocated memory: 266.023 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 266.588 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 267.317 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 270.023 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [754]  (0 ns)
	'icmp' operation ('icmp_ln874_33') [1105]  (1.36 ns)
	'or' operation ('or_ln14_30', lock_unlock_reg.cpp:14) [1106]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_31_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_31_0_load') ('or_ln14_30', lock_unlock_reg.cpp:14) [448]  (0 ns)
	'mux' operation ('tmp_s') [733]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [736]  (1.77 ns)
	'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [736]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [743]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [749]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [753]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'a01': mem_access.cpp:32:14
WARNING: [HLS 207-5324] unused parameter 'a1': mem_access.cpp:33:9
WARNING: [HLS 207-5324] unused parameter 'msize': mem_access.cpp:35:11
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:45:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5251 ; free virtual = 16410
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5251 ; free virtual = 16410
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5235 ; free virtual = 16396
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5216 ; free virtual = 16380
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:138:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5176 ; free virtual = 16342
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:31 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5155 ; free virtual = 16321
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 94.14 seconds; current allocated memory: 265.082 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 265.525 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.63 seconds; current allocated memory: 266.270 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 268.976 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [746]  (0 ns)
	'icmp' operation ('icmp_ln874_3') [1029]  (1.36 ns)
	'or' operation ('or_ln14', lock_unlock_reg.cpp:14) [1030]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_1_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_1_0_load') ('or_ln14', lock_unlock_reg.cpp:14) [443]  (0 ns)
	'mux' operation ('tmp_s') [725]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [728]  (1.77 ns)
	'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [728]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [735]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [741]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [745]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [745]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'a01': mem_access.cpp:32:14
WARNING: [HLS 207-5324] unused parameter 'a1': mem_access.cpp:33:9
WARNING: [HLS 207-5324] unused parameter 'msize': mem_access.cpp:35:11
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'data_mem_1': mem.cpp:6:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_2': mem.cpp:7:9
WARNING: [HLS 207-5324] unused parameter 'data_mem_3': mem.cpp:8:9
WARNING: [HLS 207-5324] unused parameter 'b1': mem.cpp:11:9
WARNING: [HLS 207-5324] unused parameter 'b2': mem.cpp:12:9
WARNING: [HLS 207-5324] unused parameter 'b3': mem.cpp:13:9
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:45:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:33 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5212 ; free virtual = 16401
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:33 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5211 ; free virtual = 16401
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:33 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5194 ; free virtual = 16387
INFO: [HLS 200-10] Checking synthesizability ...
WARNING: [SYNCHK 200-77] The top function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49) has no outputs. Possible cause(s) are: (1) Output parameters are passed by value; (2) intended outputs (parameters or global variables) are never written; (3) there are infinite loops.
INFO: [SYNCHK 200-10] 0 error(s), 1 warning(s).
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:33 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5176 ; free virtual = 16372
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:138:1) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:34 ; elapsed = 00:01:37 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5136 ; free virtual = 16334
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:35 ; elapsed = 00:01:38 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5064 ; free virtual = 16292
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 98.43 seconds; current allocated memory: 265.099 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 265.498 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.62 seconds; current allocated memory: 266.272 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 268.979 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (11.0412ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('i_destination.V', issue.cpp:72) with incoming values : ('select_ln72', issue.cpp:72) [752]  (0 ns)
	'icmp' operation ('icmp_ln874_3') [1041]  (1.36 ns)
	'or' operation ('or_ln14', lock_unlock_reg.cpp:14) [1042]  (0.978 ns)
	'phi' operation ('is_reg_computed_V_1_2', lock_unlock_reg.cpp:14) with incoming values : ('is_reg_computed_V_1_0_load') ('or_ln14', lock_unlock_reg.cpp:14) [446]  (0 ns)
	'mux' operation ('tmp_s') [731]  (3.21 ns)
	multiplexor before 'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [734]  (1.77 ns)
	'phi' operation ('is_locked_1.V') with incoming values : ('tmp_s') [734]  (0 ns)
	'or' operation ('wait_for_source.V', issue.cpp:65) [741]  (0.978 ns)
	'xor' operation ('xor_ln72', issue.cpp:72) [747]  (0.978 ns)
	multiplexor before 'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [751]  (1.77 ns)
	'phi' operation ('empty_31', issue.cpp:72) with incoming values : ('xor_ln72', issue.cpp:72) [751]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.142.145.557.661.874)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5214 ; free virtual = 16389
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5214 ; free virtual = 16389
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:29 ; elapsed = 00:01:32 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5196 ; free virtual = 16375
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5179 ; free virtual = 16360
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:31 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5111 ; free virtual = 16306
WARNING: [XFORM 203-561] 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104:13) in function 'multicycle_pipeline_ip' is an infinite loop.
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:32 ; elapsed = 00:01:35 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5084 ; free virtual = 16281
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 94.88 seconds; current allocated memory: 266.017 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 266.581 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.61 seconds; current allocated memory: 267.311 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 270.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('d_state_is_full.V') with incoming values : ('d_state.is_full.V', decode.cpp:154) [484]  (0 ns)
	'xor' operation ('xor_ln756_1') [551]  (0.978 ns)
	'and' operation ('save_input.V', decode.cpp:152) [571]  (0.978 ns)
	'select' operation ('d_state.instruction', decode.cpp:175) [576]  (0.698 ns)
	'icmp' operation ('empty_28') [618]  (1.36 ns)
	'or' operation ('empty_30') [620]  (0.978 ns)
	multiplexor before 'phi' operation ('decoded_instruction.has_no_dest.V') with incoming values : ('icmp_ln874') [626]  (1.77 ns)
	blocking operation 4.1 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 272.536 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 278.267 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.41 seconds; current allocated memory: 279.915 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 287.224 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'result': execute_2.cpp:42:7
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:37 ; elapsed = 00:01:40 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5016 ; free virtual = 16177
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:37 ; elapsed = 00:01:40 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5016 ; free virtual = 16177
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:37 ; elapsed = 00:01:40 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5000 ; free virtual = 16164
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:37 ; elapsed = 00:01:40 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4981 ; free virtual = 16146
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:107:7) in function 'multicycle_pipeline_ip'... converting 27 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:4:13) to (multicycle_pipeline_ip.cpp:210:3) in function 'multicycle_pipeline_ip'... converting 63 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...13 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:38 ; elapsed = 00:01:41 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4939 ; free virtual = 16107
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:39 ; elapsed = 00:01:42 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4935 ; free virtual = 16104
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (11.176ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:161) [509]  (0 ns)
	'xor' operation ('xor_ln756_3') [837]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:132) [877]  (0.978 ns)
	'select' operation ('e_1_state.rv1', execute_1.cpp:133) [878]  (0.698 ns)
	'icmp' operation ('result.V', compute.cpp:18) [897]  (2.47 ns)
	'select' operation ('select_ln10_1', compute.cpp:10) [909]  (0.993 ns)
	'select' operation ('select_ln10_3', compute.cpp:10) [912]  (0.993 ns)
	blocking operation 4.06 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 102.76 seconds; current allocated memory: 257.732 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 265.044 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 'ap_ctrl_none'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem' and 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.63 seconds; current allocated memory: 270.916 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:43 ; elapsed = 00:01:47 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4873 ; free virtual = 16064
INFO: [VHDL 208-304]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:84:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'w_destination': wb.cpp:113:14
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:2)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:193:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:44:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4551 ; free virtual = 15830
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4551 ; free virtual = 15830
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:30 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4534 ; free virtual = 15812
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:31 ; elapsed = 00:01:35 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4508 ; free virtual = 15788
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:90:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:33 ; elapsed = 00:01:37 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4421 ; free virtual = 15740
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:36 ; elapsed = 00:01:40 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4376 ; free virtual = 15667
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 4, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 100.15 seconds; current allocated memory: 328.622 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 328.837 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 4, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 329.577 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 330.930 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 4, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 332.203 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 334.952 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 4, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.34 seconds; current allocated memory: 336.043 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 337.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 4, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 337.704 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 337.958 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 4, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:44:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:34 ; elapsed = 00:01:38 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4452 ; free virtual = 15722
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:34 ; elapsed = 00:01:38 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4452 ; free virtual = 15722
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:35 ; elapsed = 00:01:38 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4427 ; free virtual = 15702
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:35 ; elapsed = 00:01:39 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4389 ; free virtual = 15669
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:90:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:38 ; elapsed = 00:01:42 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4378 ; free virtual = 15658
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:41 ; elapsed = 00:01:45 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4309 ; free virtual = 15587
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 104.68 seconds; current allocated memory: 328.620 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 328.836 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 329.576 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 330.928 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 332.201 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 334.950 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 336.041 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 337.514 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 337.702 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 337.956 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:44:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:32 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4495 ; free virtual = 15774
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:32 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4495 ; free virtual = 15774
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:33 ; elapsed = 00:01:36 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4472 ; free virtual = 15753
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:33 ; elapsed = 00:01:37 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4447 ; free virtual = 15730
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:90:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:36 ; elapsed = 00:01:39 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4395 ; free virtual = 15680
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:38 ; elapsed = 00:01:42 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4323 ; free virtual = 15601
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 102.29 seconds; current allocated memory: 328.623 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 328.838 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 329.578 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 330.931 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 332.204 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 334.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 336.044 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 337.515 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 337.703 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 337.957 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:23 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4694 ; free virtual = 15915
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:23 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4692 ; free virtual = 15915
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:24 ; elapsed = 00:01:27 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4677 ; free virtual = 15894
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:24 ; elapsed = 00:01:28 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4647 ; free virtual = 15872
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:26 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4549 ; free virtual = 15797
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:29 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4496 ; free virtual = 15713
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 92.76 seconds; current allocated memory: 328.776 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.021 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 329.731 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 331.084 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 332.357 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 335.106 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 336.226 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 337.670 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 337.858 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 338.112 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4425 ; free virtual = 15695
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4425 ; free virtual = 15695
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4401 ; free virtual = 15675
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:14 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4368 ; free virtual = 15652
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4319 ; free virtual = 15604
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4246 ; free virtual = 15525
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 80.89 seconds; current allocated memory: 328.777 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.021 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 329.732 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 331.084 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 332.357 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 335.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 336.226 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 337.670 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 337.858 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.112 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:202:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:190:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:170:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9357 ; free virtual = 17717
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9355 ; free virtual = 17718
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9338 ; free virtual = 17702
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:30 ; elapsed = 00:01:33 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9320 ; free virtual = 17686
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:58) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_1' (multicycle_pipeline_ip.cpp:29) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_131_1' (multicycle_pipeline_ip.cpp:105) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:70) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:88:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:80:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 45 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:212:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:57)...21 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:31 ; elapsed = 00:01:34 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9233 ; free virtual = 17644
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:32 ; elapsed = 00:01:35 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9227 ; free virtual = 17637
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_131_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (14.656ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'shl' operation ('result', compute.cpp:54) [1000]  (0 ns)
	'select' operation ('result', compute.cpp:48) [1018]  (4.42 ns)
	'select' operation ('result', compute.cpp:49) [1034]  (0.698 ns)
	'select' operation ('result') [1036]  (4.42 ns)
	'select' operation ('result') [1039]  (4.42 ns)
	'select' operation ('e_1_to_e_2.result1', execute_1.cpp:166) [1120]  (0.698 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 96.48 seconds; current allocated memory: 261.966 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.62 seconds; current allocated memory: 278.361 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 'ap_ctrl_none'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem' and 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.8 seconds; current allocated memory: 285.346 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:37 ; elapsed = 00:01:41 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9213 ; free virtual = 17581
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:207:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:202:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:190:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:170:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.452.556.769)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:58:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:26 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9251 ; free virtual = 17583
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:26 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9251 ; free virtual = 17583
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:26 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9230 ; free virtual = 17568
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:26 ; elapsed = 00:01:29 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9212 ; free virtual = 17552
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:58) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_28_1' (multicycle_pipeline_ip.cpp:29) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_131_1' (multicycle_pipeline_ip.cpp:105) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:70) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:88:15) to (decode.cpp:177:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:80:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 45 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:212:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:57)...21 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9169 ; free virtual = 17512
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:28 ; elapsed = 00:01:31 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9154 ; free virtual = 17506
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_28_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_131_1'.
INFO: [SCHED 204-61] Discarding stage scheduling solution.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (11.176ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:161) [536]  (0 ns)
	'xor' operation ('xor_ln756_3') [898]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:132) [948]  (0.978 ns)
	'select' operation ('e_1_state.decoded_instruction.is_r_type.V', execute_1.cpp:133) [959]  (0.993 ns)
	'select' operation ('rv2', execute_1.cpp:133) [996]  (0.698 ns)
	'add' operation ('result', compute.cpp:52) [1007]  (2.55 ns)
	'select' operation ('result', compute.cpp:48) [1010]  (0.993 ns)
	blocking operation 3.98 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 92.33 seconds; current allocated memory: 261.927 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 270.439 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 'ap_ctrl_none'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem' and 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8516 ; free virtual = 16832
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8516 ; free virtual = 16832
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:17 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8489 ; free virtual = 16812
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:18 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8464 ; free virtual = 16788
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8412 ; free virtual = 16741
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:23 ; elapsed = 00:01:26 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8338 ; free virtual = 16662
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 86.1 seconds; current allocated memory: 328.776 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.021 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 329.731 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 331.083 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.32 seconds; current allocated memory: 332.356 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 335.104 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 336.225 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 337.669 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 337.856 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.111 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8349 ; free virtual = 16696
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8349 ; free virtual = 16696
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:15 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8321 ; free virtual = 16676
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:15 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8294 ; free virtual = 16653
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8255 ; free virtual = 16616
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:20 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8182 ; free virtual = 16539
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 82.77 seconds; current allocated memory: 328.920 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.164 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 329.875 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 331.228 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 332.501 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 335.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.28 seconds; current allocated memory: 336.371 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 337.815 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 338.003 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.257 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:208:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:205:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:07 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10078 ; free virtual = 53755
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:07 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10078 ; free virtual = 53755
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10052 ; free virtual = 53735
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:08 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10027 ; free virtual = 53711
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:10 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9988 ; free virtual = 53667
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9954 ; free virtual = 53620
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 74.39 seconds; current allocated memory: 328.772 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.016 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 329.727 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 331.080 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.25 seconds; current allocated memory: 332.353 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 335.102 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.25 seconds; current allocated memory: 336.223 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 337.666 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 337.853 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.108 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9311 ; free virtual = 53118
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9311 ; free virtual = 53118
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9286 ; free virtual = 53098
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:06 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9258 ; free virtual = 53075
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9210 ; free virtual = 53029
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:10 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9120 ; free virtual = 52950
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 72.51 seconds; current allocated memory: 328.915 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.160 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 329.870 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 331.223 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.29 seconds; current allocated memory: 332.496 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 335.245 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 336.365 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 337.808 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 337.995 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13783 ; free virtual = 52967
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13783 ; free virtual = 52967
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13746 ; free virtual = 52947
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13720 ; free virtual = 52924
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13688 ; free virtual = 52878
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13617 ; free virtual = 52802
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 73.44 seconds; current allocated memory: 328.918 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.163 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 329.889 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 331.242 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 332.515 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 335.264 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.25 seconds; current allocated memory: 336.384 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 337.827 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 338.015 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.269 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:10 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23084 ; free virtual = 59178
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:10 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23084 ; free virtual = 59178
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23051 ; free virtual = 59157
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23024 ; free virtual = 59134
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:63) to (issue.cpp:102:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22983 ; free virtual = 59089
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22753 ; free virtual = 58969
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 77.77 seconds; current allocated memory: 329.598 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.842 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 330.567 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 331.919 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 333.314 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 337.530 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 338.713 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 340.157 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 340.345 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 340.599 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
WARNING: [HLS 207-5324] unused parameter 'm_from_e_1_is_valid': execute_2.cpp:61:9
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:216:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:218:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:73:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:219:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:218:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:215:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:3)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 25512 ; free virtual = 60778
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 25512 ; free virtual = 60778
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:08 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 25474 ; free virtual = 60756
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 25442 ; free virtual = 60731
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_136_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:119:7) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:63) to (issue.cpp:99:1) in function 'issue'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:124)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 25361 ; free virtual = 60677
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 25275 ; free virtual = 60585
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 76.25 seconds; current allocated memory: 357.813 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 358.749 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 358.876 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 359.063 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 359.811 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 360.987 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 362.360 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 366.515 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 367.588 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 369.065 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 369.203 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 369.433 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (12.78ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'p_read4' [56]  (0 ns)
	'select' operation ('rv2_0', mem_access.cpp:110) [81]  (1.25 ns)
	'store' operation ('data_mem_0_addr_3_write_ln53', mem.cpp:53) of variable 'rv2_0', mem_access.cpp:110 on array 'data_mem_0' [110]  (3.25 ns)
	blocking operation 8.28 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 369.844 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 370.621 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 371.328 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 374.053 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_136_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4.
WARNING: [HLS 200-871] Estimated clock period (12.4665ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'call' operation ('call_ret1', multicycle_pipeline_ip.cpp:184) to 'execute_1' [1121]  (7.24 ns)
	'phi' operation ('e_1_to_e_2.is_valid.V') with incoming values : ('e_1_to_e_2.is_valid.V', multicycle_pipeline_ip.cpp:184) [609]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:144) to 'new_cycle' [868]  (0 ns)
	'call' operation ('call_ret3', multicycle_pipeline_ip.cpp:202) to 'mem_access' [1197]  (5.23 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 378.149 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.76 seconds; current allocated memory: 385.520 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 1 seconds; current allocated memory: 418.852 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 421.810 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 428.394 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 449.476 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 467.769 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 473.840 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 476.312 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:216:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:218:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:218:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:217:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:214:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:3)
INFO: [HLS 214-131] Inlining function 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:197:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24936 ; free virtual = 60271
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24936 ; free virtual = 60271
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24912 ; free virtual = 60250
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24886 ; free virtual = 60227
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_136_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:104:13) to (wb.cpp:126:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:219:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:119:7) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:124)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24836 ; free virtual = 60180
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24781 ; free virtual = 60123
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 77.44 seconds; current allocated memory: 323.987 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 324.923 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 325.050 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 325.237 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 325.985 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 327.131 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 328.230 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: ==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:216:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:218:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:218:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:217:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:214:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:197:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:3)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24336 ; free virtual = 59787
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24336 ; free virtual = 59787
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:12 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24305 ; free virtual = 59767
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24279 ; free virtual = 59743
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_136_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:104:13) to (mem_access.cpp:119:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:219:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24233 ; free virtual = 59696
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24190 ; free virtual = 59647
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.38 seconds; current allocated memory: 317.053 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 317.989 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 318.116 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 318.303 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 319.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 320.197 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 321.339 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:216:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:218:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:218:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:217:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:214:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:197:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:3)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:176:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24002 ; free virtual = 59442
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 24002 ; free virtual = 59442
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:12 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23976 ; free virtual = 59422
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23950 ; free virtual = 59398
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_136_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:104:13) to (mem_access.cpp:119:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:219:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23898 ; free virtual = 59351
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23850 ; free virtual = 59303
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.28 seconds; current allocated memory: 317.056 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 317.992 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 318.119 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 318.306 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 319.054 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 320.201 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 321.343 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:218:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:234:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:221:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:220:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:217:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:204:5)
INFO: [HLS 214-131] Inlining function 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:3)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:179:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 19763 ; free virtual = 55978
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 19763 ; free virtual = 55978
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 19736 ; free virtual = 55957
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 19710 ; free virtual = 55933
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_137_1' (multicycle_pipeline_ip.cpp:105) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:105:13) to (mem_access.cpp:119:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:222:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 19662 ; free virtual = 55889
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:18 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 19616 ; free virtual = 55841
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 80.58 seconds; current allocated memory: 317.138 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 318.081 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 318.208 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 318.427 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 319.159 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 320.306 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:218:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:234:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:221:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:220:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:3)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18486 ; free virtual = 54801
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18486 ; free virtual = 54801
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18442 ; free virtual = 54779
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18406 ; free virtual = 54752
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lock_unlock_reg' (lock_unlock_reg.cpp:4:5).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'lock_unlock_reg' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:119:7) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:4:13) to (lock_unlock_reg.cpp:18:1) in function 'lock_unlock_reg'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:63) to (issue.cpp:99:1) in function 'issue'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:124)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18367 ; free virtual = 54702
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18284 ; free virtual = 54601
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 75.83 seconds; current allocated memory: 365.985 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 366.928 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 367.055 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 367.242 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 368.006 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 369.152 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.35 seconds; current allocated memory: 370.553 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 374.708 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 375.781 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 377.258 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 377.397 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 377.628 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (12.78ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'p_read4' [56]  (0 ns)
	'select' operation ('rv2_0', mem_access.cpp:110) [81]  (1.25 ns)
	'store' operation ('data_mem_2_addr_3_write_ln57', mem.cpp:57) of variable 'rv2_0', mem_access.cpp:110 on array 'data_mem_2' [116]  (3.25 ns)
	blocking operation 8.28 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 378.010 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 378.815 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.54 seconds; current allocated memory: 379.526 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 382.324 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lock_unlock_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'lock_unlock_reg'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 382.888 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 383.508 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_137_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 386.729 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.05 seconds; current allocated memory: 392.061 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 1.05 seconds; current allocated memory: 425.892 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 428.904 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 435.430 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 456.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 474.865 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.64 seconds; current allocated memory: 480.971 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:218:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:234:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:221:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:220:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:3)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:179:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18389 ; free virtual = 54689
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18389 ; free virtual = 54689
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18363 ; free virtual = 54669
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:12 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18337 ; free virtual = 54645
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lock_unlock_reg' (lock_unlock_reg.cpp:4:5).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'lock_unlock_reg' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:105:13) to (multicycle_pipeline_ip.cpp:222:3) in function 'multicycle_pipeline_ip'... converting 11 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:119:7) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:4:13) to (lock_unlock_reg.cpp:18:1) in function 'lock_unlock_reg'... converting 63 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:124)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18283 ; free virtual = 54601
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18202 ; free virtual = 54513
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.29 seconds; current allocated memory: 352.772 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 353.715 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 353.842 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 354.029 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 354.793 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 355.939 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 357.038 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 358.516 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 358.656 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 358.856 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (12.78ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'p_read4' [56]  (0 ns)
	'select' operation ('rv2_0', mem_access.cpp:110) [81]  (1.25 ns)
	'store' operation ('data_mem_2_addr_3_write_ln57', mem.cpp:57) of variable 'rv2_0', mem_access.cpp:110 on array 'data_mem_2' [116]  (3.25 ns)
	blocking operation 8.28 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 359.238 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 360.044 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 360.753 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 363.551 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lock_unlock_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'lock_unlock_reg'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 364.114 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.07 seconds; current allocated memory: 364.763 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_137_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.59 seconds; current allocated memory: 368.042 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.85 seconds; current allocated memory: 373.661 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 1.12 seconds; current allocated memory: 407.488 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 410.473 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 417.028 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 432.153 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.58 seconds; current allocated memory: 438.478 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 440.982 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.42 seconds; current allocated memory: 449.059 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lock_unlock_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'lock_unlock_reg'.
INFO: [HLS 200-111]  Elapsed time: 0.37 seconds; current allocated memory: 458.642 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:218:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:234:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:221:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:220:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:217:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:3)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:179:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18342 ; free virtual = 54642
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18342 ; free virtual = 54642
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:12 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18316 ; free virtual = 54623
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18290 ; free virtual = 54598
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_137_1' (multicycle_pipeline_ip.cpp:105) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:105:13) to (multicycle_pipeline_ip.cpp:222:3) in function 'multicycle_pipeline_ip'... converting 135 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:119:7) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:124)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18237 ; free virtual = 54552
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 18163 ; free virtual = 54475
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.88 seconds; current allocated memory: 344.317 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 345.260 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 345.387 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 345.606 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 346.338 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 347.484 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.21 seconds; current allocated memory: 348.583 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 350.060 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 350.200 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 350.400 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (12.78ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'p_read4' [56]  (0 ns)
	'select' operation ('rv2_0', mem_access.cpp:110) [81]  (1.25 ns)
	'store' operation ('data_mem_2_addr_3_write_ln57', mem.cpp:57) of variable 'rv2_0', mem_access.cpp:110 on array 'data_mem_2' [116]  (3.25 ns)
	blocking operation 8.28 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 350.782 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 351.588 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 352.298 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 355.096 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_137_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.7 seconds; current allocated memory: 358.686 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.66 seconds; current allocated memory: 364.598 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 1.05 seconds; current allocated memory: 398.422 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 401.379 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 407.933 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.43 seconds; current allocated memory: 423.059 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 429.413 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 431.858 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.43 seconds; current allocated memory: 439.993 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem', 'data_mem_3' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:218:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:234:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:221:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:220:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:217:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:3)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:179:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17984 ; free virtual = 54285
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17984 ; free virtual = 54285
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17957 ; free virtual = 54265
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17931 ; free virtual = 54240
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_137_1' (multicycle_pipeline_ip.cpp:105) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:105:13) to (wb.cpp:127:7) in function 'multicycle_pipeline_ip'... converting 11 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:222:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:119:7) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:124)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17874 ; free virtual = 54193
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17815 ; free virtual = 54127
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 79.8 seconds; current allocated memory: 333.154 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 334.097 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 334.224 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 334.411 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 335.175 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 336.321 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 337.421 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' (new_cycle.cpp:76:3)
INFO: [HLS 214-131] Inlining function 'copy_d_i(decoded_instruction_s, decoded_instruction_s*)' into 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' (new_cycle.cpp:91:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_f(from_d_to_f_s, from_d_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:218:2)
INFO: [HLS 214-131] Inlining function 'copy_m_to_w(from_m_to_w_s, from_m_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:234:3)
INFO: [HLS 214-131] Inlining function 'copy_e_2_to_w(from_e_2_to_w_s, from_e_2_to_w_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:232:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_m(from_e_1_to_m_s, from_e_1_to_m_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:230:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_e_2(from_e_1_to_e_2_s, from_e_1_to_e_2_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:228:3)
INFO: [HLS 214-131] Inlining function 'copy_i_to_e_1(from_i_to_e_1_s, from_i_to_e_1_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:226:3)
INFO: [HLS 214-131] Inlining function 'copy_d_to_i(from_d_to_i_s, from_d_to_i_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:224:3)
INFO: [HLS 214-131] Inlining function 'copy_f_to_d(from_f_to_d_s, from_f_to_d_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:222:3)
INFO: [HLS 214-131] Inlining function 'copy_e_1_to_f(from_e_1_to_f_s, from_e_1_to_f_s*)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, ap_uint<1>, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*, ap_uint<1>*)' (new_cycle.cpp:220:3)
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:102:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:99:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:82:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:125:2)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:180:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:138:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:75:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:47:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' (wb.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'init_m_state(m_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:3)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:221:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:220:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:217:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:212:5)
INFO: [HLS 214-131] Inlining function 'clear_cycle(ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:3)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:179:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'decode(from_f_to_d_s, ap_uint<1>, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'multicycle_pipeline_ip(unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17564 ; free virtual = 53977
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17564 ; free virtual = 53977
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:14 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17536 ; free virtual = 53957
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17527 ; free virtual = 53933
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_137_1' (multicycle_pipeline_ip.cpp:105) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:65) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:105:13) to (wb.cpp:127:7) in function 'multicycle_pipeline_ip'... converting 11 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:106:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (lock_unlock_reg.cpp:5:13) to (multicycle_pipeline_ip.cpp:222:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (mem_access.cpp:119:7) in function 'mem_access'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:69:1) in function 'fetch'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (execute_1.cpp:190:1) in function 'execute_1'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:150:17) to (decode.cpp:84:3) in function 'decode'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (decode.cpp:193:1) in function 'decode'... converting 7 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:124)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:153)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17487 ; free virtual = 53885
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17381 ; free virtual = 53809
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'new_cycle'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 81.13 seconds; current allocated memory: 342.814 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 343.727 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 343.854 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 344.058 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 344.789 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 345.965 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.27 seconds; current allocated memory: 347.034 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 348.512 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 348.652 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 348.882 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_store' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_store'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 349.042 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 349.290 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 349.556 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 350.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_137_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.94 seconds; current allocated memory: 354.004 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.81 seconds; current allocated memory: 360.838 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'new_cycle' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'new_cycle'.
INFO: [HLS 200-111]  Elapsed time: 1.08 seconds; current allocated memory: 394.667 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 397.656 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 404.214 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.44 seconds; current allocated memory: 419.412 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.57 seconds; current allocated memory: 425.768 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_store' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_store'.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 426.728 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 429.091 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'nb_instruction', 'nb_cycle', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'code_mem', 'data_mem_3' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.17 seconds; current allocated memory: 464.288 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17221 ; free virtual = 53649
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:96:28)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:93:28)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:90:28)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:87:28)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:84:28)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:76:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' (decode.cpp:119:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<11>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:187:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<11>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:176:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:85:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:77:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<11>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<11>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<11>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:181:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<11>, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<11>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:135:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:162:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<11>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17092 ; free virtual = 53694
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17092 ; free virtual = 53694
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:05 ; elapsed = 00:01:07 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17067 ; free virtual = 53674
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:05 ; elapsed = 00:01:07 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 17044 ; free virtual = 53654
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:50) to (issue.cpp:99:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:116:19) to (execute_1.cpp:189:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:115:13) to (decode.cpp:78:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:123)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:159)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 16990 ; free virtual = 53603
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 16913 ; free virtual = 53526
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 70.85 seconds; current allocated memory: 328.917 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 329.161 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:159) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln153', decode.cpp:153) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:159) with incoming values : ('d_state.instruction', decode.cpp:159) ('select_ln177', decode.cpp:177) [98]  (0 ns)
	multiplexor before 'phi' operation ('decoded_instruction.opcl.V') with incoming values : ('decoded_instruction.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 329.872 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 331.225 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.25 seconds; current allocated memory: 332.498 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 335.247 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 336.368 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 337.811 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 337.999 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 338.253 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:60:24)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:134:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:170:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:124:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:116:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9874 ; free virtual = 52318
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9874 ; free virtual = 52318
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9846 ; free virtual = 52299
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9819 ; free virtual = 52274
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:63) to (issue.cpp:102:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:105:19) to (execute_1.cpp:178:1) in function 'execute_1'... converting 35 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:57:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:112)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:124)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9765 ; free virtual = 52225
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:10 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9689 ; free virtual = 52145
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 72.28 seconds; current allocated memory: 334.491 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 334.728 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:124) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln118', decode.cpp:118) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:124) with incoming values : ('d_state.instruction', decode.cpp:124) ('select_ln142', decode.cpp:142) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:124) with incoming values : ('d_state.instruction', decode.cpp:124) ('select_ln142', decode.cpp:142) [98]  (0 ns)
	multiplexor before 'phi' operation ('d_i.opcl.V') with incoming values : ('d_i.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.15 seconds; current allocated memory: 335.426 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 336.775 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.32 seconds; current allocated memory: 338.152 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 342.365 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 343.541 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 344.989 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.2 seconds; current allocated memory: 345.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 345.430 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:61:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, ap_uint<3>, ap_int<20>*)' (decode.cpp:84:20)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, ap_uint<3>, ap_int<20>*)' (decode.cpp:83:20)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, ap_uint<3>, ap_int<20>*)' (decode.cpp:82:20)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, ap_uint<3>, ap_int<20>*)' (decode.cpp:81:20)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, ap_uint<3>, ap_int<20>*)' (decode.cpp:80:20)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_int<20>*, ap_uint<9>*)' (decode.cpp:105:3)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, ap_uint<3>, ap_int<20>*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_int<20>*, ap_uint<9>*)' (decode.cpp:106:3)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:160:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:178:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_int<20>*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:167:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:82:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:35:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, ap_uint<1>, ap_int<20>, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:49:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s, ap_int<20>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:44:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s, ap_int<20>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:39:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:175:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1458)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:181:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1458)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1458)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1458)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1458)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:120:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8994 ; free virtual = 51690
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8994 ; free virtual = 51690
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8970 ; free virtual = 51674
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8946 ; free virtual = 51652
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:59:63) to (issue.cpp:104:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:109:19) to (execute_1.cpp:183:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:99:13) to (decode.cpp:77:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:116)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:6:40)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:07 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8895 ; free virtual = 51607
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8811 ; free virtual = 51534
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 71.5 seconds; current allocated memory: 317.365 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 317.602 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:135) [55]  (0 ns)
	'xor' operation ('xor_ln756') [59]  (0.978 ns)
	'and' operation ('and_ln143', decode.cpp:143) [62]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:135) with incoming values : ('p_read211', decode.cpp:135) ('select_ln168', decode.cpp:168) [71]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:135) with incoming values : ('p_read211', decode.cpp:135) ('select_ln168', decode.cpp:168) [71]  (0 ns)
	multiplexor before 'phi' operation ('d_i.opcl.V') with incoming values : ('d_i.opcl.V') [165]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 318.176 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 319.233 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 320.331 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 324.142 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 325.133 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 326.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 326.520 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 326.774 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' [66]  (0 ns)
	'store' operation ('data_mem_2_addr_3_write_ln57', mem.cpp:57) of variable 'rv2_0' on array 'data_mem_2' [104]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 327.150 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 328.040 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.54 seconds; current allocated memory: 328.745 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 331.500 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 334.705 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.6 seconds; current allocated memory: 340.734 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 341.178 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 344.790 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.31 seconds; current allocated memory: 355.520 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.41 seconds; current allocated memory: 368.425 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.48 seconds; current allocated memory: 373.992 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 376.655 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.42 seconds; current allocated memory: 384.857 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.01 seconds; current allocated memory: 406.124 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:17 ; elapsed = 00:01:20 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8627 ; free virtual = 51420
INFO: [VHDL 208-304] Generating VHDL RTL for multicycle_pipeline_ip.
INFO: [VLOG 209-307] Generating Verilog RTL for multicycle_pipeline_ip.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 65.08 MHz
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_instruction_s*)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:60:24)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:134:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:170:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:124:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:185:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:201:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.2190)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:116:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8091 ; free virtual = 50825
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8091 ; free virtual = 50825
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8062 ; free virtual = 50806
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8019 ; free virtual = 50755
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:63) to (issue.cpp:102:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:105:19) to (execute_1.cpp:178:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:57:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:112)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:124)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7968 ; free virtual = 50706
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7907 ; free virtual = 50640
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 75.23 seconds; current allocated memory: 334.317 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 334.554 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:124) [83]  (0 ns)
	'xor' operation ('xor_ln756') [87]  (0.978 ns)
	'and' operation ('and_ln118', decode.cpp:118) [90]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:124) with incoming values : ('d_state.instruction', decode.cpp:124) ('select_ln142', decode.cpp:142) [98]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:124) with incoming values : ('d_state.instruction', decode.cpp:124) ('select_ln142', decode.cpp:142) [98]  (0 ns)
	multiplexor before 'phi' operation ('d_i.opcl.V') with incoming values : ('d_i.opcl.V') [206]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 335.267 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 336.616 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.36 seconds; current allocated memory: 337.993 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 342.205 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 343.367 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 344.795 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 344.982 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 345.236 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_bits(ap_uint<1>, ap_uint<1>, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*, ap_uint<1>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:134:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:124:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:127:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:116:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 11875 ; free virtual = 54652
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 11875 ; free virtual = 54652
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:03 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 11854 ; free virtual = 54636
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:03 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 11831 ; free virtual = 54615
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:63) to (issue.cpp:102:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:74:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:105:19) to (execute_1.cpp:179:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:112)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:124)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 11790 ; free virtual = 54571
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:07 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 11717 ; free virtual = 54496
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 69.68 seconds; current allocated memory: 316.559 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 316.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.3655ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'decode' consists of the following:	wire read on port 'i_state_is_full' (decode.cpp:124) [57]  (0 ns)
	'xor' operation ('xor_ln756') [61]  (0.978 ns)
	'and' operation ('and_ln118', decode.cpp:118) [64]  (0.978 ns)
	multiplexor before 'phi' operation ('d_state.instruction', decode.cpp:124) with incoming values : ('d_state.instruction', decode.cpp:124) ('select_ln142', decode.cpp:142) [73]  (1.81 ns)
	'phi' operation ('d_state.instruction', decode.cpp:124) with incoming values : ('d_state.instruction', decode.cpp:124) ('select_ln142', decode.cpp:142) [73]  (0 ns)
	multiplexor before 'phi' operation ('d_i.opcl.V') with incoming values : ('d_i.opcl.V') [169]  (1.98 ns)
	blocking operation 9.62 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.13 seconds; current allocated memory: 317.389 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.06 seconds; current allocated memory: 318.513 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.26 seconds; current allocated memory: 319.620 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 323.441 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 324.433 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 325.633 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 325.820 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 326.074 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' [66]  (0 ns)
	'store' operation ('data_mem_0_addr_3_write_ln53', mem.cpp:53) of variable 'rv2_0' on array 'data_mem_0' [98]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 326.450 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 327.340 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 328.044 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 330.799 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 334.013 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.61 seconds; current allocated memory: 340.056 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.53 seconds; current allocated memory: 340.499 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 344.323 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.33 seconds; current allocated memory: 355.227 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.41 seconds; current allocated memory: 368.233 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 373.741 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 376.433 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.42 seconds; current allocated memory: 384.635 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' and 'return' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.04 seconds; current allocated memory: 406.033 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:15 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 11522 ; free virtual = 54350
INFO: [VHDL 208-304] Generating VHDL RTL for multicycle_pipeline_ip.
INFO: [VLOG 209-307] Generating Verilog RTL for multicycle_pipeline_ip.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:124:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:116:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:02 ; elapsed = 00:01:04 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10270 ; free virtual = 53169
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:02 ; elapsed = 00:01:04 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10268 ; free virtual = 53169
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:02 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10244 ; free virtual = 53154
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10221 ; free virtual = 53132
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:57:63) to (issue.cpp:102:1) in function 'issue'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:67:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:88:1) in function 'execute_2'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:105:19) to (execute_1.cpp:179:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:109:17) to (decode.cpp:128:7) in function 'decode'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:112)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:111)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10172 ; free virtual = 53087
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10098 ; free virtual = 53013
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 68.33 seconds; current allocated memory: 316.406 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 316.636 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 317.212 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 318.193 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.24 seconds; current allocated memory: 319.331 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 323.153 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.19 seconds; current allocated memory: 324.144 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 325.343 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 325.531 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 325.785 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' [66]  (0 ns)
	'store' operation ('data_mem_0_addr_3_write_ln53', mem.cpp:53) of variable 'rv2_0' on array 'data_mem_0' [98]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 326.161 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:129:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1488)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:116:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)'
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9288 ; free virtual = 52283
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9288 ; free virtual = 52283
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9264 ; free virtual = 52267
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9241 ; free virtual = 52246
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:62:9) to (issue.cpp:102:1) in function 'issue'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:67:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:61:9) to (execute_2.cpp:89:1) in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:105:19) to (execute_1.cpp:165:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:109:17) to (decode.cpp:128:7) in function 'decode'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-603] Inlining function 'aesl_mux_load.32i1P.i5' into 'issue' ().
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:112)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:111)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:05 ; elapsed = 00:01:07 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9205 ; free virtual = 52212
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:06 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 9148 ; free virtual = 52147
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 68.86 seconds; current allocated memory: 317.693 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 317.923 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 318.499 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 319.479 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.21 seconds; current allocated memory: 320.817 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.14 seconds; current allocated memory: 326.063 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 327.052 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 328.253 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 328.461 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 328.746 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' [66]  (0 ns)
	'store' operation ('data_mem_2_addr_3_write_ln57', mem.cpp:57) of variable 'rv2_0' on array 'data_mem_2' [104]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 329.119 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:129:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8276 ; free virtual = 51315
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8276 ; free virtual = 51315
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8255 ; free virtual = 51300
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8238 ; free virtual = 51285
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...24 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8195 ; free virtual = 51246
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8185 ; free virtual = 51239
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (15.914ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'shl' operation ('result', compute.cpp:53) [981]  (0 ns)
	'select' operation ('result', compute.cpp:10) [1034]  (4.42 ns)
	'select' operation ('result', compute.cpp:48) [1035]  (0.978 ns)
	'select' operation ('result', compute.cpp:48) [1036]  (0.978 ns)
	'select' operation ('result') [1037]  (4.42 ns)
	'select' operation ('result') [1038]  (4.42 ns)
	'select' operation ('e_1_to_e_2.result1', execute_1.cpp:142) [1114]  (0.698 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.21 seconds; current allocated memory: 257.445 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.58 seconds; current allocated memory: 273.624 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 0.84 seconds; current allocated memory: 280.770 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:19 ; elapsed = 00:01:22 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8122 ; free virtual = 51184
INFO: [VHDL 208-304] Generating VHDL RTL for multicycle_pipeline_ip.
INFO: [VLOG 209-307] Generating Verilog RTL for multicycle_pipeline_ip.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:129:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:116:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8023 ; free virtual = 51058
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8023 ; free virtual = 51058
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 8000 ; free virtual = 51042
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7980 ; free virtual = 51025
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:104:13) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:105:19) to (execute_1.cpp:165:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:112)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:10 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7935 ; free virtual = 50985
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7915 ; free virtual = 50969
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 73.83 seconds; current allocated memory: 259.043 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 260.282 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:177) [545]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:177) to 'execute_1' [1014]  (7.21 ns)
	blocking operation 3.66 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.08 seconds; current allocated memory: 264.050 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 272.013 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.65 seconds; current allocated memory: 279.133 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7905 ; free virtual = 50941
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7905 ; free virtual = 50941
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7883 ; free virtual = 50926
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7863 ; free virtual = 50908
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7815 ; free virtual = 50869
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7798 ; free virtual = 50854
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 75.86 seconds; current allocated memory: 260.039 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 260.551 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:125) [521]  (0 ns)
	'xor' operation ('xor_ln79_1', issue.cpp:79) [908]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:126) [952]  (0.978 ns)
	'select' operation ('select_ln127_7', execute_1.cpp:127) [961]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:129) to 'compute' [972]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.86 seconds; current allocated memory: 264.197 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.46 seconds; current allocated memory: 272.006 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 273.011 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:129:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7831 ; free virtual = 50889
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7830 ; free virtual = 50889
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7809 ; free virtual = 50875
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7766 ; free virtual = 50858
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 33 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:34:25) to (compute.cpp:69:3) in function 'compute_op_result'... converting 10 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...12 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7724 ; free virtual = 50819
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7712 ; free virtual = 50804
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute_op_result' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute_op_result'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 77.5 seconds; current allocated memory: 259.646 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 259.915 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:125) [528]  (0 ns)
	'xor' operation ('xor_ln756_3') [900]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:126) [952]  (0.978 ns)
	'select' operation ('e_1_state.d_i.rs2.V', execute_1.cpp:127) [959]  (1.22 ns)
	'call' operation ('result1', execute_1.cpp:38) to 'compute_op_result' [996]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.09 seconds; current allocated memory: 263.735 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 271.765 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute_op_result' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute_op_result'.
INFO: [HLS 200-111]  Elapsed time: 0.58 seconds; current allocated memory: 272.389 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:144:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:130:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:116:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.686.689.878.1013)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7735 ; free virtual = 50755
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7735 ; free virtual = 50755
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7711 ; free virtual = 50738
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:10 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7692 ; free virtual = 50721
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:104) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:104:13) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:105:19) to (execute_1.cpp:166:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:112)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7645 ; free virtual = 50681
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7626 ; free virtual = 50663
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 74.08 seconds; current allocated memory: 259.054 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 260.296 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:177) [545]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:177) to 'execute_1' [1014]  (7.21 ns)
	blocking operation 3.66 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.04 seconds; current allocated memory: 264.065 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.48 seconds; current allocated memory: 272.026 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.63 seconds; current allocated memory: 279.146 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<1>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:43:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<1>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<1>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<1>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7640 ; free virtual = 50660
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7640 ; free virtual = 50660
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7618 ; free virtual = 50644
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7599 ; free virtual = 50627
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:105:7) in function 'multicycle_pipeline_ip'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:65:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7556 ; free virtual = 50588
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 7538 ; free virtual = 50574
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 74.96 seconds; current allocated memory: 260.041 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 260.552 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:125) [521]  (0 ns)
	'xor' operation ('xor_ln79_1', issue.cpp:79) [908]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:126) [952]  (0.978 ns)
	'select' operation ('select_ln127_7', execute_1.cpp:127) [961]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:129) to 'compute' [972]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.86 seconds; current allocated memory: 264.198 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.45 seconds; current allocated memory: 272.005 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 273.011 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6618 ; free virtual = 49714
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6618 ; free virtual = 49714
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:11 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6597 ; free virtual = 49700
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:11 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6578 ; free virtual = 49683
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6534 ; free virtual = 49642
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6519 ; free virtual = 49627
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 75.6 seconds; current allocated memory: 259.413 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 259.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [520]  (0 ns)
	'xor' operation ('xor_ln79_1', issue.cpp:79) [904]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [948]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [957]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [968]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.91 seconds; current allocated memory: 263.570 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 271.349 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 272.352 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:21 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6297 ; free virtual = 49429
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:21 ; elapsed = 00:01:23 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6296 ; free virtual = 49429
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6277 ; free virtual = 49417
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6247 ; free virtual = 49397
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:22 ; elapsed = 00:01:25 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6205 ; free virtual = 49361
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:23 ; elapsed = 00:01:26 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6179 ; free virtual = 49337
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 85.97 seconds; current allocated memory: 259.423 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 259.934 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [520]  (0 ns)
	'xor' operation ('xor_ln79_1', issue.cpp:79) [904]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [948]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [957]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [968]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.07 seconds; current allocated memory: 263.550 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 271.330 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 272.334 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6076 ; free virtual = 49298
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6076 ; free virtual = 49298
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:13 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6053 ; free virtual = 49283
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6036 ; free virtual = 49267
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:17 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 6003 ; free virtual = 49228
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:15 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5987 ; free virtual = 49213
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.02 seconds; current allocated memory: 259.421 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 259.932 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [520]  (0 ns)
	'xor' operation ('xor_ln79_1', issue.cpp:79) [904]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [948]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [957]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [968]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.89 seconds; current allocated memory: 263.548 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.46 seconds; current allocated memory: 271.327 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 272.331 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5754 ; free virtual = 48932
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5754 ; free virtual = 48932
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5733 ; free virtual = 48917
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5714 ; free virtual = 48900
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 17 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5672 ; free virtual = 48861
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5657 ; free virtual = 48846
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 76.2 seconds; current allocated memory: 259.087 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 259.627 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [520]  (0 ns)
	'xor' operation ('xor_ln79_1', issue.cpp:79) [900]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [944]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [953]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [964]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.8 seconds; current allocated memory: 263.231 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 270.953 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.53 seconds; current allocated memory: 271.982 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5199 ; free virtual = 48492
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5199 ; free virtual = 48492
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5178 ; free virtual = 48477
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5160 ; free virtual = 48460
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 17 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:13 ; elapsed = 00:01:15 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5130 ; free virtual = 48422
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:14 ; elapsed = 00:01:16 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 5112 ; free virtual = 48407
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 76.11 seconds; current allocated memory: 259.202 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 259.713 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [520]  (0 ns)
	'xor' operation ('xor_ln75_1', issue.cpp:75) [900]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [944]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [953]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [964]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.88 seconds; current allocated memory: 263.317 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.53 seconds; current allocated memory: 271.041 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.62 seconds; current allocated memory: 272.070 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<5>, ap_uint<5>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<5>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<5>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23769 ; free virtual = 60272
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23766 ; free virtual = 60273
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23740 ; free virtual = 60257
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:07 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23721 ; free virtual = 60240
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all sub-loops inside loop 'VITIS_LOOP_130_1' (multicycle_pipeline_ip.cpp:87) in function 'multicycle_pipeline_ip' for pipelining.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_9_1' in function 'multicycle_pipeline_ip' completely with a factor of 31.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 19 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (multicycle_pipeline_ip.cpp:211:3) in function 'multicycle_pipeline_ip'... converting 125 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:08 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23679 ; free virtual = 60201
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 23663 ; free virtual = 60187
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 71.36 seconds; current allocated memory: 259.311 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 259.851 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (10.8642ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [520]  (0 ns)
	'xor' operation ('xor_ln91_1', issue.cpp:91) [904]  (0.978 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [948]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [957]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [968]  (7.21 ns)
	blocking operation 0.486 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.84 seconds; current allocated memory: 263.467 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.43 seconds; current allocated memory: 271.246 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 272.250 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<6>, ap_uint<6>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<6>, ap_uint<6>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<6>, ap_uint<6>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<6>, ap_uint<6>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.3.6.193.256.319)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' (new_cycle.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.3.6.193.256.319)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.3.6.193.256.319)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.3.6.193.256.319)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.3.6.193.256.319)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:111:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_1' (lock_unlock_reg.cpp:11:20) in function 'lock_unlock_reg' completely with a factor of 32 (lock_unlock_reg.cpp:11:20)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22399 ; free virtual = 59920
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22399 ; free virtual = 59920
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22374 ; free virtual = 59902
INFO: [HLS 200-10] Checking synthesizability ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:111:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_1' (lock_unlock_reg.cpp:11:20) in function 'lock_unlock_reg' completely with a factor of 32 (lock_unlock_reg.cpp:11:20)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22406 ; free virtual = 59903
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22406 ; free virtual = 59903
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22383 ; free virtual = 59886
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22359 ; free virtual = 59864
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:33:19) to (multicycle_pipeline_ip.cpp:40:1) in function 'running_cond_update'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:48:17) to (issue.cpp:114:1) in function 'issue'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:67:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:91:1) in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:164:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:109:17) to (decode.cpp:128:7) in function 'decode'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:111)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22277 ; free virtual = 59783
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:19 ; elapsed = 00:01:21 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21991 ; free virtual = 59559
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 81.12 seconds; current allocated memory: 467.124 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 467.352 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 467.944 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 468.924 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 469.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 471.264 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.23 seconds; current allocated memory: 472.184 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 473.373 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 473.582 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 473.867 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' (mem_access.cpp:94) [64]  (0 ns)
	'store' operation ('data_mem_0_addr_3_write_ln54', mem.cpp:54) of variable 'rv2_0', mem_access.cpp:94 on array 'data_mem_0' [92]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.12 seconds; current allocated memory: 474.236 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 475.079 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.52 seconds; current allocated memory: 475.778 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:111:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_1' (lock_unlock_reg.cpp:11:20) in function 'lock_unlock_reg' completely with a factor of 32 (lock_unlock_reg.cpp:11:20)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22149 ; free virtual = 59745
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22149 ; free virtual = 59745
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22125 ; free virtual = 59729
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22102 ; free virtual = 59707
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:33:19) to (multicycle_pipeline_ip.cpp:40:1) in function 'running_cond_update'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:48:17) to (issue.cpp:114:1) in function 'issue'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:67:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:91:1) in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:164:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:109:17) to (decode.cpp:128:7) in function 'decode'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:111)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22023 ; free virtual = 59634
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:17 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21830 ; free virtual = 59442
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 79.71 seconds; current allocated memory: 473.972 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 474.201 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 474.792 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 475.773 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 476.720 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 478.113 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 479.033 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 480.222 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 480.431 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 480.716 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' (mem_access.cpp:94) [64]  (0 ns)
	'store' operation ('data_mem_2_addr_3_write_ln58', mem.cpp:58) of variable 'rv2_0', mem_access.cpp:94 on array 'data_mem_2' [98]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 481.084 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 481.927 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 482.626 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:111:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:01 ; elapsed = 00:01:03 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22069 ; free virtual = 59654
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:01 ; elapsed = 00:01:03 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22069 ; free virtual = 59654
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:01 ; elapsed = 00:01:04 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22047 ; free virtual = 59637
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:02 ; elapsed = 00:01:04 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22023 ; free virtual = 59615
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lock_unlock_reg' (lock_unlock_reg.cpp:4:5).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_11_1' in function 'lock_unlock_reg' completely with a factor of 32.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:33:19) to (multicycle_pipeline_ip.cpp:40:1) in function 'running_cond_update'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:48:17) to (issue.cpp:114:1) in function 'issue'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:67:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:91:1) in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:164:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:109:17) to (decode.cpp:128:7) in function 'decode'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:111)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21946 ; free virtual = 59536
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:16 ; elapsed = 00:01:19 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21766 ; free virtual = 59358
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 79.22 seconds; current allocated memory: 463.948 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 464.177 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 464.768 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.05 seconds; current allocated memory: 465.749 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.18 seconds; current allocated memory: 466.695 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 468.089 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.25 seconds; current allocated memory: 469.008 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 470.197 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 470.406 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 470.691 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' (mem_access.cpp:94) [64]  (0 ns)
	'store' operation ('data_mem_0_addr_3_write_ln54', mem.cpp:54) of variable 'rv2_0', mem_access.cpp:94 on array 'data_mem_0' [92]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 471.060 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 471.903 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 472.602 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:111:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22041 ; free virtual = 59625
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22041 ; free virtual = 59625
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:00:59 ; elapsed = 00:01:01 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 22019 ; free virtual = 59608
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:00:59 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21995 ; free virtual = 59586
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lock_unlock_reg' (lock_unlock_reg.cpp:4:5).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_11_1' in function 'lock_unlock_reg' completely with a factor of 32.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:33:19) to (multicycle_pipeline_ip.cpp:40:1) in function 'running_cond_update'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:48:17) in function 'issue'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:67:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:91:1) in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:164:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:109:17) to (decode.cpp:128:7) in function 'decode'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:111)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21938 ; free virtual = 59532
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21815 ; free virtual = 59415
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 68.46 seconds; current allocated memory: 376.502 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 376.731 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 377.306 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 378.287 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 379.221 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 380.600 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 381.520 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 382.708 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 382.917 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 383.202 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' (mem_access.cpp:94) [64]  (0 ns)
	'store' operation ('data_mem_0_addr_3_write_ln54', mem.cpp:54) of variable 'rv2_0', mem_access.cpp:94 on array 'data_mem_0' [92]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 383.571 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 384.413 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.5 seconds; current allocated memory: 385.112 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 387.864 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lock_unlock_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'lock_unlock_reg'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 3, Depth = 5.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 69.63 seconds; current allocated memory: 393.093 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.06 seconds; current allocated memory: 420.326 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'statistic_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'statistic_update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 420.382 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 420.440 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'running_cond_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'running_cond_update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 420.487 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 420.543 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
WARNING: [HLS 200-892] User specified latency constraint cannot be honored in region 'bb17630' (multicycle_pipeline_ip.cpp:211). Please consider relaxing the latency upper bound of 2.
WARNING: [HLS 200-880] The II Violation in module 'multicycle_pipeline_ip' (Loop: VITIS_LOOP_130_1): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between 'extractvalue' operation ('is_reg_computed.V[31]', multicycle_pipeline_ip.cpp:206) and 'call' operation ('call_ret', multicycle_pipeline_ip.cpp:206) to 'lock_unlock_reg'.
WARNING: [HLS 200-875] II = 4 is infeasible due to multiple pipeline iteration latency = 5 and incompatible II = 3 of 'call' operation ('call_ret', multicycle_pipeline_ip.cpp:206) to 'lock_unlock_reg'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 5, Depth = 7.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.02 seconds; current allocated memory: 422.893 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.14 seconds; current allocated memory: 428.691 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.7 seconds; current allocated memory: 429.070 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 432.755 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 444.073 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 456.199 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
INFO: [HLS 200-111]  Elapsed time: 0.47 seconds; current allocated memory: 461.747 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'mem_access'.
INFO: [HLS 200-111]  Elapsed time: 0.17 seconds; current allocated memory: 464.349 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'write_back'.
INFO: [HLS 200-111]  Elapsed time: 0.38 seconds; current allocated memory: 472.199 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'lock_unlock_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'lock_unlock_reg'.
INFO: [HLS 200-111]  Elapsed time: 3.2 seconds; current allocated memory: 522.353 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'statistic_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'statistic_update'.
INFO: [HLS 200-111]  Elapsed time: 1.66 seconds; current allocated memory: 579.429 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:114:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.1572)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:111:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21862 ; free virtual = 59495
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21862 ; free virtual = 59495
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21838 ; free virtual = 59479
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:00 ; elapsed = 00:01:02 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21815 ; free virtual = 59457
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-502] Unrolling all loops for pipelining in function 'lock_unlock_reg' (lock_unlock_reg.cpp:4:7).
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_25_1' in function 'lock_unlock_reg' completely with a factor of 32.
INFO: [HLS 200-489] Unrolling loop 'VITIS_LOOP_34_2' in function 'lock_unlock_reg' completely with a factor of 32.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'write_back'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:33:19) to (multicycle_pipeline_ip.cpp:40:1) in function 'running_cond_update'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:48:17) to (issue.cpp:114:1) in function 'issue'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (fetch.cpp:67:1) in function 'fetch'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_2.cpp:63:9) to (execute_2.cpp:91:1) in function 'execute_2'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:164:1) in function 'execute_1'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:109:17) to (decode.cpp:128:7) in function 'decode'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'decode'... converting 29 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'decode' (decode.cpp:111)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21757 ; free virtual = 59395
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:16 ; elapsed = 00:01:18 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 21599 ; free virtual = 59238
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 78.56 seconds; current allocated memory: 439.398 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 439.627 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'decode'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 440.218 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 441.198 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'issue'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 442.145 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 443.537 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.22 seconds; current allocated memory: 444.457 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 445.646 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_2'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.16 seconds; current allocated memory: 445.855 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 446.140 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'mem_access' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'mem_access'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
WARNING: [HLS 200-871] Estimated clock period (8.144ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'mem_access' consists of the following:	wire read on port 'm_from_e_1_2' (mem_access.cpp:94) [64]  (0 ns)
	'store' operation ('data_mem_2_addr_3_write_ln58', mem.cpp:58) of variable 'rv2_0', mem_access.cpp:94 on array 'data_mem_2' [98]  (3.25 ns)
	blocking operation 4.89 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.11 seconds; current allocated memory: 446.509 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.03 seconds; current allocated memory: 447.352 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'write_back' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'write_back'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.51 seconds; current allocated memory: 448.051 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.1 seconds; current allocated memory: 450.802 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'lock_unlock_reg' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'lock_unlock_reg'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 3, Depth = 9.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 364.33 seconds; current allocated memory: 463.648 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 3.33 seconds; current allocated memory: 556.197 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'statistic_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'statistic_update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.81 seconds; current allocated memory: 556.462 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 556.521 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'running_cond_update' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'running_cond_update'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 1, Depth = 1.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 0.02 seconds; current allocated memory: 556.568 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.01 seconds; current allocated memory: 556.625 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
WARNING: [HLS 200-892] User specified latency constraint cannot be honored in region 'bb17630' (multicycle_pipeline_ip.cpp:211). Please consider relaxing the latency upper bound of 2.
WARNING: [HLS 200-880] The II Violation in module 'multicycle_pipeline_ip' (Loop: VITIS_LOOP_130_1): Unable to enforce a carried dependence constraint (II = 3, distance = 1, offset = 0) between 'extractvalue' operation ('is_reg_computed.V[31]', multicycle_pipeline_ip.cpp:206) and 'call' operation ('issue_ret', multicycle_pipeline_ip.cpp:169) to 'issue'.
WARNING: [HLS 200-875] II = 4 is infeasible due to multiple pipeline iteration latency = 9 and incompatible II = 3 of 'call' operation ('call_ret', multicycle_pipeline_ip.cpp:206) to 'lock_unlock_reg'.
WARNING: [HLS 200-875] II = 5 is infeasible due to multiple pipeline iteration latency = 9 and incompatible II = 3 of 'call' operation ('call_ret', multicycle_pipeline_ip.cpp:206) to 'lock_unlock_reg'.
WARNING: [HLS 200-880] The II Violation in module 'multicycle_pipeline_ip' (Loop: VITIS_LOOP_130_1): Unable to enforce a carried dependence constraint (II = 6, distance = 1, offset = 0) between 'extractvalue' operation ('is_reg_computed.V[31]', multicycle_pipeline_ip.cpp:206) and 'call' operation ('issue_ret', multicycle_pipeline_ip.cpp:169) to 'issue'.
WARNING: [HLS 200-875] II = 7 is infeasible due to multiple pipeline iteration latency = 9 and incompatible II = 3 of 'call' operation ('call_ret', multicycle_pipeline_ip.cpp:206) to 'lock_unlock_reg'.
WARNING: [HLS 200-875] II = 8 is infeasible due to multiple pipeline iteration latency = 9 and incompatible II = 3 of 'call' operation ('call_ret', multicycle_pipeline_ip.cpp:206) to 'lock_unlock_reg'.
INFO: [HLS 200-1470] Pipelining result : Target II = 3, Final II = 9, Depth = 11.
WARNING: [HLS 200-871] Estimated clock period (11.16ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:206) to 'lock_unlock_reg' [766]  (6.3 ns)
	'phi' operation ('is_reg_computed.V[8]') with incoming values : ('is_reg_computed_V_8_s', multicycle_pipeline_ip.cpp:28) ('is_reg_computed.V[8]', multicycle_pipeline_ip.cpp:206) [351]  (0 ns)
	'call' operation ('issue_ret', multicycle_pipeline_ip.cpp:169) to 'issue' [597]  (4.86 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 1.06 seconds; current allocated memory: 559.001 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.04 seconds; current allocated memory: 564.907 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111]  Elapsed time: 0.81 seconds; current allocated memory: 565.287 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'decode' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'decode'.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 568.970 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'issue' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'issue'.
INFO: [HLS 200-111]  Elapsed time: 0.3 seconds; current allocated memory: 580.538 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.49 seconds; current allocated memory: 592.775 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_2' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_2'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'lock_unlock_reg.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:209:5)
INFO: [HLS 214-131] Inlining function 'lock_unlock_reg(ap_uint<6>, ap_uint<6>, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:206:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, ap_uint<6>*, w_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, ap_uint<6>*, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:95:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:211:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:210:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:194:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:189:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:57:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 20840 ; free virtual = 58460
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 20840 ; free virtual = 58460
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 20822 ; free virtual = 58445
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:05 ; elapsed = 00:01:07 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 20797 ; free virtual = 58428
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:57) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_27_1' (multicycle_pipeline_ip.cpp:28) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:67) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:69) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:87:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:17) to (issue.cpp:91:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:84:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:56)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 20756 ; free virtual = 58389
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 20730 ; free virtual = 58364
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 68.71 seconds; current allocated memory: 269.232 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 269.743 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_27_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_130_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (15.747ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [526]  (0 ns)
	'xor' operation ('xor_ln756_3') [1667]  (0 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [1668]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [1677]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [1688]  (7.21 ns)
	blocking operation 6.35 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.06 seconds; current allocated memory: 277.419 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.96 seconds; current allocated memory: 302.474 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.55 seconds; current allocated memory: 303.658 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.296.361.496)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:144:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.39.42.367.432.567)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14898 ; free virtual = 54516
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14898 ; free virtual = 54516
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14876 ; free virtual = 54500
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14856 ; free virtual = 54483
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:27) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:66) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:85:15) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:78:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 11 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:28:16) to (execute_1.cpp:50:1) in function 'compute'... converting 25 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:55)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14815 ; free virtual = 54445
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:10 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14789 ; free virtual = 54420
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'compute'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 72.44 seconds; current allocated memory: 269.661 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.04 seconds; current allocated memory: 270.173 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_125_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (15.747ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state_is_full.V') with incoming values : ('e_1_state.is_full.V', execute_1.cpp:124) [526]  (0 ns)
	'xor' operation ('xor_ln756_3') [1667]  (0 ns)
	'and' operation ('save_input.V', execute_1.cpp:125) [1668]  (0.978 ns)
	'select' operation ('select_ln126_7', execute_1.cpp:126) [1677]  (1.22 ns)
	'call' operation ('call_ret', execute_1.cpp:128) to 'compute' [1688]  (7.21 ns)
	blocking operation 6.35 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 8.84 seconds; current allocated memory: 277.879 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1 seconds; current allocated memory: 302.937 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'compute' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'compute'.
INFO: [HLS 200-111]  Elapsed time: 0.56 seconds; current allocated memory: 304.128 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<2>, ap_uint<3>)' (type.cpp:63:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<2>, ap_uint<3>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:43:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:65:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:64:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:84:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:85:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:144:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.683.686.875.1010)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:182:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:198:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.683.686.875.1010)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.683.686.875.1010)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.683.686.875.1010)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.683.686.875.1010)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14747 ; free virtual = 54343
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14747 ; free virtual = 54343
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14726 ; free virtual = 54327
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14706 ; free virtual = 54310
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:27) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:66) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:101:13) to (decode.cpp:128:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:13) to (decode.cpp:58:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:78:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:66:17) to (wb.cpp:103:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:166:1) in function 'execute_1'... converting 33 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:55)...9 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:05 ; elapsed = 00:01:07 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14663 ; free virtual = 54270
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:06 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 14630 ; free virtual = 54241
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 68.84 seconds; current allocated memory: 270.610 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 271.850 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_125_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (15.747ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:171) [549]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:171) to 'execute_1' [1918]  (7.21 ns)
	blocking operation 8.54 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.46 seconds; current allocated memory: 280.138 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.15 seconds; current allocated memory: 305.630 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.69 seconds; current allocated memory: 312.762 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.31 seconds; current allocated memory: 331.730 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1804.785 ; gain = 1374.406 ; free physical = 14183 ; free virtual = 53827
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:41:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:60:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:59:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:82:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:83:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:180:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:196:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13748 ; free virtual = 53505
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13748 ; free virtual = 53505
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:04 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13727 ; free virtual = 53489
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:04 ; elapsed = 00:01:07 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13707 ; free virtual = 53471
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:27) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:66) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:101:13) to (decode.cpp:126:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:78:13) to (decode.cpp:56:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:78:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:68:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:166:1) in function 'execute_1'... converting 33 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:55)...9 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13663 ; free virtual = 53431
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:06 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 13626 ; free virtual = 53403
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 68.93 seconds; current allocated memory: 268.749 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.08 seconds; current allocated memory: 269.952 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_125_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (15.747ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:171) [541]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:171) to 'execute_1' [1830]  (7.21 ns)
	blocking operation 8.54 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.38 seconds; current allocated memory: 277.872 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.09 seconds; current allocated memory: 303.128 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.66 seconds; current allocated memory: 309.829 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.26 seconds; current allocated memory: 328.305 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:21 ; elapsed = 00:01:24 . Memory (MB): peak = 1804.629 ; gain = 1374.250 ; free physical = 13175 ; free virtual = 52971
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:41:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:63:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:62:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:61:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:60:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:59:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:82:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:83:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:180:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:196:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:06 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10352 ; free virtual = 53412
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:06 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10352 ; free virtual = 53412
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10332 ; free virtual = 53396
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10313 ; free virtual = 53379
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:27) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:66) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:101:13) to (decode.cpp:126:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:78:13) to (decode.cpp:56:3) in function 'multicycle_pipeline_ip'... converting 29 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:78:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:68:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:166:1) in function 'execute_1'... converting 33 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:55)...9 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10270 ; free virtual = 53339
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 10240 ; free virtual = 53311
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 71.83 seconds; current allocated memory: 268.715 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 269.919 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_125_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (15.747ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:171) [541]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:171) to 'execute_1' [1830]  (7.21 ns)
	blocking operation 8.54 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.77 seconds; current allocated memory: 277.840 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.19 seconds; current allocated memory: 303.098 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.7 seconds; current allocated memory: 309.799 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.36 seconds; current allocated memory: 328.273 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:24 ; elapsed = 00:01:27 . Memory (MB): peak = 1804.629 ; gain = 1374.250 ; free physical = 9748 ; free virtual = 52879
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:59:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:101:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:180:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:196:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 751 ; free virtual = 56439
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 751 ; free virtual = 56439
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:03 ; elapsed = 00:01:05 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 721 ; free virtual = 56423
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:03 ; elapsed = 00:01:06 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 707 ; free virtual = 56406
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:27) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:66) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:101:13) to (decode.cpp:144:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:96:13) to (decode.cpp:74:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:78:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:68:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:163:1) in function 'execute_1'... converting 33 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:55)...6 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:04 ; elapsed = 00:01:07 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 663 ; free virtual = 56366
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:05 ; elapsed = 00:01:08 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 635 ; free virtual = 56339
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 67.96 seconds; current allocated memory: 269.318 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 270.522 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_125_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (14.8825ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:171) [541]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:171) to 'execute_1' [1838]  (7.21 ns)
	blocking operation 7.68 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 8.93 seconds; current allocated memory: 278.460 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.07 seconds; current allocated memory: 303.800 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.68 seconds; current allocated memory: 310.501 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_mem' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_mem_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_mem', 'data_mem_0', 'data_mem_1', 'data_mem_2', 'data_mem_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.36 seconds; current allocated memory: 329.008 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:19 ; elapsed = 00:01:23 . Memory (MB): peak = 1804.633 ; gain = 1374.254 ; free physical = 347 ; free virtual = 55911
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:59:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:101:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:180:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:196:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4755 ; free virtual = 49671
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4755 ; free virtual = 49671
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4737 ; free virtual = 49656
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:07 ; elapsed = 00:01:09 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4717 ; free virtual = 49638
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:27) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:66) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:101:13) to (decode.cpp:144:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:96:13) to (decode.cpp:74:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:78:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:68:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:163:1) in function 'execute_1'... converting 33 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:55)...6 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:08 ; elapsed = 00:01:10 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4668 ; free virtual = 49597
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4640 ; free virtual = 49569
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 71.93 seconds; current allocated memory: 269.329 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 270.532 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_125_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (14.8825ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:171) [541]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:171) to 'execute_1' [1838]  (7.21 ns)
	blocking operation 7.68 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.73 seconds; current allocated memory: 278.470 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.16 seconds; current allocated memory: 303.808 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.72 seconds; current allocated memory: 310.511 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_ram', 'data_ram_0', 'data_ram_1', 'data_ram_2', 'data_ram_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.36 seconds; current allocated memory: 329.015 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:24 ; elapsed = 00:01:27 . Memory (MB): peak = 1812.633 ; gain = 1382.254 ; free physical = 4148 ; free virtual = 49109
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:59:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:101:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.272.331.454)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:180:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:196:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.272.331.454)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.272.331.454)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.37.40.272.331.454)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-10] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-777] Using interface defaults for 'Vivado' target.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:59:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:101:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(char*, char*, char*, char*, ap_uint<2>, ap_uint<11>, char, char, char, char, ap_uint<2>)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'mem_load(char*, char*, char*, char*, ap_uint<11>, char*, char*, char*, char*)' into 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' (mem_access.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<2>, ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<2>, ap_uint<11>, ap_uint<3>, m_state_s*, char*, char*, char*, char*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:201:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:200:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:195:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, char*, char*, char*, char*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:188:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:183:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:2)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'from_d_to_i_s::operator=(from_d_to_i_s const&)' (./multicycle_pipeline_ip.h:180:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&)' into 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' (./multicycle_pipeline_ip.h:196:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_f_s::operator=(from_d_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_f_s::operator=(from_e_1_to_f_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_f_to_d_s::operator=(from_f_to_d_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_d_to_i_s::operator=(from_d_to_i_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_i_to_e_1_s::operator=(from_i_to_e_1_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_e_2_s::operator=(from_e_1_to_e_2_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_1_to_m_s::operator=(from_e_1_to_m_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_e_2_to_w_s::operator=(from_e_2_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'from_m_to_w_s::operator=(from_m_to_w_s const&)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'decoded_instruction_s::operator=(decoded_instruction_s const&) (.629.632.803.926)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 214-178] Inlining function 'build_word(unsigned char, unsigned char, unsigned char, unsigned char, ap_uint<2>, ap_uint<3>, int*)' into 'multicycle_pipeline_ip(ap_uint<9>, unsigned int*, char*, char*, char*, char*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:56:0)
INFO: [HLS 200-111] Finished Linking Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4510 ; free virtual = 49448
INFO: [HLS 200-111] Finished Checking Pragmas Time (s): cpu = 00:01:09 ; elapsed = 00:01:11 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4510 ; free virtual = 49448
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4489 ; free virtual = 49432
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability Time (s): cpu = 00:01:09 ; elapsed = 00:01:12 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4469 ; free virtual = 49414
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_instruction' (multicycle_pipeline_ip.cpp:55) as it is incompatible with its interface mode 's_axilite'.
WARNING: [XFORM 203-803] Dropped interface mode 'ap_auto' on 'nb_cycle' (multicycle_pipeline_ip.cpp:56) as it is incompatible with its interface mode 's_axilite'.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:27) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-101] Partitioning array 'reg_file' (multicycle_pipeline_ip.cpp:66) in dimension 1 completely.
INFO: [XFORM 203-101] Partitioning array 'is_reg_computed.V' (multicycle_pipeline_ip.cpp:68) in dimension 1 completely.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:101:13) to (decode.cpp:144:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:96:13) to (decode.cpp:74:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:78:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:19) to (mem_access.cpp:99:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:68:17) to (wb.cpp:105:6) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:104:19) to (execute_1.cpp:163:1) in function 'execute_1'... converting 33 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:55)...6 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:111)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Pre-synthesis Time (s): cpu = 00:01:10 ; elapsed = 00:01:13 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4422 ; free virtual = 49373
INFO: [HLS 200-111] Finished Architecture Synthesis Time (s): cpu = 00:01:12 ; elapsed = 00:01:14 . Memory (MB): peak = 1662.188 ; gain = 1231.809 ; free physical = 4396 ; free virtual = 49346
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2.
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 74.33 seconds; current allocated memory: 269.315 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 0.09 seconds; current allocated memory: 270.518 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 1, Final II = 1, Depth = 1.
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_125_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3.
WARNING: [HLS 200-871] Estimated clock period (14.8825ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:171) [541]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:171) to 'execute_1' [1838]  (7.21 ns)
	blocking operation 7.68 ns on control path)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111]  Elapsed time: 9.47 seconds; current allocated memory: 278.457 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111]  Elapsed time: 1.32 seconds; current allocated memory: 303.801 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111]  Elapsed time: 0.86 seconds; current allocated memory: 310.506 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_0' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_1' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_2' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram_3' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_ram', 'data_ram_0', 'data_ram_1', 'data_ram_2', 'data_ram_3' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111]  Elapsed time: 1.41 seconds; current allocated memory: 329.012 MB.
INFO: [HLS 200-111] Finished generating all RTL models Time (s): cpu = 00:01:27 ; elapsed = 00:01:30 . Memory (MB): peak = 1804.633 ; gain = 1374.254 ; free physical = 3903 ; free virtual = 48923
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 38.39 seconds. CPU system time: 3.92 seconds. Elapsed time: 41.9 seconds; current allocated memory: 287.949 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:59:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:101:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:125:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<11>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<11>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:22)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:70:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:61:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:192:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:191:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:186:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:182:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:146:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:128:2)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (compute.cpp:125:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.54 seconds. CPU system time: 0.24 seconds. Elapsed time: 5.79 seconds; current allocated memory: 294.750 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 294.750 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 311.391 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.2 seconds; current allocated memory: 330.324 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:25) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:95:13) to (decode.cpp:144:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:96:13) to (decode.cpp:74:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:7:11) to (mem.cpp:45:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute_1.cpp:101:19) to (execute_1.cpp:160:1) in function 'execute_1'... converting 32 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49)...6 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'execute_1' (execute_1.cpp:108)...3 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.74 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.76 seconds; current allocated memory: 375.762 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.6 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.6 seconds; current allocated memory: 420.270 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_26_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_26_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_26_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.38 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.4 seconds; current allocated memory: 424.664 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 424.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'execute_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, function 'execute_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.16 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 427.504 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 427.504 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_119_1'.
WARNING: [HLS 200-892] User specified latency constraint cannot be honored in region 'xcl_latency..0' (multicycle_pipeline_ip.cpp:193). Please consider relaxing the latency upper bound of 1.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4, loop 'VITIS_LOOP_119_1'
WARNING: [HLS 200-871] Estimated clock period (14.388ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1' consists of the following:	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:165) to 'execute_1' [1587]  (7.23 ns)
	'phi' operation ('e_1_state.is_full.V') with incoming values : ('e_1_state.is_full.V', multicycle_pipeline_ip.cpp:165) [336]  (0 ns)
	'call' operation ('call_ret', multicycle_pipeline_ip.cpp:165) to 'execute_1' [1587]  (7.16 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 8.32 seconds. CPU system time: 0.04 seconds. Elapsed time: 8.36 seconds; current allocated memory: 490.188 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.74 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.75 seconds; current allocated memory: 506.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.91 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.93 seconds; current allocated memory: 506.316 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.23 seconds. CPU system time: 0 seconds. Elapsed time: 0.23 seconds; current allocated memory: 506.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_26_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_26_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.61 seconds. CPU system time: 0 seconds. Elapsed time: 0.6 seconds; current allocated memory: 506.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'execute_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'execute_1' pipeline 'execute_1' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'execute_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 506.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1' pipeline 'VITIS_LOOP_119_1' pipeline type 'loop pipeline'
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.8 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.8 seconds; current allocated memory: 506.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_ram', 'data_ram' and 'ap_local_deadlock' to AXI-Lite port control.
INFO==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 38.65 seconds. CPU system time: 4 seconds. Elapsed time: 42.21 seconds; current allocated memory: 287.863 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:59:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:101:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:125:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<11>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<11>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:22)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:70:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:61:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:192:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:191:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:186:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:182:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:165:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:146:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:128:2)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:125:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.01 seconds. CPU system time: 0.27 seconds. Elapsed time: 5.28 seconds; current allocated memory: 292.797 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.797 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 310.449 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 327.711 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:25) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:95:13) to (decode.cpp:144:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:96:13) to (decode.cpp:74:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:68:7) in function 'multicycle_pipeline_ip'... converting 15 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:7:11) to (mem.cpp:45:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.7 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.72 seconds; current allocated memory: 373.328 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.58 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.58 seconds; current allocated memory: 405.648 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 39.75 seconds. CPU system time: 3.8 seconds. Elapsed time: 43.15 seconds; current allocated memory: 287.949 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_f_s, from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:53:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:68:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:59:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:101:3)
INFO: [HLS 214-131] Inlining function 'set_output(decoded_instruction_s, ap_uint<9>, d_state_s, from_d_to_f_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:94:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:46:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'set_output(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:125:3)
INFO: [HLS 214-131] Inlining function 'get_input(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'set_output(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:87:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:80:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:22)
INFO: [HLS 214-131] Inlining function 'set_output(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:70:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:61:5)
INFO: [HLS 214-131] Inlining function 'get_input(from_e_2_to_w_s, from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:192:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:191:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:186:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:182:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:177:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:165:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:146:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:128:2)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:125:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.2 seconds. CPU system time: 0.23 seconds. Elapsed time: 5.44 seconds; current allocated memory: 292.902 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 292.902 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 310.766 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 328.055 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_26_1' (multicycle_pipeline_ip.cpp:25) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:95:13) to (decode.cpp:144:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:96:13) to (decode.cpp:74:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:90:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:68:7) in function 'multicycle_pipeline_ip'... converting 15 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:7:11) to (mem.cpp:45:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.71 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.73 seconds; current allocated memory: 374.797 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.59 seconds. CPU system time: 0 seconds. Elapsed time: 0.58 seconds; current allocated memory: 407.227 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 36.25 seconds. CPU system time: 3.53 seconds. Elapsed time: 39.34 seconds; current allocated memory: 287.973 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:66:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:58:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:61:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:83:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:82:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:102:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:103:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:159:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_1(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:102:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:93:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:63:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:33:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:45:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:41:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:37:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_1_state_s, from_e_1_to_m_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:166:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_2(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_1_to_f_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:132:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:86:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:69:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:61:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_2(from_e_2_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:153:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:148:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:135:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:133:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:128:2)
INFO: [HLS 214-178] Inlining function 'init_f_state(f_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(d_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(i_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_e_1_state(e_1_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_e_2_state(e_2_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.08 seconds. CPU system time: 0.27 seconds. Elapsed time: 5.36 seconds; current allocated memory: 292.941 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 292.941 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 310.859 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 328.238 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (multicycle_pipeline_ip.cpp:24) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:96:13) to (decode.cpp:150:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:98:13) to (decode.cpp:76:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:73:17) to (issue.cpp:87:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:67:7) in function 'multicycle_pipeline_ip'... converting 15 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:48)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.73 seconds. CPU system time: 0 seconds. Elapsed time: 0.74 seconds; current allocated memory: 374.473 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.67 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.68 seconds; current allocated memory: 407.359 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_25_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_25_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.35 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.38 seconds; current allocated memory: 411.383 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.06 seconds; current allocated memory: 411.383 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_119_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_119_1'
WARNING: [HLS 200-871] Estimated clock period (9.5295ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1' consists of the following:	multiplexor before 'phi' operation ('e_1_to_m.is_valid.V') with incoming values : ('e_1_to_m.is_valid.V', execute_1.cpp:147) [366]  (1.59 ns)
	'phi' operation ('e_1_to_m.is_valid.V') with incoming values : ('e_1_to_m.is_valid.V', execute_1.cpp:147) [366]  (0 ns)
	'select' operation ('m_state.address.V', mem_access.cpp:60) [1620]  (0.7 ns)
	'shl' operation ('shl_ln80_2', mem.cpp:80) [1660]  (3.99 ns)
	'store' operation ('data_ram_addr_2_write_ln80', mem.cpp:80) of constant <constant:_ssdm_op_Write.bram.p0i32> on array 'data_ram' [1663]  (3.25 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 9.2 seconds. CPU system time: 0.04 seconds. Elapsed time: 9.24 seconds; current allocated memory: 490.578 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.68 seconds. CPU system time: 0 seconds. Elapsed time: 0.69 seconds; current allocated memory: 490.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.86 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.86 seconds; current allocated memory: 490.578 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.21 seconds. CPU system time: 0 seconds. Elapsed time: 0.2 seconds; current allocated memory: 490.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_25_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_25_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.56 seconds. CPU system time: 0 seconds. Elapsed time: 0.57 seconds; current allocated memory: 490.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_119_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.1 seconds. CPU system time: 0 seconds. Elapsed time: 1.1 seconds; current allocated memory: 490.578 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_ram', 'data_ram' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 2.21 seconds. CPU system time: 0.02 seconds. Elapsed time: 2.23 seconds; current allocated memory: 500.777 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.15 seconds; current allocated memory: 501.816 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0.42 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.43 seconds; current allocated memory: 507.117 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for multicycle_pipeline_ip.
INFO: [VLOG 209-307] Generating Verilog RTL for multicycle_pipeline_ip.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 104.94 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 59.87 seconds. CPU system time: 3.96 seconds. Elapsed time: 63.39 seconds; current allocated memory: -716.094 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 35.98 seconds. CPU system time: 3.92 seconds. Elapsed time: 39.49 seconds; current allocated memory: 287.953 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:61:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:83:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:82:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:81:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:80:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:79:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:99:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:100:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:156:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:155:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:148:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:144:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_1(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_1_state_s, from_e_1_to_m_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:163:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_2(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:161:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_1_to_f_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:160:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:129:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:69:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:61:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_2(from_e_2_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:148:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:145:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.71 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.97 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 311.082 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.18 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 328.480 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (multicycle_pipeline_ip.cpp:24) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:97:13) to (decode.cpp:147:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:95:13) to (decode.cpp:76:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:74:17) to (issue.cpp:84:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:67:7) in function 'multicycle_pipeline_ip'... converting 15 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:48)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.7 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.7 seconds; current allocated memory: 375.348 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.56 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.57 seconds; current allocated memory: 408.035 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 36.3 seconds. CPU system time: 3.82 seconds. Elapsed time: 39.66 seconds; current allocated memory: 287.953 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_1(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_1_state_s, from_e_1_to_m_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_2(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_1_to_f_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:159:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:132:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_2(from_e_2_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:153:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:127:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.58 seconds. CPU system time: 0.25 seconds. Elapsed time: 4.84 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 311.062 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 328.902 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (multicycle_pipeline_ip.cpp:24) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:98:13) to (decode.cpp:142:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:74:17) to (issue.cpp:84:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:72:7) in function 'multicycle_pipeline_ip'... converting 17 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:48)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.67 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.69 seconds; current allocated memory: 375.059 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.56 seconds. CPU system time: 0 seconds. Elapsed time: 0.56 seconds; current allocated memory: 408.316 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 35.43 seconds. CPU system time: 3.73 seconds. Elapsed time: 38.73 seconds; current allocated memory: 287.953 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_1(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_1_state_s, from_e_1_to_m_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_2(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_1_to_f_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:159:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:132:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:71:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_2(from_e_2_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:153:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'execute_2(ap_uint<1>, from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:127:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.58 seconds. CPU system time: 0.25 seconds. Elapsed time: 4.82 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 311.059 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 328.895 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (multicycle_pipeline_ip.cpp:24) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:98:13) to (decode.cpp:142:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:74:17) to (issue.cpp:84:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:72:7) in function 'multicycle_pipeline_ip'... converting 17 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:48)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.67 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.68 seconds; current allocated memory: 375.043 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.54 seconds. CPU system time: 0 seconds. Elapsed time: 0.55 seconds; current allocated memory: 408.316 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 36.69 seconds. CPU system time: 3.55 seconds. Elapsed time: 39.78 seconds; current allocated memory: 287.953 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_1(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_1_state_s, from_e_1_to_m_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:171:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_2(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:169:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_1_to_f_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:168:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:159:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:132:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:81:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:70:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:74:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_2(from_e_2_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:153:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:127:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.56 seconds. CPU system time: 0.22 seconds. Elapsed time: 4.79 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.875 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 311.168 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.19 seconds; current allocated memory: 328.844 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (multicycle_pipeline_ip.cpp:24) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:98:13) to (decode.cpp:142:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:74:17) to (issue.cpp:84:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:72:7) in function 'multicycle_pipeline_ip'... converting 15 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:48)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.71 seconds. CPU system time: 0 seconds. Elapsed time: 0.72 seconds; current allocated memory: 374.453 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.6 seconds. CPU system time: 0 seconds. Elapsed time: 0.6 seconds; current allocated memory: 408.004 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 37.73 seconds. CPU system time: 3.43 seconds. Elapsed time: 40.73 seconds; current allocated memory: 288.000 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_1(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_1_state_s, from_e_1_to_m_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_2(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_1_to_f_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:161:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:132:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:68:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:69:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_2(from_e_2_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:153:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:127:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.67 seconds. CPU system time: 0.27 seconds. Elapsed time: 4.95 seconds; current allocated memory: 292.906 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.906 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 311.102 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 328.512 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (multicycle_pipeline_ip.cpp:24) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:98:13) to (decode.cpp:142:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:74:17) to (issue.cpp:84:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:67:7) in function 'multicycle_pipeline_ip'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:48)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.65 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.67 seconds; current allocated memory: 375.551 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.55 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.56 seconds; current allocated memory: 407.938 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_2.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 36.38 seconds. CPU system time: 3.62 seconds. Elapsed time: 39.56 seconds; current allocated memory: 287.977 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_1(int, int, i_state_s, from_i_to_e_1_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_1_state_s, from_e_1_to_m_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:164:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e_2(int, int, ap_uint<9>, e_1_state_s, from_e_1_to_e_2_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:162:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_1_to_f_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:161:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_1_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:152:5)
INFO: [HLS 214-131] Inlining function 'compute(e_1_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:132:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_1_s, e_1_state_s*)' into 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' (execute_1.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, e_2_state_s, from_e_2_to_w_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_2_state_s, int*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_e_2_s, e_2_state_s*)' into 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' (execute_2.cpp:68:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:78:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:69:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_1(from_e_1_to_m_s, m_state_s*)' into 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e_2(from_e_2_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_2_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:154:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_1_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:153:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_2_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:151:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_1_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'execute_2(from_e_1_to_e_2_s, e_2_state_s*, from_e_2_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'execute_1(from_i_to_e_1_s, ap_uint<1>, ap_uint<1>, e_1_state_s*, from_e_1_to_f_s*, from_e_1_to_m_s*, from_e_1_to_e_2_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_1_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_1_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_1_s, from_e_1_to_f_s, from_e_1_to_e_2_s, from_e_1_to_m_s, from_e_2_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_1_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_1_s*, from_e_1_to_e_2_s*, from_e_1_to_m_s*, from_e_2_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:127:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:52:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:62:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:128:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.66 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.89 seconds; current allocated memory: 292.820 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 292.820 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 310.961 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 328.820 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_25_1' (multicycle_pipeline_ip.cpp:24) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:98:13) to (decode.cpp:142:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:74:17) to (issue.cpp:84:24) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:38:7) to (mem_access.cpp:67:7) in function 'multicycle_pipeline_ip'... converting 15 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:48)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.67 seconds. CPU system time: 0 seconds. Elapsed time: 0.69 seconds; current allocated memory: 374.754 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.56 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.55 seconds; current allocated memory: 407.809 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute_1.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 34.69 seconds. CPU system time: 3.65 seconds. Elapsed time: 37.91 seconds; current allocated memory: 287.641 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(int, int, i_state_s, from_i_to_e_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:90:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute_1.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, e_state_s, from_e_to_m_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, from_e_to_w_s*, ap_uint<1>*)' (execute_1.cpp:159:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(int, int, ap_uint<9>, e_state_s, from_e_to_w_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, from_e_to_w_s*, ap_uint<1>*)' (execute_1.cpp:158:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, from_e_to_w_s*, ap_uint<1>*)' (execute_1.cpp:157:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, from_e_to_w_s*, ap_uint<1>*)' (execute_1.cpp:148:5)
INFO: [HLS 214-131] Inlining function 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, from_e_to_w_s*, ap_uint<1>*)' (execute_1.cpp:132:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, from_e_to_w_s*, ap_uint<1>*)' (execute_1.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:33:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:69:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_m_s, m_state_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s*, int*)' into 'write_back(from_e_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:59:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_w_s, w_state_s*)' into 'write_back(from_e_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:57:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_e_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' (wb.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_e_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:147:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:146:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_e_to_w_s, from_m_to_w_s, int*, w_state_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:144:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, from_e_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:134:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_e_to_w_s, from_m_to_w_s, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_e_to_w_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:123:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:53:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:63:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.77 seconds. CPU system time: 0.24 seconds. Elapsed time: 5.02 seconds; current allocated memory: 292.340 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.340 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 310.387 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.2 seconds; current allocated memory: 327.797 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:68:9) to (decode.cpp:141:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:134:25) to (issue.cpp:84:22) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:37:7) to (mem_access.cpp:67:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:49)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.81 seconds. CPU system time: 0 seconds. Elapsed time: 0.82 seconds; current allocated memory: 374.695 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.65 seconds. CPU system time: 0 seconds. Elapsed time: 0.65 seconds; current allocated memory: 407.305 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.29 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.31 seconds; current allocated memory: 411.254 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 411.254 MB.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 33.94 seconds. CPU system time: 3.32 seconds. Elapsed time: 36.82 seconds; current allocated memory: 287.605 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(int, int, i_state_s, from_i_to_e_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, int, ap_uint<9>, e_state_s, from_e_to_m_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:133:5)
INFO: [HLS 214-131] Inlining function 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:122:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:38:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:36:7)
INFO: [HLS 214-131]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 34.64 seconds. CPU system time: 3.19 seconds. Elapsed time: 37.39 seconds; current allocated memory: 287.605 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(int, int, i_state_s, from_i_to_e_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, int, ap_uint<9>, e_state_s, from_e_to_m_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:133:5)
INFO: [HLS 214-131] Inlining function 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:122:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:37:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 33.71 seconds. CPU system time: 3.46 seconds. Elapsed time: 36.74 seconds; current allocated memory: 287.605 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(int, int, i_state_s, from_i_to_e_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, int, ap_uint<9>, e_state_s, from_e_to_m_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:120:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:38:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:36:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_m_s, m_state_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'stage_job(from_m_to_w_s, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:25:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:121:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:117:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.69 seconds. CPU system time: 0.22 seconds. Elapsed time: 4.9 seconds; current allocated memory: 292.270 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.270 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.15 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.18 seconds; current allocated memory: 310.184 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.2 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.2 seconds; current allocated memory: 327.902 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:17) to (decode.cpp:141:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:73:17) to (issue.cpp:87:7) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:37:7) to (mem_access.cpp:70:7) in function 'multicycle_pipeline_ip'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:30:11) to (mem_access.cpp:37:7) in function 'multicycle_pipeline_ip'... converting 13 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.75 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.77 seconds; current allocated memory: 373.879 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.62 seconds. CPU system time: 0 seconds. Elapsed time: 0.61 seconds; current allocated memory: 404.316 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.3 seconds; current allocated memory: 408.316 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 408.316 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_108_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_108_1'.
WARNING: [HLS 200-892] User specified latency constraint cannot be honored in region 'xcl_latency..0' (multicycle_pipeline_ip.cpp:142). Please consider relaxing the latency upper bound of 1.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4, loop 'VITIS_LOOP_108_1'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 35.09 seconds. CPU system time: 3.31 seconds. Elapsed time: 37.88 seconds; current allocated memory: 287.605 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(unsigned int, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s, unsigned int*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:56:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:52:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:94:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:95:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(decoded_instruction_s, d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:150:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:149:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(int, int, i_state_s, from_i_to_e_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:97:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s, int*, int*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:88:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:60:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, int, ap_uint<9>, e_state_s, from_e_to_m_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:140:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_state_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:120:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:38:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<3>, m_state_s*, int*)' (mem_access.cpp:36:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:79:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, m_state_s*, int*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:72:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_m_s, m_state_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:67:5)
INFO: [HLS 214-131] Inlining function 'stage_job(from_m_to_w_s, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:25:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:138:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:136:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:121:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:117:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.75 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.98 seconds; current allocated memory: 292.270 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.270 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.16 seconds; current allocated memory: 310.184 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 327.605 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:17) to (decode.cpp:141:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:90:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:73:17) to (issue.cpp:87:7) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:37:7) to (mem_access.cpp:70:7) in function 'multicycle_pipeline_ip'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.69 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.71 seconds; current allocated memory: 373.590 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.58 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.58 seconds; current allocated memory: 404.648 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.32 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 408.633 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.05 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 408.633 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_108_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_108_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_108_1'
WARNING: [HLS 200-871] Estimated clock period (9.5295ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_108_1' consists of the following:	multiplexor before 'phi' operation ('e_from_i.is_valid.V') with incoming values : ('i_to_e.is_valid.V', issue.cpp:84) [347]  (1.59 ns)
	'phi' operation ('e_from_i.is_valid.V') with incoming values : ('i_to_e.is_valid.V', issue.cpp:84) [347]  (0 ns)
	'select' operation ('m_state.address.V', mem_access.cpp:66) [1567]  (0.7 ns)
	'shl' operation ('shl_ln80_2', mem.cpp:80) [1603]  (3.99 ns)
	'store' operation ('data_ram_addr_2_write_ln80', mem.cpp:80) of constant <constant:_ssdm_op_Write.bram.p0i32> on array 'data_ram' [1606]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 37.14 seconds. CPU system time: 4.08 seconds. Elapsed time: 40.74 seconds; current allocated memory: 287.621 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'set_output_to_d(f_state_s, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:54:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:50:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' (fetch.cpp:48:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s*)' (decode.cpp:91:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s*)' (decode.cpp:92:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:140:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(d_state_s, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:127:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(i_state_s, from_i_to_e_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:92:5)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s*, int*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:83:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, int, ap_uint<9>, e_state_s, from_e_to_m_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:143:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(e_state_s, from_e_to_f_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:142:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_state_s*, ap_uint<1>, ap_uint<9>)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:133:5)
INFO: [HLS 214-131] Inlining function 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:122:3)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(m_state_s*, int*)' (mem_access.cpp:37:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:76:5)
INFO: [HLS 214-131] Inlining function 'stage_job(m_state_s*, int*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:69:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_m_s, m_state_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:65:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s, int*)' into 'write_back(from_m_to_w_s, w_state_s*, int*, ap_uint<1>*)' (wb.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:141:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:140:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, w_state_s*, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:139:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:137:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, ap_uint<1>, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, ap_uint<1>, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, ap_uint<1>*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:118:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-178] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.02 seconds. CPU system time: 0.29 seconds. Elapsed time: 5.32 seconds; current allocated memory: 292.309 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.309 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 310.285 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 327.516 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:82:17) to (decode.cpp:130:7) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:12:17) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:73:17) to (issue.cpp:82:7) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (compute.cpp:37:7) to (mem_access.cpp:68:7) in function 'multicycle_pipeline_ip'... converting 16 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...9 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.69 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.7 seconds; current allocated memory: 373.438 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.55 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.56 seconds; current allocated memory: 404.582 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.3 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.32 seconds; current allocated memory: 408.539 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 408.539 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_109_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_109_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_109_1'
WARNING: [HLS 200-871] Estimated clock period (9.5295ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_109_1' consists of the following:	multiplexor before 'phi' operation ('e_from_i.is_valid.V') with incoming values : ('i_to_e.is_valid.V', issue.cpp:79) [349]  (1.59 ns)
	'phi' operation ('e_from_i.is_valid.V') with incoming values : ('i_to_e.is_valid.V', issue.cpp:79) [349]  (0 ns)
	'select' operation ('m_state.address.V', mem_access.cpp:64) [1573]  (0.7 ns)
	'shl' operation ('shl_ln80_2', mem.cpp:80) [1606]  (3.99 ns)
	'store' operation ('data_ram_addr_2_write_ln80', mem.cpp:80) of constant <constant:_ssdm_op_Write.bram.p0i32> on array 'data_ram' [1609]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 37.18 seconds. CPU system time: 3.67 seconds. Elapsed time: 40.39 seconds; current allocated memory: 287.637 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(f_state_s*, unsigned int*, decoded_control_s*)' (fetch.cpp:45:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(f_state_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:93:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(f_state_s, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:92:7)
INFO: [HLS 214-131] Inlining function 'stage_job(f_state_s*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:84:7)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:83:9)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:9)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_f_s, f_state_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:79:9)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s*)' (decode.cpp:91:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(d_state_s*)' (decode.cpp:92:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(d_state_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:133:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(d_state_s, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:132:7)
INFO: [HLS 214-131] Inlining function 'stage_job(d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:124:7)
INFO: [HLS 214-131] Inlining function 'get_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:123:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(i_state_s, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:86:7)
INFO: [HLS 214-131] Inlining function 'stage_job(i_state_s*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:79:7)
INFO: [HLS 214-131] Inlining function 'get_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:55:7)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:30:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:42:16)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:38:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:34:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(int, int, ap_uint<9>, e_state_s, from_e_to_m_s*)' into 'execute(from_i_to_e_s, e_state_s*, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(e_state_s, from_e_to_f_s*)' into 'execute(from_i_to_e_s, e_state_s*, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:128:5)
INFO: [HLS 214-131] Inlining function 'stage_job(e_state_s*, ap_uint<1>, ap_uint<9>)' into 'execute(from_i_to_e_s, e_state_s*, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'compute(e_state_s*, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, e_state_s*, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:118:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, e_state_s*, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(m_state_s*, int*)' (mem_access.cpp:37:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(m_state_s*, int*)' (mem_access.cpp:35:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(m_state_s, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:70:5)
INFO: [HLS 214-131] Inlining function 'stage_job(m_state_s*, int*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:63:5)
INFO: [HLS 214-131] Inlining function 'get_input_from_e(from_e_to_m_s, m_state_s*)' into 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*)' (mem_access.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'stage_job(w_state_s, int*)' into 'write_back(from_m_to_w_s, w_state_s*, int*, ap_uint<1>*)' (wb.cpp:41:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, w_state_s*, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, m_state_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, e_state_s*, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, d_state_s*, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, f_state_s*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_f_s, from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_f_to_f_s*, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-178] Inlining function 'get_input_from_m(from_m_to_w_s, w_state_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 5.7 seconds. CPU system time: 0.32 seconds. Elapsed time: 6.04 seconds; current allocated memory: 292.332 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.332 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.2 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.22 seconds; current allocated memory: 310.371 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.28 seconds. CPU system time: 0 seconds. Elapsed time: 0.28 seconds; current allocated memory: 328.004 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:75:56) to (decode.cpp:122:9) in function 'multicycle_pipeline_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock to (issue.cpp:78:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:79:13) to (execute.cpp:81:5) in function 'multicycle_pipeline_ip'... converting 18 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:71:13) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.97 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.99 seconds; current allocated memory: 374.242 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.79 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.8 seconds; current allocated memory: 412.527 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.44 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.45 seconds; current allocated memory: 417.105 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.05 seconds; current allocated memory: 417.105 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_103_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_103_1'
WARNING: [HLS 200-871] Estimated clock period (9.6713ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' consists of the following:	'shl' operation ('result', compute.cpp:53) [2121]  (0 ns)
	'select' operation ('result', compute.cpp:9) [2160]  (4.42 ns)
	'select' operation ('result', compute.cpp:9) [2161]  (0.978 ns)
	'select' operation ('select_ln86', execute.cpp:86) [2200]  (0.978 ns)
	multiplexor before 'phi' operation ('m_from_e.value') with incoming values : ('e_to_m.value', mem.cpp:74) ('select_ln86', execute.cpp:86) [2212]  (1.59 ns)
	'phi' operation ('m_from_e.value') with incoming values : ('e_to_m.value', mem.cpp:74) ('select_ln86', execute.cpp:86) [2212]  (0 ns)
	multiplexor before 'phi' operation ('e_to_m.value') with incoming values : ('e_to_m.value', mem.cpp:74) ('result', compute.cpp:82) ('select_ln86', execute.cpp:86) ('zext_ln82', execute.cpp:82) [2229]  (1.71 ns)
	'phi' operation ('e_to_m.value') with incoming values : ('e_to_m.value', mem.cpp:74) ('result', compute.cpp:82) ('select_ln86', execute.cpp:86) ('zext_ln82', execute.cpp:82) [2229]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 34.68 seconds. CPU system time: 3.47 seconds. Elapsed time: 37.69 seconds; current allocated memory: 287.574 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:77:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:76:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:68:7)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:89:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:133:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:132:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:125:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:27:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_f_s, from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_f_to_f_s*, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:64:16)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.65 seconds. CPU system time: 0.26 seconds. Elapsed time: 4.9 seconds; current allocated memory: 292.250 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.250 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 310.031 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 327.289 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:59:56) to (decode.cpp:124:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:31) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute.cpp:12:25) to (execute.cpp:120:23) in function 'multicycle_pipeline_ip'... converting 22 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:84:17) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.64 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.66 seconds; current allocated memory: 372.719 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.52 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.53 seconds; current allocated memory: 404.352 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.27 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.29 seconds; current allocated memory: 408.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 408.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_103_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_103_1'
WARNING: [HLS 200-871] Estimated clock period (7.964ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' consists of the following:	'load' operation ('i_to_e.d_i.rs2.V') on local variable 'shift.V' [357]  (0 ns)
	'select' operation ('select_ln39', compute.cpp:39) [1436]  (1.22 ns)
	'ashr' operation ('result', compute.cpp:62) [1444]  (0 ns)
	'select' operation ('result', compute.cpp:61) [1446]  (4.42 ns)
	'select' operation ('result', compute.cpp:9) [1473]  (0 ns)
	'select' operation ('result', compute.cpp:9) [1474]  (0.993 ns)
	'select' operation ('result', compute.cpp:9) [1475]  (0 ns)
	'select' operation ('result', compute.cpp:9) [1476]  (0.978 ns)
	blocking operation 0.358 ns on control path)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.194 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 34.66 seconds. CPU system time: 3.56 seconds. Elapsed time: 37.79 seconds; current allocated memory: 287.715 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (fetch.cpp:55:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:76:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:75:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:73:24)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' (fetch.cpp:105:3)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' (fetch.cpp:104:3)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' (fetch.cpp:103:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, from_f_to_d_s*, decoded_instruction_s, ap_uint<9>)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:162:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:161:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:153:7)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*) (.15)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*) (.15)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:89:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:133:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:132:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:125:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:27:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_f_s, from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_f_to_f_s*, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:149:16)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.86 seconds. CPU system time: 0.31 seconds. Elapsed time: 5.17 seconds; current allocated memory: 292.477 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.477 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.15 seconds; current allocated memory: 310.395 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 327.770 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:144:56) to (decode.cpp:124:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:31) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute.cpp:12:25) to (execute.cpp:120:23) in function 'multicycle_pipeline_ip'... converting 22 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:84:17) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.63 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.64 seconds; current allocated memory: 373.805 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.5 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.52 seconds; current allocated memory: 404.652 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 1.194 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 34.15 seconds. CPU system time: 3.3 seconds. Elapsed time: 36.99 seconds; current allocated memory: 287.715 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (fetch.cpp:55:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:76:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:75:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (fetch.cpp:73:24)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' (fetch.cpp:105:3)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' (fetch.cpp:104:3)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' (fetch.cpp:103:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, from_f_to_d_s*, decoded_instruction_s, ap_uint<9>)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:162:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:161:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*, decoded_instruction_s*, ap_uint<9>*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:153:7)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*) (.15)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*) (.15)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*) (.16)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:89:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:133:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:132:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:125:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:27:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_f_s, from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_f_to_f_s*, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*) (.1)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.94 seconds. CPU system time: 0.26 seconds. Elapsed time: 5.2 seconds; current allocated memory: 293.219 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 293.219 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 310.777 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.18 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.19 seconds; current allocated memory: 332.332 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:31) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:83:18) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute.cpp:12:25) to (execute.cpp:120:23) in function 'multicycle_pipeline_ip'... converting 22 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:140:18) to (fetch.cpp:70:3) in function 'fetch'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:141:25) to (fetch.cpp:165:34) in function 'fetch'... converting 3 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...6 expression(s) balanced.
INFO: [XFORM 203-11] Balancing expressions in function 'fetch' (fetch.cpp:5:44)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.69 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.71 seconds; current allocated memory: 379.062 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.56 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.57 seconds; current allocated memory: 421.613 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.27 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.29 seconds; current allocated memory: 426.133 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 426.133 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining function 'fetch'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, function 'fetch'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.12 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 429.523 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.1 seconds. CPU system time: 0 seconds. Elapsed time: 0.1 seconds; current allocated memory: 429.523 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_103_1'.
WARNING: [HLS 200-892] User specified latency constraint cannot be honored in region 'xcl_latency..0' (multicycle_pipeline_ip.cpp:134). Please consider relaxing the latency upper bound of 1.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 4, loop 'VITIS_LOOP_103_1'
WARNING: [HLS 200-871] Estimated clock period (12.62ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' consists of the following:	'call' operation ('fetch_ret', multicycle_pipeline_ip.cpp:117) to 'fetch' [439]  (6.81 ns)
	'phi' operation ('f_to_d.is_valid.V') with incoming values : ('f_to_d.is_valid.V', multicycle_pipeline_ip.cpp:117) [313]  (0 ns)
	'call' operation ('fetch_ret', multicycle_pipeline_ip.cpp:117) to 'fetch' [439]  (5.81 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 9.46 seconds. CPU system time: 0.13 seconds. Elapsed time: 9.58 seconds; current allocated memory: 841.297 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.59 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.6 seconds; current allocated memory: 841.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.75 seconds. CPU system time: 0 seconds. Elapsed time: 0.75 seconds; current allocated memory: 841.297 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.2 seconds; current allocated memory: 841.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.51 seconds. CPU system time: 0 seconds. Elapsed time: 0.51 seconds; current allocated memory: 841.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'fetch' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-1030] Apply Unified Pipeline Control on module 'fetch' pipeline 'fetch' pipeline type 'function pipeline'
INFO: [RTGEN 206-100] Finished creating RTL model for 'fetch'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.15 seconds; current allocated memory: 841.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.19 seconds. CPU system time: 0.01 seconds. Elapsed time: 1.2 seconds; current allocated memory: 841.297 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_ram', 'data_ram' and 'ap_local_deadlock' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 1.83 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.85 seconds; current allocated memory: 841.297 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 1.12 seconds. CPU system time: 0 seconds. Elapsed time: 1.13 seconds; current allocated memory: 841.297 MB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0.41 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.43 seconds; current allocated memory: 841.297 MB.
INFO: [VHDL 208-304] Generating VHDL RTL for multicycle_pipeline_ip.
INFO: [VLOG 209-307] Generating Verilog RTL for multicycle_pipeline_ip.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.194 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 35.18 seconds. CPU system time: 3.42 seconds. Elapsed time: 38.09 seconds; current allocated memory: 287.688 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:77:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:76:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:68:7)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:89:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:133:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:132:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:125:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_state_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:27:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:132:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:131:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:130:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:129:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_state_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:120:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:119:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:117:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_f_s, from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_f_to_f_s*, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:64:16)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.77 seconds. CPU system time: 0.22 seconds. Elapsed time: 4.99 seconds; current allocated memory: 292.312 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 292.312 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 310.098 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 327.496 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:59:56) to (decode.cpp:124:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:31) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute.cpp:12:25) to (execute.cpp:120:23) in function 'multicycle_pipeline_ip'... converting 22 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:84:17) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.64 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.65 seconds; current allocated memory: 373.773 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.52 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.53 seconds; current allocated memory: 404.422 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0 seconds. Elapsed time: 0.3 seconds; current allocated memory: 408.523 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 408.523 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_103_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_103_1'
WARNING: [HLS 200-871] Estimated clock period (7.964ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_103_1' consists of the following:	'load' operation ('i_to_e.d_i.rs2.V') on local variable 'shift.V' [357]  (0 ns)
	'select' operation ('select_ln39', compute.cpp:39) [1436]  (1.22 ns)
	'ashr' operation ('result', compute.cpp:62) [1444]  (0 ns)
	'select' operation ('result', compute.cpp:61) [1446]  (4.42 ns)
	'select' operation ('result', compute.cpp:9) [1473]  (0 ns)
	'select' operation ('result', compute.cpp:9) [1474]  (0.993 ns)
	'select' operation ('result', compute.cpp:9) [1475]  (0 ns)
	'select' operation ('result', compute.cpp:9) [1476]  (0.978 ns)
	blocking operation 0.358 ns on control path)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 34.82 seconds. CPU system time: 3.51 seconds. Elapsed time: 37.89 seconds; current allocated memory: 287.578 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:77:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:76:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:68:7)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, decoded_instruction_s*)' (decode.cpp:56:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:78:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:77:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:76:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:89:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:133:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:132:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:125:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:27:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_f_s, from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_f_to_f_s*, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:107:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:64:16)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.77 seconds. CPU system time: 0.25 seconds. Elapsed time: 5.02 seconds; current allocated memory: 292.250 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.250 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.15 seconds; current allocated memory: 309.980 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 327.906 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:59:56) to (decode.cpp:124:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute.cpp:12:25) to (execute.cpp:120:23) in function 'multicycle_pipeline_ip'... converting 22 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:83:18) to (decode.cpp:71:3) in function 'multicycle_pipeline_ip'... converting 32 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.63 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.64 seconds; current allocated memory: 373.496 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.51 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.52 seconds; current allocated memory: 404.336 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.27 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.28 seconds; current allocated memory: 408.332 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 408.332 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_98_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_98_1'
WARNING: [HLS 200-871] Estimated clock period (8.337ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' consists of the following:	'alloca' operation ('e_from_i.rv2') [127]  (0 ns)
	'load' operation ('i_to_e.rv2', compute.cpp:19) on local variable 'e_from_i.rv2' [335]  (0 ns)
	'select' operation ('select_ln39', compute.cpp:39) [1429]  (1.22 ns)
	'ashr' operation ('result', compute.cpp:62) [1437]  (0 ns)
	'select' operation ('result', compute.cpp:61) [1439]  (4.42 ns)
	'select' operation ('result', compute.cpp:9) [1466]  (0 ns)
	'select' operation ('result', compute.cpp:9) [1467]  (0.993 ns)
	'select' operation ('result', compute.cpp:9) [1468]  (0 ns)
	'select' operation ('result', compute.cpp:9) [1469]  (0.978 ns)
	blocking operation 0.731 ns on control path)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 34.99 seconds. CPU system time: 2.97 seconds. Elapsed time: 37.81 seconds; current allocated memory: 287.570 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:126:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:123:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'new_cycle(from_f_to_f_s, from_f_to_d_s, from_d_to_f_s, from_d_to_i_s, from_i_to_e_s, from_e_to_f_s, from_e_to_m_s, from_m_to_w_s, from_f_to_f_s*, from_d_to_f_s*, from_e_to_f_s*, from_f_to_d_s*, from_d_to_i_s*, from_i_to_e_s*, from_e_to_m_s*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:107:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.61 seconds. CPU system time: 0.21 seconds. Elapsed time: 4.96 seconds; current allocated memory: 292.227 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 292.227 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 310.211 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 327.613 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:63:56) to (decode.cpp:125:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (execute.cpp:12:25) to (execute.cpp:120:23) in function 'multicycle_pipeline_ip'... converting 21 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.6 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.61 seconds; current allocated memory: 373.297 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.47 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.48 seconds; current allocated memory: 403.910 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.26 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.29 seconds; current allocated memory: 407.871 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 407.871 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_98_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_98_1'
WARNING: [HLS 200-871] Estimated clock period (9.552ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' consists of the following:	multiplexor before 'phi' operation ('i_safe.is_full.V') [327]  (1.59 ns)
	'phi' operation ('i_safe.is_full.V') [327]  (0 ns)
	'select' operation ('i_safe.d_i.rd.V', issue.cpp:61) [598]  (1.22 ns)
	'mux' operation ('tmp_2') [633]  (3.21 ns)
	'and' operation ('is_locked_d.V', issue.cpp:61) [635]  (0 ns)
	'or' operation ('i_wait.V', issue.cpp:87) [637]  (0.978 ns)
	multiplexor before 'phi' operation ('i_wait.V') [1370]  (1.59 ns)
	'phi' operation ('i_wait.V') [1370]  (0 ns)
	'xor' operation ('xor_ln946_1') [1371]  (0 ns)
	'and' operation ('i_to_e.is_valid.V', issue.cpp:106) [1372]  (0.978 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 31.17 seconds. CPU system time: 2.58 seconds. Elapsed time: 33.31 seconds; current allocated memory: 287.312 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:115:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.47 seconds. CPU system time: 0.2 seconds. Elapsed time: 4.67 seconds; current allocated memory: 292.031 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 292.031 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.12 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 309.789 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 327.469 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:80:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:71:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.6 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.62 seconds; current allocated memory: 373.254 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.51 seconds. CPU system time: 0 seconds. Elapsed time: 0.51 seconds; current allocated memory: 403.562 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.27 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.27 seconds; current allocated memory: 407.668 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 407.668 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_98_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_98_1'
WARNING: [HLS 200-871] Estimated clock period (11.634ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln25', compute.cpp:25) [691]  (2.47 ns)
	'xor' operation ('xor_ln25', compute.cpp:25) [692]  (0 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [774]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [776]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [806]  (0.968 ns)
	'select' operation ('pc', fetch.cpp:68) [1747]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1748]  (0.968 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1750]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1751]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 33.22 seconds. CPU system time: 2.8 seconds. Elapsed time: 35.62 seconds; current allocated memory: 287.285 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:115:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.73 seconds. CPU system time: 0.23 seconds. Elapsed time: 4.95 seconds; current allocated memory: 291.988 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 291.988 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 309.656 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 327.141 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:80:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:71:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.64 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.65 seconds; current allocated memory: 373.426 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.51 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.53 seconds; current allocated memory: 403.551 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.27 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.28 seconds; current allocated memory: 407.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 407.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_98_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_98_1'
WARNING: [HLS 200-871] Estimated clock period (11.634ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln25', compute.cpp:25) [691]  (2.47 ns)
	'xor' operation ('xor_ln25', compute.cpp:25) [692]  (0 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [774]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [776]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [806]  (0.968 ns)
	'select' operation ('pc', fetch.cpp:68) [1747]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1748]  (0.968 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1750]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1751]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 32.96 seconds. CPU system time: 3 seconds. Elapsed time: 35.55 seconds; current allocated memory: 287.312 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:125:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:124:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:122:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:115:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:51:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:61:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.79 seconds. CPU system time: 0.2 seconds. Elapsed time: 5 seconds; current allocated memory: 292.031 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.031 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 309.785 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 327.473 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_24_1' (multicycle_pipeline_ip.cpp:23) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:80:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:71:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:47)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.65 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.66 seconds; current allocated memory: 373.246 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.53 seconds. CPU system time: 0 seconds. Elapsed time: 0.54 seconds; current allocated memory: 403.551 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_24_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_24_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_24_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.28 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.29 seconds; current allocated memory: 407.660 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 407.660 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_98_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_98_1'
WARNING: [HLS 200-871] Estimated clock period (11.634ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_98_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln22', compute.cpp:22) [715]  (2.47 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [774]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [776]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [806]  (0.968 ns)
	'select' operation ('pc', fetch.cpp:68) [1747]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1748]  (0.968 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1750]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1751]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.194 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 31.23 seconds. CPU system time: 2.86 seconds. Elapsed time: 33.68 seconds; current allocated memory: 287.336 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:102:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:98:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.62 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.87 seconds; current allocated memory: 292.066 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.066 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.12 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 309.742 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 327.223 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:66:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.62 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.62 seconds; current allocated memory: 373.008 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.49 seconds. CPU system time: 0 seconds. Elapsed time: 0.5 seconds; current allocated memory: 403.664 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.26 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.27 seconds; current allocated memory: 407.750 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 407.750 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_89_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_89_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_89_1'
WARNING: [HLS 200-871] Estimated clock period (11.634ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_89_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln25', compute.cpp:25) [691]  (2.47 ns)
	'xor' operation ('xor_ln25', compute.cpp:25) [692]  (0 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [774]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [776]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [806]  (0.968 ns)
	'select' operation ('pc', fetch.cpp:68) [1747]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1748]  (0.968 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1750]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1751]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 31.43 seconds. CPU system time: 2.86 seconds. Elapsed time: 33.87 seconds; current allocated memory: 287.332 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:114:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:102:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:100:5)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.67 seconds. CPU system time: 0.23 seconds. Elapsed time: 4.91 seconds; current allocated memory: 292.051 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0.01 seconds. Elapsed time: 0 seconds; current allocated memory: 292.051 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.14 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 309.914 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 327.348 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:66:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.62 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.63 seconds; current allocated memory: 373.520 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.49 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.51 seconds; current allocated memory: 403.688 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.26 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.27 seconds; current allocated memory: 407.664 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 407.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_90_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_90_1'
WARNING: [HLS 200-871] Estimated clock period (11.634ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [656]  (0 ns)
	'icmp' operation ('icmp_ln25', compute.cpp:25) [694]  (2.47 ns)
	'xor' operation ('xor_ln25', compute.cpp:25) [695]  (0 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [734]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [735]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [740]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [741]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [742]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [777]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [779]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [809]  (0.968 ns)
	'select' operation ('pc', fetch.cpp:68) [1750]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1751]  (0.968 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1753]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1754]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 30.44 seconds. CPU system time: 2.84 seconds. Elapsed time: 32.86 seconds; current allocated memory: 287.289 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:115:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:105:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:102:5)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.39 seconds. CPU system time: 0.25 seconds. Elapsed time: 4.63 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 309.832 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.15 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 327.484 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:66:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.59 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.62 seconds; current allocated memory: 373.402 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.49 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.5 seconds; current allocated memory: 403.602 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.26 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.28 seconds; current allocated memory: 407.566 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 407.566 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_90_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_90_1'
WARNING: [HLS 200-871] Estimated clock period (8.47ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' consists of the following:	'shl' operation ('result', compute.cpp:53) [710]  (0 ns)
	'select' operation ('result', compute.cpp:9) [749]  (4.42 ns)
	'select' operation ('result', compute.cpp:9) [750]  (0.978 ns)
	'select' operation ('select_ln67', execute.cpp:67) [785]  (0.698 ns)
	'select' operation ('select_ln65', execute.cpp:65) [786]  (0.978 ns)
	'select' operation ('e_to_m.value', execute.cpp:123) [787]  (0.698 ns)
	'select' operation ('e_to_m.value', execute.cpp:120) [794]  (0.698 ns)
	'store' operation ('e_to_m_value_4_write_ln118', multicycle_pipeline_ip.cpp:118) of variable 'e_to_m.value', execute.cpp:120 on local variable 'rv2' [1788]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 30.41 seconds. CPU system time: 2.78 seconds. Elapsed time: 32.75 seconds; current allocated memory: 287.289 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:115:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:105:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:102:5)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.43 seconds. CPU system time: 0.2 seconds. Elapsed time: 4.63 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.13 seconds; current allocated memory: 309.711 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.17 seconds; current allocated memory: 327.156 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:66:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.6 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.61 seconds; current allocated memory: 373.582 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.49 seconds. CPU system time: 0 seconds. Elapsed time: 0.49 seconds; current allocated memory: 403.621 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.26 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.27 seconds; current allocated memory: 407.574 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 407.574 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_90_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_90_1'
WARNING: [HLS 200-871] Estimated clock period (8.47ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' consists of the following:	'shl' operation ('result', compute.cpp:53) [710]  (0 ns)
	'select' operation ('result', compute.cpp:9) [749]  (4.42 ns)
	'select' operation ('result', compute.cpp:9) [750]  (0.978 ns)
	'select' operation ('select_ln67', execute.cpp:67) [785]  (0.698 ns)
	'select' operation ('select_ln65', execute.cpp:65) [786]  (0.978 ns)
	'select' operation ('e_to_m.value', execute.cpp:123) [787]  (0.698 ns)
	'select' operation ('e_to_m.value', execute.cpp:120) [794]  (0.698 ns)
	'store' operation ('e_to_m_value_4_write_ln118', multicycle_pipeline_ip.cpp:118) of variable 'e_to_m.value', execute.cpp:120 on local variable 'rv2' [1788]  (0 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 30.3 seconds. CPU system time: 2.95 seconds. Elapsed time: 32.84 seconds; current allocated memory: 287.289 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:116:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:115:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:106:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:105:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:104:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:102:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.49 seconds. CPU system time: 0.18 seconds. Elapsed time: 4.66 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.13 seconds; current allocated memory: 309.801 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 327.523 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:66:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.6 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.61 seconds; current allocated memory: 373.180 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.49 seconds. CPU system time: 0 seconds. Elapsed time: 0.5 seconds; current allocated memory: 403.547 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.25 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.27 seconds; current allocated memory: 407.539 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 407.539 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_90_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_90_1'
WARNING: [HLS 200-871] Estimated clock period (11.634ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln22', compute.cpp:22) [715]  (2.47 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [774]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [776]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [806]  (0.968 ns)
	'select' operation ('pc', fetch.cpp:68) [1747]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1748]  (0.968 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1750]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1751]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 31.41 seconds. CPU system time: 2.83 seconds. Elapsed time: 33.96 seconds; current allocated memory: 287.289 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<13>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<13>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<13>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<9>, decoded_instruction_s, int)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<9>, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<9>, int, ap_uint<9>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, decoded_instruction_s, ap_uint<1>, ap_uint<9>, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<9>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<9>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<9>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<9>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<9>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<9>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<9>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<9>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:102:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:99:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i9.s_struct.ap_uint<9>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.55 seconds. CPU system time: 0.22 seconds. Elapsed time: 4.78 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 291.977 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.15 seconds; current allocated memory: 309.672 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 327.117 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:66:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.62 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.63 seconds; current allocated memory: 373.645 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.5 seconds. CPU system time: 0 seconds. Elapsed time: 0.5 seconds; current allocated memory: 403.566 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.27 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.27 seconds; current allocated memory: 407.535 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 407.535 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_90_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_90_1'
WARNING: [HLS 200-871] Estimated clock period (11.634ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln22', compute.cpp:22) [715]  (2.47 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [774]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [776]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [806]  (0.968 ns)
	'select' operation ('pc', fetch.cpp:68) [1747]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1748]  (0.968 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1750]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1751]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 31.63 seconds. CPU system time: 3.47 seconds. Elapsed time: 34.7 seconds; current allocated memory: 287.309 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:113:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:112:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:103:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:102:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:99:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.43 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.68 seconds; current allocated memory: 291.641 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 291.641 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 308.887 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.15 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 325.629 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:72:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:66:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.61 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.62 seconds; current allocated memory: 370.863 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.49 seconds. CPU system time: 0 seconds. Elapsed time: 0.49 seconds; current allocated memory: 401.035 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.27 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.28 seconds; current allocated memory: 405.109 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 405.109 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_90_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_90_1'
WARNING: [HLS 200-871] Estimated clock period (11.309ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_90_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln25', compute.cpp:25) [691]  (2.47 ns)
	'xor' operation ('xor_ln25', compute.cpp:25) [692]  (0 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [776]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [778]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [808]  (0.805 ns)
	'select' operation ('pc', fetch.cpp:68) [1745]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1746]  (0.805 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1748]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1749]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 31.33 seconds. CPU system time: 3.35 seconds. Elapsed time: 34.24 seconds; current allocated memory: 287.309 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:98:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:97:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.59 seconds. CPU system time: 0.24 seconds. Elapsed time: 4.84 seconds; current allocated memory: 291.688 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 291.688 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.14 seconds; current allocated memory: 308.934 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.17 seconds; current allocated memory: 326.109 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:70:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:64:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.63 seconds. CPU system time: 0 seconds. Elapsed time: 0.63 seconds; current allocated memory: 370.586 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.48 seconds. CPU system time: 0 seconds. Elapsed time: 0.49 seconds; current allocated memory: 401.082 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.25 seconds. CPU system time: 0.04 seconds. Elapsed time: 0.28 seconds; current allocated memory: 405.059 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 405.059 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_88_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_88_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_88_1'
WARNING: [HLS 200-871] Estimated clock period (11.309ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_88_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln22', compute.cpp:22) [715]  (2.47 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [776]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [778]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [808]  (0.805 ns)
	'select' operation ('pc', fetch.cpp:68) [1745]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1746]  (0.805 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1748]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1749]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 37.71 seconds. CPU system time: 3.35 seconds. Elapsed time: 40.67 seconds; current allocated memory: 287.309 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:98:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:97:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.48 seconds. CPU system time: 0.35 seconds. Elapsed time: 8.01 seconds; current allocated memory: 292.070 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 292.070 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.24 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.3 seconds; current allocated memory: 309.348 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.31 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.34 seconds; current allocated memory: 326.453 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:70:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:64:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 1.16 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.19 seconds; current allocated memory: 371.570 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.94 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.94 seconds; current allocated memory: 401.582 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.39 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.4 seconds; current allocated memory: 405.664 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 405.664 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_88_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_88_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_88_1'
WARNING: [HLS 200-871] Estimated clock period (11.309ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_88_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln22', compute.cpp:22) [715]  (2.47 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [776]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [778]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [808]  (0.805 ns)
	'select' operation ('pc', fetch.cpp:68) [1749]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1750]  (0.805 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1752]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1753]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.195 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 30.17 seconds. CPU system time: 2.55 seconds. Elapsed time: 32.25 seconds; current allocated memory: 287.270 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-284] Auto array partition mode is set into default.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:26:5)
INFO: [HLS 214-131] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:21:5)
INFO: [HLS 214-131] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:19:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:64:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:55:5)
INFO: [HLS 214-131] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:20:11)
INFO: [HLS 214-131] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:23:14)
INFO: [HLS 214-131] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:22:14)
INFO: [HLS 214-131] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:21:14)
INFO: [HLS 214-131] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:109:5)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:96:5)
INFO: [HLS 214-131] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:96:7)
INFO: [HLS 214-131] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:89:7)
INFO: [HLS 214-131] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:62:5)
INFO: [HLS 214-131] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:67:23)
INFO: [HLS 214-131] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:66:23)
INFO: [HLS 214-131] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:65:23)
INFO: [HLS 214-131] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:64:23)
INFO: [HLS 214-131] Inlining function 'type(ap_uint<5>)' into 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' (decode.cpp:53:15)
INFO: [HLS 214-131] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:75:24)
INFO: [HLS 214-131] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:74:24)
INFO: [HLS 214-131] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:73:24)
INFO: [HLS 214-131] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:72:24)
INFO: [HLS 214-131] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:71:24)
INFO: [HLS 214-131] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:88:2)
INFO: [HLS 214-131] Inlining function 'decode_immediate(unsigned int, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:90:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:136:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:135:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:126:7)
INFO: [HLS 214-131] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:28:3)
INFO: [HLS 214-131] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:81:7)
INFO: [HLS 214-131] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:80:7)
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:72:7)
INFO: [HLS 214-131] Inlining function 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:111:5)
INFO: [HLS 214-131] Inlining function 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:110:5)
INFO: [HLS 214-131] Inlining function 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:108:5)
INFO: [HLS 214-131] Inlining function 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:101:5)
INFO: [HLS 214-131] Inlining function 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:100:5)
INFO: [HLS 214-131] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:99:5)
INFO: [HLS 214-131] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:98:5)
INFO: [HLS 214-131] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:97:2)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:57:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:59:8)
INFO: [HLS 214-270] Starting automatic array partition analysis...
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i1.s_struct.ap_uint<1>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (fetch.cpp:68:16)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)'
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (compute.cpp:127:7)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 4.35 seconds. CPU system time: 0.19 seconds. Elapsed time: 4.53 seconds; current allocated memory: 291.973 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 291.973 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.13 seconds. CPU system time: 0 seconds. Elapsed time: 0.14 seconds; current allocated memory: 309.316 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 326.488 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:70:17) to (issue.cpp:65:7) in function 'multicycle_pipeline_ip'... converting 24 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:6:11) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 28 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (multicycle_pipeline_ip.cpp:64:17) to (fetch.cpp:87:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...10 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.59 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.6 seconds; current allocated memory: 371.844 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.48 seconds. CPU system time: 0 seconds. Elapsed time: 0.48 seconds; current allocated memory: 401.543 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.26 seconds. CPU system time: 0 seconds. Elapsed time: 0.27 seconds; current allocated memory: 405.609 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.04 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 405.609 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_88_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_88_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_88_1'
WARNING: [HLS 200-871] Estimated clock period (11.309ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_88_1' consists of the following:	'load' operation ('i_to_e_rv2_2_load', compute.cpp:19) on local variable 'rv2' [653]  (0 ns)
	'icmp' operation ('icmp_ln25', compute.cpp:25) [691]  (2.47 ns)
	'xor' operation ('xor_ln25', compute.cpp:25) [692]  (0 ns)
	'select' operation ('select_ln9_1', compute.cpp:9) [731]  (0.993 ns)
	'select' operation ('select_ln9_2', compute.cpp:9) [732]  (0.993 ns)
	'and' operation ('and_ln9_3', compute.cpp:9) [737]  (0 ns)
	'select' operation ('select_ln9_3', compute.cpp:9) [738]  (0.993 ns)
	'select' operation ('bcond.V', compute.cpp:9) [739]  (0 ns)
	'or' operation ('or_ln33', execute.cpp:33) [776]  (0 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:33) [778]  (0.993 ns)
	'select' operation ('e_to_f.target_pc.V', execute.cpp:120) [808]  (0.805 ns)
	'select' operation ('pc', fetch.cpp:68) [1749]  (0 ns)
	'select' operation ('pc', fetch.cpp:63) [1750]  (0.805 ns)
	'getelementptr' operation ('code_ram_addr', fetch.cpp:27) [1752]  (0 ns)
	'load' operation ('instruction', fetch.cpp:27) on array 'code_ram' [1753]  (3.25 ns)

==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: source ./multicycle_pipeline_ip/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 1.144 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 31.25 seconds. CPU system time: 2.88 seconds. Elapsed time: 33.23 seconds; current allocated memory: 139.273 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:23:0)
INFO: [HLS 214-178] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:86:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:120:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:120:0)
INFO: [HLS 214-178] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:22:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*) (.1)'
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.99 seconds. CPU system time: 0.49 seconds. Elapsed time: 7.57 seconds; current allocated memory: 148.637 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 148.637 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'issue' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:109).
INFO: [XFORM 203-603] Inlining function 'decode' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:110).
INFO: [XFORM 203-603] Inlining function 'compute' into 'multicycle_pipeline_ip' (execute.cpp:96->multicycle_pipeline_ip.cpp:102).
INFO: [XFORM 203-603] Inlining function 'stage_job' into 'multicycle_pipeline_ip' (decode.cpp:126->multicycle_pipeline_ip.cpp:110).
INFO: [XFORM 203-603] Inlining function 'type' into 'multicycle_pipeline_ip' (decode.cpp:53).
INFO: [XFORM 203-603] Inlining function 'decode_immediate' into 'multicycle_pipeline_ip' (decode.cpp:90->decode.cpp:126->multicycle_pipeline_ip.cpp:110).
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 165.301 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.17 seconds; current allocated memory: 183.637 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:72:20) to (issue.cpp:61:18) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:59:7) to (multicycle_pipeline_ip.cpp:112:3) in function 'multicycle_pipeline_ip'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.58 seconds. CPU system time: 0 seconds. Elapsed time: 0.6 seconds; current allocated memory: 228.973 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.51 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.5 seconds; current allocated memory: 260.309 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.25 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.29 seconds; current allocated memory: 264.484 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 264.484 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_89_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_89_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_89_1'
WARNING: [HLS 200-871] Estimated clock period (8.47ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_89_1' consists of the following:	'select' operation ('result', compute.cpp:47) [730]  (0.698 ns)
	'select' operation ('result', compute.cpp:47) [731]  (4.42 ns)
	'select' operation ('result', compute.cpp:47) [732]  (0.978 ns)
	'select' operation ('select_ln67', execute.cpp:67) [768]  (0.698 ns)
	'select' operation ('select_ln65', execute.cpp:65) [769]  (0.978 ns)
	'select' operation ('e_to_m.value', execute.cpp:123->multicycle_pipeline_ip.cpp:102) [770]  (0 ns)
	'select' operation ('e_to_m.value') [775]  (0.698 ns)
	'store' operation ('rv2_3_write_ln112', multicycle_pipeline_ip.cpp:112) of variable 'e_to_m.value' on local variable 'rv2' [1776]  (0 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 32.64 seconds. CPU system time: 0.46 seconds. Elapsed time: 33.1 seconds; current allocated memory: 1.213 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.65 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.65 seconds; current allocated memory: 1.213 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (8.2076ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip' consists of the following:	'load' operation ('reg_file_31_loc_load') on local variable 'reg_file_31_loc' [94]  (0 ns)
	'call' operation ('_ln261') to 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_89_1' [159]  (8.21 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.69 seconds. CPU system time: 0 seconds. Elapsed time: 0.7 seconds; current allocated memory: 1.213 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: source ./multicycle_pipeline_ip/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.144 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 30.66 seconds. CPU system time: 2.65 seconds. Elapsed time: 32.21 seconds; current allocated memory: 139.273 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:23:0)
INFO: [HLS 214-178] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:86:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:120:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:120:0)
INFO: [HLS 214-178] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:22:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*) (.1)'
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.11 seconds. CPU system time: 0.48 seconds. Elapsed time: 7.58 seconds; current allocated memory: 148.637 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 148.637 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'issue' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:109).
INFO: [XFORM 203-603] Inlining function 'decode' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:110).
INFO: [XFORM 203-603] Inlining function 'compute' into 'multicycle_pipeline_ip' (execute.cpp:96->multicycle_pipeline_ip.cpp:102).
INFO: [XFORM 203-603] Inlining function 'stage_job' into 'multicycle_pipeline_ip' (decode.cpp:126->multicycle_pipeline_ip.cpp:110).
INFO: [XFORM 203-603] Inlining function 'type' into 'multicycle_pipeline_ip' (decode.cpp:53).
INFO: [XFORM 203-603] Inlining function 'decode_immediate' into 'multicycle_pipeline_ip' (decode.cpp:90->decode.cpp:126->multicycle_pipeline_ip.cpp:110).
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.17 seconds. CPU system time: 0 seconds. Elapsed time: 0.17 seconds; current allocated memory: 165.316 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.17 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.18 seconds; current allocated memory: 184.008 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:72:20) to (issue.cpp:61:18) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:59:7) to (multicycle_pipeline_ip.cpp:112:3) in function 'multicycle_pipeline_ip'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.6 seconds. CPU system time: 0 seconds. Elapsed time: 0.6 seconds; current allocated memory: 229.371 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.52 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.52 seconds; current allocated memory: 260.410 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.26 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.28 seconds; current allocated memory: 264.594 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 264.594 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_89_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_89_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_89_1'
WARNING: [HLS 200-871] Estimated clock period (11.746ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_89_1' consists of the following:	'load' operation ('d_i_rs2_V_load', compute.cpp:39) on local variable 'd_i.rs2.V' [666]  (0 ns)
	'select' operation ('shift.V', compute.cpp:39) [707]  (1.22 ns)
	'ashr' operation ('result', compute.cpp:62) [721]  (0 ns)
	'select' operation ('result', compute.cpp:61) [723]  (4.42 ns)
	'select' operation ('result', compute.cpp:47) [726]  (0 ns)
	'select' operation ('result', compute.cpp:47) [727]  (0.993 ns)
	'select' operation ('result', compute.cpp:47) [729]  (0 ns)
	'select' operation ('result', compute.cpp:47) [731]  (0.698 ns)
	'select' operation ('result', compute.cpp:47) [732]  (4.42 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 19.68 seconds. CPU system time: 0.09 seconds. Elapsed time: 19.77 seconds; current allocated memory: 358.938 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.7 seconds. CPU system time: 0 seconds. Elapsed time: 0.7 seconds; current allocated memory: 358.938 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.79 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.8 seconds; current allocated memory: 358.938 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.18 seconds. CPU system time: 0 seconds. Elapsed time: 0.18 seconds; current allocated memory: 358.938 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1'.
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: source ./multicycle_pipeline_ip/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.144 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 29.99 seconds. CPU system time: 2.62 seconds. Elapsed time: 31.63 seconds; current allocated memory: 139.289 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:23:0)
INFO: [HLS 214-178] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:88:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:54:0)
INFO: [HLS 214-178] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:59:0)
INFO: [HLS 214-178] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:58:0)
INFO: [HLS 214-178] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:86:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:120:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:120:0)
INFO: [HLS 214-178] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:22:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:52:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-178] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:50:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:60:8)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*) (.1)'
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 6.71 seconds. CPU system time: 0.44 seconds. Elapsed time: 7.14 seconds; current allocated memory: 148.758 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 148.758 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'issue' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:109).
INFO: [XFORM 203-603] Inlining function 'decode' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:110).
INFO: [XFORM 203-603] Inlining function 'compute' into 'multicycle_pipeline_ip' (execute.cpp:96->multicycle_pipeline_ip.cpp:102).
INFO: [XFORM 203-603] Inlining function 'stage_job' into 'multicycle_pipeline_ip' (decode.cpp:126->multicycle_pipeline_ip.cpp:110).
INFO: [XFORM 203-603] Inlining function 'type' into 'multicycle_pipeline_ip' (decode.cpp:53).
INFO: [XFORM 203-603] Inlining function 'decode_immediate' into 'multicycle_pipeline_ip' (decode.cpp:90->decode.cpp:126->multicycle_pipeline_ip.cpp:110).
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.16 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.16 seconds; current allocated memory: 165.465 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 183.844 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:72:20) to (issue.cpp:61:18) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:44:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:67:30) to (issue.cpp:88:9) in function 'multicycle_pipeline_ip'... converting 7 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:59:7) to (multicycle_pipeline_ip.cpp:112:3) in function 'multicycle_pipeline_ip'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:80:18) to (decode.cpp:68:3) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:46)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.57 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.59 seconds; current allocated memory: 229.199 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.47 seconds. CPU system time: 0 seconds. Elapsed time: 0.47 seconds; current allocated memory: 249.281 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.23 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.25 seconds; current allocated memory: 253.215 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.03 seconds; current allocated memory: 253.215 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 6.97 seconds. CPU system time: 0.01 seconds. Elapsed time: 6.98 seconds; current allocated memory: 294.797 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.61 seconds. CPU system time: 0 seconds. Elapsed time: 0.61 seconds; current allocated memory: 294.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.61 seconds. CPU system time: 0 seconds. Elapsed time: 0.6 seconds; current allocated memory: 294.797 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/start_pc' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/code_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/data_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multicycle_pipeline_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multicycle_pipeline_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'start_pc', 'nb_instruction', 'nb_cycle', 'code_ram', 'data_ram' to AXI-Lite port control.
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 3 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multicycle_pipeline_ip'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 0.92 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.93 seconds; current allocated memory: 294.797 MB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 2.2 seconds. CPU system time: 0.03 seconds. Elapsed time: 2.23 seconds; current allocated memory: 323.531 MB.
INFO==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: source ./multicycle_pipeline_ip/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name multicycle_pipeline_ip multicycle_pipeline_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.02 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.462 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multicycle_pipeline_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 30.38 seconds. CPU system time: 3.27 seconds. Elapsed time: 33.13 seconds; current allocated memory: 464.094 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<5>, int, int*)' into 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' (wb.cpp:22:0)
INFO: [HLS 214-178] Inlining function 'mem_load(int*, ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'mem_store(int*, ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' (mem_access.cpp:16:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int*, int*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_w(ap_uint<5>, ap_uint<1>, ap_uint<1>, int, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, int*, from_m_to_w_s*)' (mem_access.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<16>, decoded_instruction_s, int, int, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:18:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, decoded_instruction_s, ap_uint<1>, ap_uint<16>, ap_uint<16>*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:84:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_e_to_f_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:84:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_m(decoded_instruction_s, int, int, ap_uint<16>, int, ap_uint<16>, from_e_to_m_s*)' into 'execute(from_i_to_e_s, from_e_to_f_s*, from_e_to_m_s*)' (execute.cpp:84:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_d(from_d_to_i_s, i_safe_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:51:0)
INFO: [HLS 214-178] Inlining function 'stage_job(decoded_instruction_s, int*, int*, int*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:51:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_e(ap_uint<16>, decoded_instruction_s, int, int, from_i_to_e_s*)' into 'issue(from_d_to_i_s, int*, ap_uint<1>*, i_safe_s*, from_i_to_e_s*, ap_uint<1>*)' (issue.cpp:51:0)
INFO: [HLS 214-178] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:57:0)
INFO: [HLS 214-178] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:57:0)
INFO: [HLS 214-178] Inlining function 'decode_instruction(unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*)' into 'stage_job(ap_uint<16>, unsigned int, ap_uint<1>, ap_uint<1>, ap_uint<1>, decoded_instruction_s*, ap_uint<16>*)' (decode.cpp:84:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_i(ap_uint<16>, decoded_instruction_s, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>, from_d_to_f_s*, from_d_to_i_s*)' (decode.cpp:115:0)
INFO: [HLS 214-178] Inlining function 'decode_control(unsigned int, decoded_control_s*)' into 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' (fetch.cpp:21:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<16>, unsigned int*, unsigned int*, decoded_control_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<16>, from_f_to_f_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_d(ap_uint<16>, unsigned int, decoded_control_s, from_f_to_d_s*)' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*)' (fetch.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'init_reg_file(int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'running_cond_update(from_m_to_w_s, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:48:0)
INFO: [HLS 214-178] Inlining function 'write_back(from_m_to_w_s, int*, ap_uint<1>*)' into 'multicycle_pipeline_ip(unsigned int, unsigned int*, int*, unsigned int*, unsigned int*)' (multicycle_pipeline_ip.cpp:48:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:56:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. (multicycle_pipeline_ip.cpp:58:8)
INFO: [HLS 214-131] Inlining function '_llvm.fpga.pack.none.i16.s_struct.ap_uint<16>s' into 'fetch(from_f_to_f_s, from_d_to_f_s, from_e_to_f_s, ap_uint<1>, unsigned int*, from_f_to_f_s*, from_f_to_d_s*) (.1)'
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 7.16 seconds. CPU system time: 0.55 seconds. Elapsed time: 7.74 seconds; current allocated memory: 472.809 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 472.809 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'issue' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:107).
INFO: [XFORM 203-603] Inlining function 'decode' into 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:108).
INFO: [XFORM 203-603] Inlining function 'compute' into 'multicycle_pipeline_ip' (execute.cpp:91->multicycle_pipeline_ip.cpp:100).
INFO: [XFORM 203-603] Inlining function 'stage_job' into 'multicycle_pipeline_ip' (decode.cpp:120->multicycle_pipeline_ip.cpp:108).
INFO: [XFORM 203-603] Inlining function 'type' into 'multicycle_pipeline_ip' (decode.cpp:52).
INFO: [XFORM 203-603] Inlining function 'decode_immediate' into 'multicycle_pipeline_ip' (decode.cpp:87->decode.cpp:120->multicycle_pipeline_ip.cpp:108).
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 0.18 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.2 seconds; current allocated memory: 489.820 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 0.19 seconds. CPU system time: 0 seconds. Elapsed time: 0.19 seconds; current allocated memory: 507.699 MB.
INFO: [XFORM 203-510] Pipelining loop 'VITIS_LOOP_23_1' (multicycle_pipeline_ip.cpp:22) in function 'multicycle_pipeline_ip' automatically.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:69:20) to (issue.cpp:56:18) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:5:20) to (mem.cpp:43:3) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (issue.cpp:62:30) to (issue.cpp:68:9) in function 'multicycle_pipeline_ip'... converting 5 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (fetch.cpp:54:7) to (multicycle_pipeline_ip.cpp:110:3) in function 'multicycle_pipeline_ip'... converting 6 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:78:18) to (decode.cpp:66:3) in function 'multicycle_pipeline_ip'... converting 31 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multicycle_pipeline_ip' (multicycle_pipeline_ip.cpp:44)...6 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 0.57 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.6 seconds; current allocated memory: 553.043 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 0.48 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.48 seconds; current allocated memory: 584.742 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multicycle_pipeline_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_23_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = NA, Final II = 1, Depth = 1, loop 'VITIS_LOOP_23_1'
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.25 seconds. CPU system time: 0.03 seconds. Elapsed time: 0.27 seconds; current allocated memory: 588.898 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.03 seconds. CPU system time: 0 seconds. Elapsed time: 0.04 seconds; current allocated memory: 588.898 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_87_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_87_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 3, loop 'VITIS_LOOP_87_1'
WARNING: [HLS 200-871] Estimated clock period (11.746ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
WARNING: [HLS 200-1016] The critical path in module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_87_1' consists of the following:	'load' operation ('d_i_rs2_V_load', compute.cpp:37) on local variable 'd_i.rs2.V' [666]  (0 ns)
	'select' operation ('shift.V', compute.cpp:37) [707]  (1.22 ns)
	'ashr' operation ('result', compute.cpp:60) [721]  (0 ns)
	'select' operation ('result', compute.cpp:59) [723]  (4.42 ns)
	'select' operation ('result', compute.cpp:45) [726]  (0 ns)
	'select' operation ('result', compute.cpp:45) [727]  (0.993 ns)
	'select' operation ('result', compute.cpp:45) [729]  (0 ns)
	'select' operation ('result', compute.cpp:45) [731]  (0.698 ns)
	'select' operation ('result', compute.cpp:45) [732]  (4.42 ns)

INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 19.34 seconds. CPU system time: 0.08 seconds. Elapsed time: 19.42 seconds; current allocated memory: 683.777 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.63 seconds. CPU system time: 0 seconds. Elapsed time: 0.64 seconds; current allocated memory: 683.777 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multicycle_pipeline_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 0.74 seconds. CPU system time: 0.01 seconds. Elapsed time: 0.75 seconds; current allocated memory: 683.777 MB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 0.16 seconds. CPU system time: 0 seconds. Elapsed time: 0.16 seconds; current allocated memory: 683.777 MB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multicycle_pipeline_ip_Pipeline_VITIS_LOOP_23_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-100]==============================================================
Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
Tool Version Limit: 2022.04
Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
==============================================================
