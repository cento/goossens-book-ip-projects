INFO: [HLS 200-10] Running '/opt/Xilinx/Vitis_HLS/2022.1/bin/unwrapped/lnx64.o/vitis_hls'
INFO: [HLS 200-10] For user 'goossens' on host 'goossens-Precision-5530' (Linux_x86_64 version 5.15.0-41-generic) on Wed Aug 10 07:37:44 CEST 2022
INFO: [HLS 200-10] On os Ubuntu 22.04 LTS
INFO: [HLS 200-10] In directory '/home/goossens/goossens-springer-book/2022.1/book_experiments/multihart_ip'
Sourcing Tcl script '/home/goossens/goossens-springer-book/2022.1/book_experiments/multihart_ip/multihart_ip/solution1/csynth.tcl'
INFO: [HLS 200-1510] Running: source /home/goossens/goossens-springer-book/2022.1/book_experiments/multihart_ip/multihart_ip/solution1/csynth.tcl
INFO: [HLS 200-1510] Running: open_project multihart_ip 
INFO: [HLS 200-10] Opening project '/home/goossens/goossens-springer-book/2022.1/book_experiments/multihart_ip/multihart_ip'.
INFO: [HLS 200-1510] Running: set_top multihart_ip 
INFO: [HLS 200-1510] Running: add_files compute.cpp 
INFO: [HLS 200-10] Adding design file 'compute.cpp' to the project
INFO: [HLS 200-1510] Running: add_files decode.cpp 
INFO: [HLS 200-10] Adding design file 'decode.cpp' to the project
INFO: [HLS 200-1510] Running: add_files disassemble.cpp 
INFO: [HLS 200-10] Adding design file 'disassemble.cpp' to the project
INFO: [HLS 200-1510] Running: add_files emulate.cpp 
INFO: [HLS 200-10] Adding design file 'emulate.cpp' to the project
INFO: [HLS 200-1510] Running: add_files execute.cpp 
INFO: [HLS 200-10] Adding design file 'execute.cpp' to the project
INFO: [HLS 200-1510] Running: add_files fetch.cpp 
INFO: [HLS 200-10] Adding design file 'fetch.cpp' to the project
INFO: [HLS 200-1510] Running: add_files immediate.cpp 
INFO: [HLS 200-10] Adding design file 'immediate.cpp' to the project
INFO: [HLS 200-1510] Running: add_files issue.cpp 
INFO: [HLS 200-10] Adding design file 'issue.cpp' to the project
INFO: [HLS 200-1510] Running: add_files mem.cpp 
INFO: [HLS 200-10] Adding design file 'mem.cpp' to the project
INFO: [HLS 200-1510] Running: add_files mem_access.cpp 
INFO: [HLS 200-10] Adding design file 'mem_access.cpp' to the project
INFO: [HLS 200-1510] Running: add_files multihart_ip.cpp 
INFO: [HLS 200-10] Adding design file 'multihart_ip.cpp' to the project
INFO: [HLS 200-1510] Running: add_files new_cycle.cpp 
INFO: [HLS 200-10] Adding design file 'new_cycle.cpp' to the project
INFO: [HLS 200-1510] Running: add_files print.cpp 
INFO: [HLS 200-10] Adding design file 'print.cpp' to the project
INFO: [HLS 200-1510] Running: add_files type.cpp 
INFO: [HLS 200-10] Adding design file 'type.cpp' to the project
INFO: [HLS 200-1510] Running: add_files wb.cpp 
INFO: [HLS 200-10] Adding design file 'wb.cpp' to the project
INFO: [HLS 200-1510] Running: add_files -tb testbench_seq_multihart_ip.cpp 
INFO: [HLS 200-10] Adding test bench file 'testbench_seq_multihart_ip.cpp' to the project
INFO: [HLS 200-1510] Running: open_solution solution1 -flow_target vivado 
INFO: [HLS 200-10] Opening solution '/home/goossens/goossens-springer-book/2022.1/book_experiments/multihart_ip/multihart_ip/solution1'.
INFO: [SYN 201-201] Setting up clock 'default' with a period of 10ns.
INFO: [HLS 200-1611] Setting target device to 'xc7z020-clg400-1'
INFO: [HLS 200-1505] Using flow_target 'vivado'
Resolution: For help on HLS 200-1505 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-1505.html
INFO: [HLS 200-1464] Running solution command: config_export -format=ip_catalog
INFO: [HLS 200-1464] Running solution command: config_export -rtl=verilog
INFO: [HLS 200-1510] Running: set_part xc7z020-clg400-1 
INFO: [HLS 200-1510] Running: create_clock -period 10 -name default 
INFO: [HLS 200-1510] Running: config_export -format ip_catalog -rtl verilog 
INFO: [HLS 200-1510] Running: source ./multihart_ip/solution1/directives.tcl
INFO: [HLS 200-1510] Running: set_directive_top -name multihart_ip multihart_ip 
INFO: [HLS 200-1510] Running: csynth_design 
INFO: [HLS 200-111] Finished File checks and directory preparation: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0.01 seconds; current allocated memory: 1.462 GB.
INFO: [HLS 200-10] Analyzing design file 'wb.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'type.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'print.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'new_cycle.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'multihart_ip.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem_access.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'mem.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'issue.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'immediate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'fetch.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'execute.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'emulate.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'disassemble.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'decode.cpp' ... 
INFO: [HLS 200-10] Analyzing design file 'compute.cpp' ... 
INFO: [HLS 200-111] Finished Source Code Analysis and Preprocessing: CPU user time: 32.45 seconds. CPU system time: 3.77 seconds. Elapsed time: 35.92 seconds; current allocated memory: 464.844 MB.
INFO: [HLS 200-777] Using interface defaults for 'Vivado' flow target.
INFO: [HLS 214-131] Inlining function 'stage_job(ap_uint<3>, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>*, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:209:5)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (wb.cpp:53:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (mem_access.cpp:77:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (execute.cpp:114:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (issue.cpp:71:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (issue.cpp:70:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (issue.cpp:69:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (issue.cpp:68:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (decode.cpp:136:9)
INFO: [HLS 214-291] Loop 'anonymous' is marked as complete unroll implied by the pipeline pragma (fetch.cpp:54:9)
INFO: [HLS 214-291] Loop 'VITIS_LOOP_62_1' is marked as complete unroll implied by the pipeline pragma (multihart_ip.cpp:62:20)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (wb.cpp:53:9) in function 'select_hart' completely with a factor of 8 (wb.cpp:52:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (mem_access.cpp:77:9) in function 'select_hart' completely with a factor of 8 (mem_access.cpp:76:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (execute.cpp:114:9) in function 'select_hart' completely with a factor of 8 (execute.cpp:113:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (issue.cpp:71:9) in function 'select_hart' completely with a factor of 8 (issue.cpp:67:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (issue.cpp:70:9) in function 'select_hart' completely with a factor of 8 (issue.cpp:67:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (issue.cpp:69:9) in function 'select_hart' completely with a factor of 8 (issue.cpp:67:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (issue.cpp:68:9) in function 'select_hart' completely with a factor of 8 (issue.cpp:67:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (decode.cpp:136:9) in function 'select_hart' completely with a factor of 8 (decode.cpp:135:0)
INFO: [HLS 214-186] Unrolling loop 'anonymous' (fetch.cpp:54:9) in function 'select_hart' completely with a factor of 8 (fetch.cpp:53:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_62_1' (multihart_ip.cpp:62:20) in function 'running_cond_update' completely with a factor of 8 (multihart_ip.cpp:57:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_26_1' (multihart_ip.cpp:26:20) in function 'init_file' completely with a factor of 8 (multihart_ip.cpp:21:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_29_2' (multihart_ip.cpp:29:22) in function 'init_file' completely with a factor of 32 (multihart_ip.cpp:21:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_17_1' (wb.cpp:17:20) in function 'init_w_state' completely with a factor of 8 (wb.cpp:14:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_13_1' (mem_access.cpp:13:20) in function 'init_m_state' completely with a factor of 8 (mem_access.cpp:10:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_1' (execute.cpp:14:20) in function 'init_e_state' completely with a factor of 8 (execute.cpp:11:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_11_1' (issue.cpp:11:20) in function 'init_i_state' completely with a factor of 8 (issue.cpp:8:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_14_1' (decode.cpp:14:20) in function 'init_d_state' completely with a factor of 8 (decode.cpp:11:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_16_1' (fetch.cpp:16:20) in function 'init_f_state' completely with a factor of 8 (fetch.cpp:12:0)
INFO: [HLS 214-186] Unrolling loop 'VITIS_LOOP_48_1' (multihart_ip.cpp:48:20) in function 'init_exit' completely with a factor of 8 (multihart_ip.cpp:44:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_d(from_d_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>*, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:110:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_e(from_e_to_f_s, f_state_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>*, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:110:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<3>, f_state_s*, unsigned int*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>*, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:110:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_d(ap_uint<3>, f_state_s*, from_f_to_d_s*)' into 'fetch(from_d_to_f_s, from_e_to_f_s, ap_uint<1>*, unsigned int*, f_state_s*, from_f_to_d_s*, ap_uint<1>*)' (fetch.cpp:110:0)
INFO: [HLS 214-178] Inlining function 'type_00(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'type_01(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'type_10(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'type_11(ap_uint<3>)' into 'type(ap_uint<5>)' (type.cpp:55:0)
INFO: [HLS 214-178] Inlining function 'i_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:69:0)
INFO: [HLS 214-178] Inlining function 's_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:69:0)
INFO: [HLS 214-178] Inlining function 'b_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:69:0)
INFO: [HLS 214-178] Inlining function 'u_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:69:0)
INFO: [HLS 214-178] Inlining function 'j_immediate(decoded_immediate_s)' into 'decode_immediate(unsigned int, decoded_instruction_s*)' (decode.cpp:69:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_f(from_f_to_d_s, d_state_s*)' into 'decode(from_f_to_d_s, ap_uint<1>*, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:191:0)
INFO: [HLS 214-178] Inlining function 'decode_instruction(unsigned int, decoded_instruction_s*)' into 'decode(from_f_to_d_s, ap_uint<1>*, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:191:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<3>, d_state_s*, from_d_to_f_s*)' into 'decode(from_f_to_d_s, ap_uint<1>*, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:191:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_i(ap_uint<3>, d_state_s*, from_d_to_i_s*)' into 'decode(from_f_to_d_s, ap_uint<1>*, d_state_s*, from_d_to_f_s*, from_d_to_i_s*, ap_uint<1>*)' (decode.cpp:191:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_d(from_d_to_i_s, ap_uint<1> (*) [32], i_state_s*)' into 'issue(from_d_to_i_s, ap_uint<1>*, int (*) [32], ap_uint<1> (*) [32], i_state_s*, from_i_to_e_s*, ap_uint<1>*, ap_uint<1>*, ap_uint<3>*, ap_uint<5>*)' (issue.cpp:194:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<3>, i_state_s*, int (*) [32])' into 'issue(from_d_to_i_s, ap_uint<1>*, int (*) [32], ap_uint<1> (*) [32], i_state_s*, from_i_to_e_s*, ap_uint<1>*, ap_uint<1>*, ap_uint<3>*, ap_uint<5>*)' (issue.cpp:194:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_e(ap_uint<3>, i_state_s*, from_i_to_e_s*)' into 'issue(from_d_to_i_s, ap_uint<1>*, int (*) [32], ap_uint<1> (*) [32], i_state_s*, from_i_to_e_s*, ap_uint<1>*, ap_uint<1>*, ap_uint<3>*, ap_uint<5>*)' (issue.cpp:194:0)
INFO: [HLS 214-178] Inlining function 'compute_branch_result(int, int, ap_uint<3>)' into 'compute(ap_uint<3>, e_state_s*, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'compute_op_result(int, int, decoded_instruction_s)' into 'compute(ap_uint<3>, e_state_s*, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'compute_result(int, ap_uint<16>, decoded_instruction_s)' into 'compute(ap_uint<3>, e_state_s*, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'compute_next_pc(ap_uint<16>, decoded_instruction_s, int)' into 'compute(ap_uint<3>, e_state_s*, ap_uint<1>*, int*, int*, ap_uint<16>*)' (execute.cpp:40:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_i(from_i_to_e_s, e_state_s*)' into 'execute(from_i_to_e_s, ap_uint<1>*, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:172:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<3>, e_state_s*, ap_uint<1>, ap_uint<16>)' into 'execute(from_i_to_e_s, ap_uint<1>*, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:172:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_f(ap_uint<3>, e_state_s*, from_e_to_f_s*)' into 'execute(from_i_to_e_s, ap_uint<1>*, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:172:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_m(ap_uint<3>, int, int, ap_uint<16>, e_state_s*, from_e_to_m_s*)' into 'execute(from_i_to_e_s, ap_uint<1>*, e_state_s*, from_e_to_f_s*, from_e_to_m_s*, ap_uint<1>*)' (execute.cpp:172:0)
INFO: [HLS 214-178] Inlining function 'mem_load(ap_uint<3>, int (*) [8192], ap_uint<18>, ap_uint<3>)' into 'stage_job(ap_uint<3>, ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int (*) [8192], int*)' (mem_access.cpp:49:0)
INFO: [HLS 214-178] Inlining function 'mem_store(ap_uint<3>, int (*) [8192], ap_uint<18>, int, ap_uint<2>)' into 'stage_job(ap_uint<3>, ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int (*) [8192], int*)' (mem_access.cpp:49:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_e(from_e_to_m_s, m_state_s*)' into 'mem_access(from_e_to_m_s, ap_uint<1>*, int (*) [8192], m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:132:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<3>, ap_uint<1>, ap_uint<1>, ap_uint<18>, ap_uint<3>, int (*) [8192], int*)' into 'mem_access(from_e_to_m_s, ap_uint<1>*, int (*) [8192], m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:132:0)
INFO: [HLS 214-178] Inlining function 'set_output_to_w(ap_uint<3>, m_state_s*, from_m_to_w_s*)' into 'mem_access(from_e_to_m_s, ap_uint<1>*, int (*) [8192], m_state_s*, from_m_to_w_s*, ap_uint<1>*)' (mem_access.cpp:132:0)
INFO: [HLS 214-178] Inlining function 'select_hart(ap_uint<1>*, ap_uint<1>*, ap_uint<3>*)' into 'write_back(from_m_to_w_s, int (*) [32], w_state_s*, ap_uint<1>*, ap_uint<1>*, ap_uint<3>*, ap_uint<5>*, ap_uint<1>*)' (wb.cpp:110:0)
INFO: [HLS 214-178] Inlining function 'save_input_from_m(from_m_to_w_s, w_state_s*)' into 'write_back(from_m_to_w_s, int (*) [32], w_state_s*, ap_uint<1>*, ap_uint<1>*, ap_uint<3>*, ap_uint<5>*, ap_uint<1>*)' (wb.cpp:110:0)
INFO: [HLS 214-178] Inlining function 'stage_job(ap_uint<3>, w_state_s*, int (*) [32], ap_uint<1>*)' into 'write_back(from_m_to_w_s, int (*) [32], w_state_s*, ap_uint<1>*, ap_uint<1>*, ap_uint<3>*, ap_uint<5>*, ap_uint<1>*)' (wb.cpp:110:0)
INFO: [HLS 214-178] Inlining function 'init_exit(ap_uint<8>, ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'init_f_state(ap_uint<8>, unsigned int*, f_state_s*, ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'init_d_state(ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'init_i_state(ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'init_e_state(ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'init_m_state(ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'init_w_state(ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'statistic_update(from_i_to_e_s, ap_uint<32>*, ap_uint<32>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'running_cond_update(ap_uint<1>*, ap_uint<1>*)' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-178] Inlining function 'lock_unlock_update(ap_uint<1>, ap_uint<3>, ap_uint<5>, ap_uint<1>, ap_uint<3>, ap_uint<5>, ap_uint<1> (*) [32])' into 'multihart_ip(unsigned int, unsigned int*, unsigned int*, int (*) [8192], unsigned int*, unsigned int*)' (multihart_ip.cpp:103:0)
INFO: [HLS 214-248] Applying array_partition to 'reg_file': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (multihart_ip.cpp:112:6)
INFO: [HLS 214-248] Applying array_partition to 'is_reg_computed': Complete partitioning on dimension 1. Complete partitioning on dimension 2. (multihart_ip.cpp:114:8)
INFO: [HLS 214-248] Applying array_partition to 'f_state_is_full': Complete partitioning on dimension 1. (multihart_ip.cpp:118:9)
INFO: [HLS 214-248] Applying array_partition to 'f_state.fetch_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:120:12)
INFO: [HLS 214-248] Applying array_partition to 'f_state.instruction': Complete partitioning on dimension 1. (multihart_ip.cpp:120:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state_is_full': Complete partitioning on dimension 1. (multihart_ip.cpp:124:9)
INFO: [HLS 214-248] Applying array_partition to 'd_state.fetch_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.instruction': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.opcode': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.rd': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.func3': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.rs1': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.rs2': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.func7': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.type': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.imm': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_rs1_reg': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_rs2_reg': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_load': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_store': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_branch': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_jalr': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_jal': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_ret': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_lui': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_op_imm': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.has_no_dest': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.d_i.is_r_type': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'd_state.relative_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:126:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state_is_full': Complete partitioning on dimension 1. (multihart_ip.cpp:131:9)
INFO: [HLS 214-248] Applying array_partition to 'i_state.fetch_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.opcode': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.rd': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.func3': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.rs1': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.rs2': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.func7': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.type': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.imm': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_rs1_reg': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_rs2_reg': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_load': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_store': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_branch': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_jalr': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_jal': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_ret': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_lui': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_op_imm': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.has_no_dest': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.d_i.is_r_type': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.rv1': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.rv2': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.relative_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'i_state.wait_12': Complete partitioning on dimension 1. (multihart_ip.cpp:133:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state_is_full': Complete partitioning on dimension 1. (multihart_ip.cpp:137:9)
INFO: [HLS 214-248] Applying array_partition to 'e_state.rv1': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.rv2': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.fetch_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.opcode': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.rd': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.func3': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.rs1': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.rs2': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.func7': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.type': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.imm': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_rs1_reg': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_rs2_reg': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_load': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_store': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_branch': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_jalr': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_jal': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_ret': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_lui': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_op_imm': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.has_no_dest': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.d_i.is_r_type': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.relative_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.target_pc': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'e_state.is_target': Complete partitioning on dimension 1. (multihart_ip.cpp:139:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state_is_full': Complete partitioning on dimension 1. (multihart_ip.cpp:144:9)
INFO: [HLS 214-248] Applying array_partition to 'm_state.rd': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.has_no_dest': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.is_load': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.is_store': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.func3': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.is_ret': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.address': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.value': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.accessed_h': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'm_state.is_local': Complete partitioning on dimension 1. (multihart_ip.cpp:146:12)
INFO: [HLS 214-248] Applying array_partition to 'w_state_is_full': Complete partitioning on dimension 1. (multihart_ip.cpp:150:9)
INFO: [HLS 214-248] Applying array_partition to 'w_state.value': Complete partitioning on dimension 1. (multihart_ip.cpp:152:12)
INFO: [HLS 214-248] Applying array_partition to 'w_state.rd': Complete partitioning on dimension 1. (multihart_ip.cpp:152:12)
INFO: [HLS 214-248] Applying array_partition to 'w_state.has_no_dest': Complete partitioning on dimension 1. (multihart_ip.cpp:152:12)
INFO: [HLS 214-248] Applying array_partition to 'w_state.is_ret': Complete partitioning on dimension 1. (multihart_ip.cpp:152:12)
INFO: [HLS 214-248] Applying array_partition to 'has_exited': Complete partitioning on dimension 1. (multihart_ip.cpp:154:8)
INFO: [HLS 200-111] Finished Compiling Optimization and Transform: CPU user time: 39.07 seconds. CPU system time: 0.82 seconds. Elapsed time: 40.08 seconds; current allocated memory: 524.410 MB.
INFO: [HLS 200-111] Finished Checking Pragmas: CPU user time: 0.01 seconds. CPU system time: 0 seconds. Elapsed time: 0 seconds; current allocated memory: 524.410 MB.
INFO: [HLS 200-10] Starting code transformations ...
INFO: [XFORM 203-603] Inlining function 'init_file' into 'multihart_ip' (multihart_ip.cpp:179).
INFO: [XFORM 203-603] Inlining function 'new_cycle' into 'multihart_ip' (multihart_ip.cpp:198).
INFO: [XFORM 203-603] Inlining function 'fetch' into 'multihart_ip' (multihart_ip.cpp:203).
INFO: [XFORM 203-603] Inlining function 'decode' into 'multihart_ip' (multihart_ip.cpp:205).
INFO: [XFORM 203-603] Inlining function 'issue' into 'multihart_ip' (multihart_ip.cpp:207).
INFO: [XFORM 203-603] Inlining function 'execute' into 'multihart_ip' (multihart_ip.cpp:210).
INFO: [XFORM 203-603] Inlining function 'mem_access' into 'multihart_ip' (multihart_ip.cpp:215).
INFO: [XFORM 203-603] Inlining function 'write_back' into 'multihart_ip' (multihart_ip.cpp:217).
INFO: [XFORM 203-603] Inlining function 'select_hart' into 'multihart_ip' (fetch.cpp:115->multihart_ip.cpp:203).
INFO: [XFORM 203-603] Inlining function 'select_hart.1' into 'multihart_ip' (decode.cpp:196->multihart_ip.cpp:205).
INFO: [XFORM 203-603] Inlining function 'type' into 'multihart_ip' (decode.cpp:64).
INFO: [XFORM 203-603] Inlining function 'decode_immediate' into 'multihart_ip' (decode.cpp:104).
INFO: [XFORM 203-603] Inlining function 'select_hart.3' into 'multihart_ip' (execute.cpp:181->multihart_ip.cpp:210).
INFO: [XFORM 203-603] Inlining function 'select_hart.4' into 'multihart_ip' (mem_access.cpp:137->multihart_ip.cpp:215).
INFO: [HLS 200-111] Finished Standard Transforms: CPU user time: 7.44 seconds. CPU system time: 0.02 seconds. Elapsed time: 7.48 seconds; current allocated memory: 573.852 MB.
INFO: [HLS 200-10] Checking synthesizability ...
INFO: [HLS 200-111] Finished Checking Synthesizability: CPU user time: 1.7 seconds. CPU system time: 0.02 seconds. Elapsed time: 1.72 seconds; current allocated memory: 617.008 MB.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:31:23) to (decode.cpp:203:17) in function 'multihart_ip'... converting 47 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:208:36) to (decode.cpp:78:3) in function 'multihart_ip'... converting 37 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:227:20) to (mem_access.cpp:144:17) in function 'multihart_ip'... converting 148 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (decode.cpp:105:21) to (decode.cpp:229:42) in function 'multihart_ip'... converting 3 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:149:37) to (mem_access.cpp:50:7) in function 'multihart_ip'... converting 9 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem_access.cpp:165:20) to (wb.cpp:131:7) in function 'multihart_ip'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (mem.cpp:4:14) to (mem_access.cpp:51:12) in function 'multihart_ip'... converting 12 basic blocks.
INFO: [XFORM 203-401] Performing if-conversion on hyperblock from (wb.cpp:132:35) to (wb.cpp:44:7) in function 'multihart_ip'... converting 9 basic blocks.
INFO: [XFORM 203-11] Balancing expressions in function 'multihart_ip' (multihart_ip.cpp:98)...202 expression(s) balanced.
INFO: [HLS 200-111] Finished Loop, function and other optimizations: CPU user time: 15.35 seconds. CPU system time: 0.05 seconds. Elapsed time: 15.42 seconds; current allocated memory: 733.641 MB.
INFO: [HLS 200-111] Finished Architecture Synthesis: CPU user time: 18.52 seconds. CPU system time: 0 seconds. Elapsed time: 18.52 seconds; current allocated memory: 756.004 MB.
INFO: [HLS 200-10] Starting hardware synthesis ...
INFO: [HLS 200-10] Synthesizing 'multihart_ip' ...
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multihart_ip_Pipeline_VITIS_LOOP_189_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
INFO: [SCHED 204-61] Pipelining loop 'VITIS_LOOP_189_1'.
INFO: [HLS 200-1470] Pipelining result : Target II = 2, Final II = 2, Depth = 2, loop 'VITIS_LOOP_189_1'
WARNING: [HLS 200-871] Estimated clock period (14.4678ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-871.html
WARNING: [HLS 200-1016] The critical path in module 'multihart_ip_Pipeline_VITIS_LOOP_189_1' consists of the following:	'alloca' operation ('m_state_is_full_4_0') [479]  (0 ns)
	'load' operation ('m_state_is_full_4_0_load', mem_access.cpp:140->multihart_ip.cpp:215) on local variable 'm_state_is_full_4_0' [2694]  (0 ns)
	'and' operation ('c.V', mem_access.cpp:87->mem_access.cpp:137->multihart_ip.cpp:215) [4979]  (0.978 ns)
	'or' operation ('c45.V', mem_access.cpp:115->mem_access.cpp:137->multihart_ip.cpp:215) [4991]  (0.978 ns)
	'select' operation ('h47', mem_access.cpp:119->mem_access.cpp:137->multihart_ip.cpp:215) [4995]  (0.993 ns)
	'select' operation ('select_ln122', mem_access.cpp:122->mem_access.cpp:137->multihart_ip.cpp:215) [4998]  (0.993 ns)
	'select' operation ('accessing_hart.V', mem_access.cpp:146->multihart_ip.cpp:215) [5108]  (0.98 ns)
	'mux' operation ('value', mem_access.cpp:53) [5403]  (2.3 ns)
	'shl' operation ('shl_ln86_2', mem.cpp:86) [5423]  (3.99 ns)
	'store' operation ('data_ram_addr_2_write_ln86', mem.cpp:86) of constant <constant:_ssdm_op_Write.bram.p0i32> on array 'data_ram' [5427]  (3.25 ns)

Resolution: For help on HLS 200-1016 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-1016.html
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 1041.85 seconds. CPU system time: 2.03 seconds. Elapsed time: 1043.94 seconds; current allocated memory: 4.188 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 6.86 seconds. CPU system time: 0.03 seconds. Elapsed time: 6.91 seconds; current allocated memory: 4.188 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-42] -- Implementing module 'multihart_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [SCHED 204-11] Starting scheduling ...
WARNING: [HLS 200-871] Estimated clock period (13.8463ns) exceeds the target (target clock period: 10ns, clock uncertainty: 2.7ns, effective delay budget: 7.3ns).
Resolution: For help on HLS 200-871 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-871.html
WARNING: [HLS 200-1016] The critical path in module 'multihart_ip' consists of the following:	'call' operation ('_ln947') to 'multihart_ip_Pipeline_VITIS_LOOP_189_1' [74]  (13.8 ns)

Resolution: For help on HLS 200-1016 see www.xilinx.com/cgi-bin/docs/rdoc?v=2022.1;t=hls+guidance;d=200-1016.html
INFO: [SCHED 204-11] Finished scheduling.
INFO: [HLS 200-111] Finished Scheduling: CPU user time: 7.18 seconds. CPU system time: 0.04 seconds. Elapsed time: 7.23 seconds; current allocated memory: 4.188 GB.
INFO: [BIND 205-100] Starting micro-architecture generation ...
INFO: [BIND 205-101] Performing variable lifetime analysis.
INFO: [BIND 205-101] Exploring resource sharing.
INFO: [BIND 205-101] Binding ...
INFO: [BIND 205-100] Finished micro-architecture generation.
INFO: [HLS 200-111] Finished Binding: CPU user time: 1.55 seconds. CPU system time: 0 seconds. Elapsed time: 1.55 seconds; current allocated memory: 4.188 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multihart_ip_Pipeline_VITIS_LOOP_189_1' 
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [RTGEN 206-104] Estimated max fanout for 'multihart_ip_Pipeline_VITIS_LOOP_189_1' is 8439 from HDL expression: ((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))
INFO: [RTGEN 206-100] Generating core module 'mux_325_1_1_1': 32 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_325_32_1_1': 16 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_16_1_1': 6 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_18_1_1': 1 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_1_1_1': 34 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_20_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_32_1_1': 9 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_3_1_1': 6 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_5_1_1': 8 instance(s).
INFO: [RTGEN 206-100] Generating core module 'mux_83_7_1_1': 2 instance(s).
INFO: [RTGEN 206-100] Finished creating RTL model for 'multihart_ip_Pipeline_VITIS_LOOP_189_1'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 6.04 seconds. CPU system time: 0.01 seconds. Elapsed time: 6.05 seconds; current allocated memory: 4.188 GB.
INFO: [HLS 200-10] ----------------------------------------------------------------
INFO: [HLS 200-10] -- Generating RTL for module 'multihart_ip' 
INFO: [HLS 200-10] ----------------------------------------------------------------
WARNING: [RTGEN 206-101] Design contains AXI ports. Reset is fixed to synchronous and active low.
INFO: [RTGEN 206-500] Setting interface mode on port 'multihart_ip/running_hart_set' to 's_axilite & ap_none'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multihart_ip/start_pc' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multihart_ip/code_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multihart_ip/data_ram' to 's_axilite & ap_memory'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multihart_ip/nb_instruction' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on port 'multihart_ip/nb_cycle' to 's_axilite & ap_vld'.
INFO: [RTGEN 206-500] Setting interface mode on function 'multihart_ip' to 's_axilite & ap_ctrl_hs'.
INFO: [RTGEN 206-100] Bundling port 'running_hart_set', 'start_pc', 'nb_instruction', 'nb_cycle', 'code_ram', 'data_ram' to AXI-Lite port control.
INFO: [RTGEN 206-100] Finished creating RTL model for 'multihart_ip'.
INFO: [HLS 200-111] Finished Creating RTL model: CPU user time: 16.47 seconds. CPU system time: 0.08 seconds. Elapsed time: 16.57 seconds; current allocated memory: 4.188 GB.
INFO: [HLS 200-111] Finished Generating all RTL models: CPU user time: 7.73 seconds. CPU system time: 0.02 seconds. Elapsed time: 7.74 seconds; current allocated memory: 4.188 GB.
INFO: [HLS 200-111] Finished Updating report files: CPU user time: 0.74 seconds. CPU system time: 0.02 seconds. Elapsed time: 0.78 seconds; current allocated memory: 4.188 GB.
INFO: [VHDL 208-304] Generating VHDL RTL for multihart_ip.
INFO: [VLOG 209-307] Generating Verilog RTL for multihart_ip.
INFO: [HLS 200-790] **** Loop Constraint Status: All loop constraints were satisfied.
INFO: [HLS 200-789] **** Estimated Fmax: 69.12 MHz
INFO: [HLS 200-111] Finished Command csynth_design CPU user time: 1203 seconds. CPU system time: 6.91 seconds. Elapsed time: 1209.99 seconds; current allocated memory: 2.726 GB.
INFO: [HLS 200-112] Total CPU user time: 1205.98 seconds. Total CPU system time: 7.31 seconds. Total elapsed time: 1212.01 seconds; peak allocated memory: 4.188 GB.
