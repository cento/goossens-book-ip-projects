// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="multihart_ip_multihart_ip,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.369100,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=256,HLS_SYN_DSP=0,HLS_SYN_FF=8505,HLS_SYN_LUT=17600,HLS_VERSION=2022_1}" *)

module multihart_ip (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 20;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] running_hart_set;
reg   [1:0] start_pc_address0;
reg    start_pc_ce0;
wire   [31:0] start_pc_q0;
wire   [31:0] code_ram_q0;
wire   [31:0] data_ram_q0;
reg    nb_instruction_ap_vld;
reg    nb_cycle_ap_vld;
wire   [15:0] f_state_fetch_pc_V_fu_169_p1;
reg   [15:0] f_state_fetch_pc_V_reg_262;
wire    ap_CS_fsm_state2;
wire   [15:0] f_state_fetch_pc_V_31_fu_173_p1;
reg   [15:0] f_state_fetch_pc_V_31_reg_272;
wire    ap_CS_fsm_state3;
wire   [15:0] f_state_fetch_pc_V_32_fu_177_p1;
reg   [15:0] f_state_fetch_pc_V_32_reg_282;
wire    ap_CS_fsm_state4;
wire   [0:0] h_running_V_fu_181_p1;
reg   [0:0] h_running_V_reg_292;
wire    ap_CS_fsm_state5;
wire   [0:0] has_exited_V_fu_185_p2;
reg   [0:0] has_exited_V_reg_297;
wire   [0:0] h_running_V_4_fu_191_p3;
reg   [0:0] h_running_V_4_reg_302;
wire   [0:0] has_exited_V_1_fu_199_p2;
reg   [0:0] has_exited_V_1_reg_307;
wire   [0:0] h_running_V_5_fu_205_p3;
reg   [0:0] h_running_V_5_reg_312;
wire   [0:0] has_exited_V_2_fu_213_p2;
reg   [0:0] has_exited_V_2_reg_317;
wire   [0:0] h_running_V_6_fu_219_p3;
reg   [0:0] h_running_V_6_reg_322;
wire   [0:0] has_exited_V_3_fu_227_p2;
reg   [0:0] has_exited_V_3_reg_327;
wire   [15:0] f_state_fetch_pc_V_33_fu_233_p1;
reg   [15:0] f_state_fetch_pc_V_33_reg_332;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_done;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_idle;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_ready;
wire   [15:0] grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_code_ram_address0;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_code_ram_ce0;
wire   [15:0] grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_address0;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_ce0;
wire   [3:0] grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_we0;
wire   [31:0] grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_d0;
wire   [31:0] grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbi_V_1_out;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbi_V_1_out_ap_vld;
wire   [31:0] grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbc_V_1_out;
wire    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbc_V_1_out_ap_vld;
reg    grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg   [31:0] nbi_V_1_loc_fu_82;
reg   [31:0] nbc_V_1_loc_fu_78;
wire    ap_CS_fsm_state8;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start_reg = 1'b0;
end

multihart_ip_multihart_ip_Pipeline_VITIS_LOOP_187_1 grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start),
    .ap_done(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_done),
    .ap_idle(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_idle),
    .ap_ready(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_ready),
    .has_exited_V(has_exited_V_reg_297),
    .has_exited_V_1(has_exited_V_1_reg_307),
    .has_exited_V_2(has_exited_V_2_reg_317),
    .has_exited_V_3(has_exited_V_3_reg_327),
    .f_state_fetch_pc_V_3(f_state_fetch_pc_V_33_reg_332),
    .f_state_fetch_pc_V_2(f_state_fetch_pc_V_32_reg_282),
    .f_state_fetch_pc_V_1(f_state_fetch_pc_V_31_reg_272),
    .f_state_fetch_pc_V(f_state_fetch_pc_V_reg_262),
    .h_running_V_6(h_running_V_6_reg_322),
    .h_running_V_5(h_running_V_5_reg_312),
    .h_running_V_4(h_running_V_4_reg_302),
    .h_running_V(h_running_V_reg_292),
    .code_ram_address0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_code_ram_address0),
    .code_ram_ce0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_code_ram_ce0),
    .code_ram_q0(code_ram_q0),
    .data_ram_address0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_address0),
    .data_ram_ce0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_ce0),
    .data_ram_we0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_we0),
    .data_ram_d0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_d0),
    .data_ram_q0(data_ram_q0),
    .nbi_V_1_out(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbi_V_1_out),
    .nbi_V_1_out_ap_vld(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbi_V_1_out_ap_vld),
    .nbc_V_1_out(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbc_V_1_out),
    .nbc_V_1_out_ap_vld(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbc_V_1_out_ap_vld)
);

multihart_ip_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .running_hart_set(running_hart_set),
    .start_pc_address0(start_pc_address0),
    .start_pc_ce0(start_pc_ce0),
    .start_pc_q0(start_pc_q0),
    .nb_instruction(nbi_V_1_loc_fu_82),
    .nb_instruction_ap_vld(nb_instruction_ap_vld),
    .nb_cycle(nbc_V_1_loc_fu_78),
    .nb_cycle_ap_vld(nb_cycle_ap_vld),
    .code_ram_address0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_code_ram_address0),
    .code_ram_ce0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_code_ram_ce0),
    .code_ram_q0(code_ram_q0),
    .data_ram_address0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_address0),
    .data_ram_ce0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_ce0),
    .data_ram_we0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_we0),
    .data_ram_d0(grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_data_ram_d0),
    .data_ram_q0(data_ram_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start_reg <= 1'b1;
        end else if ((grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_ready == 1'b1)) begin
            grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        f_state_fetch_pc_V_31_reg_272 <= f_state_fetch_pc_V_31_fu_173_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        f_state_fetch_pc_V_32_reg_282 <= f_state_fetch_pc_V_32_fu_177_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        f_state_fetch_pc_V_33_reg_332 <= f_state_fetch_pc_V_33_fu_233_p1;
        h_running_V_4_reg_302 <= running_hart_set[32'd1];
        h_running_V_5_reg_312 <= running_hart_set[32'd2];
        h_running_V_6_reg_322 <= running_hart_set[32'd3];
        h_running_V_reg_292 <= h_running_V_fu_181_p1;
        has_exited_V_1_reg_307 <= has_exited_V_1_fu_199_p2;
        has_exited_V_2_reg_317 <= has_exited_V_2_fu_213_p2;
        has_exited_V_3_reg_327 <= has_exited_V_3_fu_227_p2;
        has_exited_V_reg_297 <= has_exited_V_fu_185_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        f_state_fetch_pc_V_reg_262 <= f_state_fetch_pc_V_fu_169_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbc_V_1_out_ap_vld == 1'b1))) begin
        nbc_V_1_loc_fu_78 <= grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbc_V_1_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbi_V_1_out_ap_vld == 1'b1))) begin
        nbi_V_1_loc_fu_82 <= grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_nbi_V_1_out;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        nb_cycle_ap_vld = 1'b1;
    end else begin
        nb_cycle_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        nb_instruction_ap_vld = 1'b1;
    end else begin
        nb_instruction_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        start_pc_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        start_pc_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        start_pc_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        start_pc_address0 = 64'd0;
    end else begin
        start_pc_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        start_pc_ce0 = 1'b1;
    end else begin
        start_pc_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign f_state_fetch_pc_V_31_fu_173_p1 = start_pc_q0[15:0];

assign f_state_fetch_pc_V_32_fu_177_p1 = start_pc_q0[15:0];

assign f_state_fetch_pc_V_33_fu_233_p1 = start_pc_q0[15:0];

assign f_state_fetch_pc_V_fu_169_p1 = start_pc_q0[15:0];

assign grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start = grp_multihart_ip_Pipeline_VITIS_LOOP_187_1_fu_147_ap_start_reg;

assign h_running_V_4_fu_191_p3 = running_hart_set[32'd1];

assign h_running_V_5_fu_205_p3 = running_hart_set[32'd2];

assign h_running_V_6_fu_219_p3 = running_hart_set[32'd3];

assign h_running_V_fu_181_p1 = running_hart_set[0:0];

assign has_exited_V_1_fu_199_p2 = (h_running_V_4_fu_191_p3 ^ 1'd1);

assign has_exited_V_2_fu_213_p2 = (h_running_V_5_fu_205_p3 ^ 1'd1);

assign has_exited_V_3_fu_227_p2 = (h_running_V_6_fu_219_p3 ^ 1'd1);

assign has_exited_V_fu_185_p2 = (h_running_V_fu_181_p1 ^ 1'd1);

endmodule //multihart_ip
